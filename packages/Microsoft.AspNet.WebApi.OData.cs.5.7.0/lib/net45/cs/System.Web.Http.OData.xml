<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http.OData</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ODataHttpRequestMessageExtensions">
      <summary>Poskytuje rozšiřující metody pro třídu <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.CreateODataErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,Microsoft.Data.OData.ODataError)">
      <summary>Pomocná metoda, která provede vyjednávání obsahu a vytvoří objekt <see cref="T:System.Net.Http.HttpResponseMessage" /> představující chybu s instancí <see cref="T:System.Net.Http.ObjectContent`1" />, do které je jako obsah zabalena chyba <paramref name="oDataError" />.Pokud není formátování nalezeno, vrátí tato metoda odpověď se stavem 406 NotAcceptable.Tato metoda vyžaduje, aby byl požadavek <paramref name="request" /> přidružen k instanci <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
      <returns>Zabalení odpovědi na chybu <paramref name="oDataError" /> se stavovým kódem <paramref name="statusCode" />.</returns>
      <param name="request">Požadavek vyjadřující zájem.</param>
      <param name="statusCode">Stavový kód vytvořené odpovědi.</param>
      <param name="oDataError">Chyba OData, která má být zabalena.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetEdmModel(System.Net.Http.HttpRequestMessage)">
      <summary>Získá model EDM přidružený k požadavku.</summary>
      <returns>Model EDM přidružený k požadavku, a pokud neexistuje, hodnota null.</returns>
      <param name="request">Žádost</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetInlineCount(System.Net.Http.HttpRequestMessage)">
      <summary>Získá vložený počet pro odpověď prostředí OData.Hodnota null, pokud se nemá klientovi odeslat žádný počet.</summary>
      <returns>Vložený počet, který se má odeslat zpět klientovi, nebo hodnota null, pokud se nemá klientovi odeslat žádný počet.</returns>
      <param name="request">Žádost</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetNextPageLink(System.Net.Http.HttpRequestMessage)">
      <summary>Získá odkaz na další stránku pro odpověď prostředí OData.</summary>
      <returns>Odkaz na další stránku, který se má odeslat zpět klientovi, nebo hodnota null, pokud se nemá klientovi odeslat žádný odkaz na další stránku.</returns>
      <param name="request">Žádost</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataPath(System.Net.Http.HttpRequestMessage)">
      <summary>Získá cestu OData dané žádosti.</summary>
      <returns>Cesta OData požadavku nebo hodnota null, pokud není k dispozici.</returns>
      <param name="request">Žádost</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataPathHandler(System.Net.Http.HttpRequestMessage)">
      <summary>Získá objekt <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> pro generování odkazů.Pokud je aktuálně nastavena hodnota null, vytvoří výchozí objekt <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" />.</summary>
      <returns>Objekt <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> pro generování odkazů.</returns>
      <param name="request">Žádost</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataRouteName(System.Net.Http.HttpRequestMessage)">
      <summary>Získá název trasy pro generování odkazů OData.</summary>
      <returns>Název trasy pro generování odkazů OData nebo hodnota null, pokud není k dispozici.</returns>
      <param name="request">Žádost</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataRoutingConventions(System.Net.Http.HttpRequestMessage)">
      <summary>Získá konvence trasování OData pro výběr kontroleru a akce.</summary>
      <returns>Konvence trasování OData pro výběr kontroleru a akce nebo hodnota null, pokud nejsou k dispozici.</returns>
      <param name="request">Žádost</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetRoutingConventionsDataStore(System.Net.Http.HttpRequestMessage)">
      <summary>Získá datové úložiště používané konvencemi <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> k ukládání dat vlastní trasy.Při prvním volání vytvoří nový objekt IDictionary&lt;string, object&gt;.</summary>
      <returns>Datové úložiště používané konvencemi <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> k ukládání dat vlastní trasy.</returns>
      <param name="request">Žádost</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetSelectExpandClause(System.Net.Http.HttpRequestMessage)">
      <summary>Získá analyzovanou klauzuli OData <see cref="T:Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause" /> daného požadavku.Modul <see cref="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter" /> tuto informaci (pokud existuje) použije při zápisu odpovědi na tento požadavek.</summary>
      <returns>Analyzovaná klauzule OData <see cref="T:Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause" /> požadavku nebo hodnota null, pokud není k dispozici.</returns>
      <param name="request">Žádost</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetEdmModel(System.Net.Http.HttpRequestMessage,Microsoft.Data.Edm.IEdmModel)">
      <summary>Nastaví model EDM přidružený k požadavku.</summary>
      <param name="request">Žádost</param>
      <param name="model">Model EDM, který se má přidružit k žádosti.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetInlineCount(System.Net.Http.HttpRequestMessage,System.Int64)">
      <summary>Nastaví vložený počet pro odpověď prostředí OData.</summary>
      <param name="request">Žádost</param>
      <param name="inlineCount">Vložený počet, který má být odeslán zpět klientovi.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetNextPageLink(System.Net.Http.HttpRequestMessage,System.Uri)">
      <summary>Nastaví odkaz na další stránku pro odpověď prostředí OData.</summary>
      <param name="request">Žádost</param>
      <param name="nextPageLink">Odkaz na další stránku, který má být odeslán zpět klientovi.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataPath(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Routing.ODataPath)">
      <summary>Nastaví cestu OData daného požadavku.</summary>
      <param name="request">Žádost</param>
      <param name="odataPath">Cesta OData daného požadavku.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataPathHandler(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Routing.IODataPathHandler)">
      <summary>Nastaví objekt <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> pro generování odkazů.</summary>
      <param name="request">Žádost</param>
      <param name="pathHandler">Objekt <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> pro generování odkazů.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataRouteName(System.Net.Http.HttpRequestMessage,System.String)">
      <summary>Nastaví název trasy pro generování odkazů OData.</summary>
      <param name="request">Žádost</param>
      <param name="routeName">Název trasy pro generování odkazů OData.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataRoutingConventions(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary>Nastaví konvence trasování OData pro výběr kontroleru a akce.</summary>
      <param name="request">Žádost</param>
      <param name="routingConventions">Konvence trasování OData pro výběr kontroleru a akce.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetSelectExpandClause(System.Net.Http.HttpRequestMessage,Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause)">
      <summary>Nastaví analyzovanou klauzuli OData <see cref="T:Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause" /> daného požadavku.Modul <see cref="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter" /> tuto informaci (pokud existuje) použije při zápisu odpovědi na tento požadavek.</summary>
      <param name="request">Žádost</param>
      <param name="selectExpandClause">Analyzovaná klauzule OData <see cref="T:Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause" /> daného požadavku.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpConfigurationExtensions">
      <summary>Poskytuje rozšiřující metody pro třídu <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableQuerySupport(System.Web.Http.HttpConfiguration)">
      <summary>Povolí podporu dotazů pro akce s návratovým typem <see cref="T:System.Linq.IQueryable" /> nebo <see cref="T:System.Linq.IQueryable`1" />.Chcete-li se vyhnout zpracování neočekávaných nebo nebezpečných dotazů, pomocí nastavení ověření u atributu <see cref="T:System.Web.Http.OData.EnableQueryAttribute" /> proveďte ověření příchozích dotazů.Další informace naleznete na stránce http://go.microsoft.com/fwlink/?LinkId=279712.</summary>
      <param name="configuration">Konfigurace serveru.</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableQuerySupport(System.Web.Http.HttpConfiguration,System.Web.Http.Filters.IActionFilter)">
      <summary>Povolí podporu dotazů pro akce s návratovým typem <see cref="T:System.Linq.IQueryable" /> nebo <see cref="T:System.Linq.IQueryable`1" />.Chcete-li se vyhnout zpracování neočekávaných nebo nebezpečných dotazů, pomocí nastavení ověření u atributu <see cref="T:System.Web.Http.OData.EnableQueryAttribute" /> proveďte ověření příchozích dotazů.Další informace naleznete na stránce http://go.microsoft.com/fwlink/?LinkId=279712.</summary>
      <param name="configuration">Konfigurace serveru.</param>
      <param name="queryFilter">Filtr akcí, který provede daný dotaz.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpErrorExtensions">
      <summary>Poskytuje rozšiřující metody pro třídu <see cref="T:System.Web.Http.HttpError" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataHttpErrorExtensions.ToODataError(System.Web.Http.HttpError)">
      <summary>Převede položku <paramref name="httpError" /> na položku <see cref="T:Microsoft.Data.OData.ODataError" />.</summary>
      <returns>Převedená položka <see cref="T:Microsoft.Data.OData.ODataError" /></returns>
      <param name="httpError">Instance položky <see cref="T:System.Web.Http.HttpError" />, která má být převedena.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpRouteCollectionExtensions">
      <summary>Poskytuje rozšiřující metody pro třídu <see cref="T:System.Web.Http.HttpRouteCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel)">
      <summary>Mapuje zadanou trasu OData.</summary>
      <param name="routes">Kolekce tras pro aplikaci</param>
      <param name="routeName">Název mapované trasy</param>
      <param name="routePrefix">Předpona, která se má přidat k šabloně cesty trasy OData.</param>
      <param name="model">Model EDM, který se má použít k analýze cest OData.</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Batch.ODataBatchHandler)">
      <summary>Mapuje zadanou trasu OData.Pokud je zadána položka <paramref name="batchHandler" />, vytvoří koncový bod $batch pro zpracování dávkových žádostí.</summary>
      <param name="routes">Kolekce tras pro aplikaci</param>
      <param name="routeName">Název mapované trasy</param>
      <param name="routePrefix">Předpona, která se má přidat k šabloně cesty trasy OData.</param>
      <param name="model">Model EDM, který se má použít k analýze cest OData.</param>
      <param name="batchHandler">Objekt <see cref="T:System.Web.Http.OData.Batch.ODataBatchHandler" /></param>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary>Mapuje zadanou trasu OData.</summary>
      <param name="routes">Kolekce tras pro aplikaci</param>
      <param name="routeName">Název mapované trasy</param>
      <param name="routePrefix">Předpona, která se má přidat k šabloně cesty trasy OData.</param>
      <param name="model">Model EDM, který se má použít k analýze cest OData.</param>
      <param name="pathHandler">Objekt <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" />, který se má použít k analýze cesty OData.</param>
      <param name="routingConventions">Konvence trasování OData, které se mají použít při výběru kontroleru a akce.</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention},System.Web.Http.OData.Batch.ODataBatchHandler)">
      <summary>Mapuje zadanou trasu OData.Pokud je zadána položka <paramref name="batchHandler" />, vytvoří koncový bod $batch pro zpracování dávkových žádostí.</summary>
      <param name="routes">Kolekce tras pro aplikaci</param>
      <param name="routeName">Název mapované trasy</param>
      <param name="routePrefix">Předpona, která se má přidat k šabloně cesty trasy OData.</param>
      <param name="model">Model EDM, který se má použít k analýze cest OData.</param>
      <param name="pathHandler">Objekt <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" />, který se má použít k analýze cesty OData.</param>
      <param name="routingConventions">Konvence trasování OData, které se mají použít při výběru kontroleru a akce.</param>
      <param name="batchHandler">Objekt <see cref="T:System.Web.Http.OData.Batch.ODataBatchHandler" /></param>
    </member>
    <member name="T:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions">
      <summary>Poskytuje rozšiřující metody pro třídu <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions.AddRange(System.Net.Http.Formatting.MediaTypeFormatterCollection,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Přidá elementy vybrané kolekce na konec kolekce <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />.</summary>
      <param name="collection">Kolekce, ke které mají být položky přidány.</param>
      <param name="items">Položky, které mají být přidány na konec kolekce <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />.Samotná kolekce položek nesmí mít hodnotu <see cref="null" />, ale může obsahovat elementy s hodnotou <see cref="null" />.</param>
    </member>
    <member name="M:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions.InsertRange(System.Net.Http.Formatting.MediaTypeFormatterCollection,System.Int32,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Vloží elementy kolekce do kolekce <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> s ohledem na zadaný index.</summary>
      <param name="index">Index o základu 0, na jehož pozici mají být nové prvky vloženy.</param>
      <param name="items">Položky, které se mají vložit do kolekce <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />.Samotná kolekce položek nesmí mít hodnotu <see cref="null" />, ale může obsahovat elementy s hodnotou <see cref="null" />.</param>
    </member>
    <member name="T:System.Web.Http.ODataUrlHelperExtensions">
      <summary>Poskytuje rozšiřující metody pro třídu <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>Vygeneruje odkaz OData pomocí názvu trasy OData daného požadavku, obslužné rutiny cesty a daných segmentů.</summary>
      <returns>Vygenerovaný odkaz OData.</returns>
      <param name="urlHelper">Pomocný objekt adresy URL</param>
      <param name="segments">Segmenty cesty OData.</param>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.String,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>Vygeneruje odkaz OData pomocí daného názvu trasy OData, obslužné rutiny cesty a segmentů.</summary>
      <returns>Vygenerovaný odkaz OData.</returns>
      <param name="urlHelper">Pomocný objekt adresy URL</param>
      <param name="routeName">Název trasy OData.</param>
      <param name="pathHandler">Obslužná rutina cesty, která se má použít k vygenerování odkazu.</param>
      <param name="segments">Segmenty cesty OData.</param>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.Web.Http.OData.Routing.ODataPathSegment[])">
      <summary>Vygeneruje odkaz OData pomocí názvu trasy OData daného požadavku, obslužné rutiny cesty a daných segmentů.</summary>
      <returns>Vygenerovaný odkaz OData.</returns>
      <param name="urlHelper">Pomocný objekt adresy URL</param>
      <param name="segments">Segmenty cesty OData.</param>
    </member>
    <member name="T:System.Web.Http.QueryableAttribute">
      <summary>Umožňuje, aby akce kontroleru podporovala parametry dotazu OData.</summary>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.QueryableAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.AsyncEntitySetController`2">
      <summary>Poskytuje příhodný výchozí bod pro kontroler, který zveřejňuje sadu entit OData.Jedná se o asynchronní verzi kontroleru <see cref="T:System.Web.Http.OData.EntitySetController`2" />.</summary>
      <typeparam name="TEntity">Typ přidružený k typu entity zveřejněné sady entit.</typeparam>
      <typeparam name="TKey">Typ přidružený ke klíči entity pro typ entity zveřejněné sady entit.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.#ctor"></member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.CreateEntityAsync(`0)">
      <summary>Tato metoda by měla být potlačena za účelem vytvoření nové entity v sadě entit.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" /> obsahující po dokončení vytvořenou entitu.</returns>
      <param name="entity">Entita, která má být přidána do sady entit.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.CreateLink(`1,System.String,System.Uri)">
      <summary>Za účelem zpracování požadavků POST a PUT, které se pokoušejí o vytvoření spoje mezi dvěma entitami, by měla být tato metoda potlačena.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" />, která se dokončí po úspěšném vytvoření odkazu.</returns>
      <param name="key">Klíč entity s navigační vlastností.</param>
      <param name="navigationProperty">Název navigační vlastnosti.</param>
      <param name="link">Identifikátor URI entity, pro kterou se má vytvořit spoj.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Delete(`1)">
      <summary>Tato metoda by měla být přepsána za účelem zpracování požadavků DELETE k odstranění stávajících entit ze sady entit.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" />, která se dokončí po úspěšném odstranění entity.</returns>
      <param name="key">Klíč entity, která má být odstraněna.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.DeleteLink(`1,System.String,System.String)">
      <summary>Tato metoda by se měla potlačit za účelem zpracování požadavků DELETE, které se pokoušejí o přerušení vztahu mezi dvěma entitami.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" />, která se dokončí po úspěšném odstranění odkazu.</returns>
      <param name="key">Klíč entity s navigační vlastností.</param>
      <param name="relatedKey">Klíč související entity.</param>
      <param name="navigationProperty">Název navigační vlastnosti.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.DeleteLink(`1,System.String,System.Uri)">
      <summary>Tato metoda by se měla potlačit za účelem zpracování požadavků DELETE, které se pokoušejí o přerušení vztahu mezi dvěma entitami.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" />, která se dokončí po úspěšném odstranění odkazu.</returns>
      <param name="key">Klíč entity s navigační vlastností.</param>
      <param name="navigationProperty">Název navigační vlastnosti.</param>
      <param name="link">Identifikátor URI entity, která má být odebrána z navigační vlastnosti.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Get">
      <summary>Tato metoda by měla být potlačena za účelem zpracování požadavků GET, které se pokoušejí o načtení entity ze sady entit.Tato metoda by měla asynchronně vypočíst odpovídající entity s využitím voleb dotazu daného požadavku.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" />, která po dokončení obsahuje odpovídající entity ze sady entit.</returns>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Get(`1)">
      <summary>Zpracovává požadavky GET, které se pokoušejí o načtení jednotlivých entit ze sady entit podle klíče.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" /> obsahující zprávu s odpovědí, která má být po dokončení odeslána zpět klientovi.</returns>
      <param name="key">Klíč entity, která má být načtena.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.GetEntityByKeyAsync(`1)">
      <summary>Tato metoda by měla být potlačena za účelem načtení entity ze sady entit podle klíče.</summary>
      <returns>Načtená úloha <see cref="T:System.Threading.Tasks.Task" /> obsahující po dokončení načtenou entitu, nebo hodnota null, pokud v sadě entit nelze najít zadaný klíč entity.</returns>
      <param name="key">Klíč entity, která má být načtena.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.GetKey(`0)">
      <summary>Tato metoda by měla být potlačena za účelem získání klíče zadané entity.</summary>
      <returns>Hodnota klíče entity.</returns>
      <param name="entity">Entita.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.HandleUnmappedRequest(System.Web.Http.OData.Routing.ODataPath)">
      <summary>Tato metoda by měla být potlačena za účelem zpracování všech nemapovaných požadavků OData.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" /> obsahující zprávu s odpovědí, která má být po dokončení odeslána zpět klientovi.</returns>
      <param name="odataPath">Cesta OData daného požadavku.</param>
    </member>
    <member name="P:System.Web.Http.OData.AsyncEntitySetController`2.ODataPath">
      <summary>Získá cestu OData aktuálního požadavku.</summary>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Patch(`1,System.Web.Http.OData.Delta{`0})">
      <summary>Zpracovává požadavky PATCH a MERGE za účelem částečné aktualizace jedné entity v sadě entit.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" /> obsahující zprávu s odpovědí, která má být po dokončení odeslána zpět klientovi.</returns>
      <param name="key">Klíč entity, která má být aktualizována.</param>
      <param name="patch">Oprava, která představuje částečnou aktualizaci.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.PatchEntityAsync(`1,System.Web.Http.OData.Delta{`0})">
      <summary>Tato metoda by měla být potlačena za účelem použití částečné aktualizace na stávající entitu v sadě entit.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" /> obsahující po dokončení aktualizovanou entitu.</returns>
      <param name="key">Klíč entity, která má být aktualizována.</param>
      <param name="patch">Oprava, která představuje částečnou aktualizaci.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Post(`0)">
      <summary>Zpracovává požadavky POST, které vytvářejí nové entity v sadě entit.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" /> obsahující zprávu s odpovědí, která má být po dokončení odeslána zpět klientovi.</returns>
      <param name="entity">Entita, která má být vložena do sady entit.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Put(`1,`0)">
      <summary>Zpracovává požadavky PUT, které se pokoušejí o náhradu jedné entity v sadě entit.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" /> obsahující zprávu s odpovědí, která má být po dokončení odeslána zpět klientovi.</returns>
      <param name="key">Klíč entity, která má být nahrazena.</param>
      <param name="update">Aktualizovaná entita.</param>
    </member>
    <member name="P:System.Web.Http.OData.AsyncEntitySetController`2.QueryOptions">
      <summary>Získá možnosti dotazu OData aktuálního požadavku.</summary>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.UpdateEntityAsync(`1,`0)">
      <summary>Tato metoda by měla být potlačena za účelem aktualizace stávající entity v sadě entit.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" /> obsahující po dokončení aktualizovanou entitu.</returns>
      <param name="key">Klíč entity, která má být aktualizována.</param>
      <param name="update">Aktualizovaná entita.</param>
    </member>
    <member name="T:System.Web.Http.OData.ClrTypeAnnotation">
      <summary>Reprezentuje mapování z typu <see cref="T:Microsoft.Data.Edm.IEdmType" /> na typ CLR.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ClrTypeAnnotation.#ctor(System.Type)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.ClrTypeAnnotation" />.</summary>
      <param name="clrType">Základní typ CLR pro typ EDM.</param>
    </member>
    <member name="P:System.Web.Http.OData.ClrTypeAnnotation.ClrType">
      <summary>Základní typ CLR pro typ EDM.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Delta">
      <summary>Třída, která sleduje změny (např.položku delta) pro entitu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Delta" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta.Clear">
      <summary>Vymaže položku delta a obnoví základní entitu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta.GetChangedPropertyNames">
      <summary>Vrátí vlastnosti, které byly upraveny prostřednictvím této položky delta, jako výčet názvů vlastností.</summary>
      <returns>Vrací objekt <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta.GetUnchangedPropertyNames">
      <summary>Vrátí vlastnosti, které nebyly upraveny prostřednictvím této položky delta, jako výčtový objekt názvů vlastností.</summary>
      <returns>Vrací objekt <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Potlačí metodu DynamicObject TryGetMember, takže lze získat pouze vlastnosti dané entity.</summary>
      <returns>Vrací objekt <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta.TryGetPropertyType(System.String,System.Type@)">
      <summary>Pokusí se získat typ <see cref="T:System.Type" /> vlastnosti s názvem <paramref name="name" /> ze základní entity.</summary>
      <returns>Vrátí hodnotu true, pokud byla vlastnost nalezena, a v opačném případě hodnotu false.</returns>
      <param name="name">Název vlastnosti</param>
      <param name="type">Typ vlastnosti</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Pokusí se získat hodnotu vlastnosti s názvem <paramref name="name" /> ze základní entity.</summary>
      <returns>Hodnota true, byla-li vlastnost nalezena.</returns>
      <param name="name">Název vlastnosti</param>
      <param name="value">Hodnota vlastnosti</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Potlačí metodu DynamicObject TrySetMember, takže lze nastavit pouze vlastnosti entity.</summary>
      <returns>Vrací objekt <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta.TrySetPropertyValue(System.String,System.Object)">
      <summary>Pokusí se nastavit vlastnost s názvem <paramref name="name" /> na zadanou hodnotu <paramref name="value" />.</summary>
      <returns>Hodnota true v případě úspěchu</returns>
      <param name="name">Název vlastnosti</param>
      <param name="value">Nová hodnota vlastnosti</param>
    </member>
    <member name="T:System.Web.Http.OData.Delta`1">
      <summary>Třída, která sleduje změny (např.položka delta) pro určitý typ <paramref name="TEntityType" />.</summary>
      <typeparam name="TEntityType">TEntityType je základní typ entity, pro který tato položka delta sleduje změny.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Delta`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.#ctor(System.Type)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Delta`1" />.</summary>
      <param name="entityType">Odvozený typ entity, pro který se mají sledovat změny.Typ <paramref name="entityType" /> by měl být přiřaditelný k instancím typu <paramref name="TEntityType" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Delta`1" />.</summary>
      <param name="entityType">Odvozený typ entity, pro který se mají sledovat změny.Typ <paramref name="entityType" /> by měl být přiřaditelný k instancím typu <paramref name="TEntityType" />.</param>
      <param name="updatableProperties">Sada vlastností, které mohou být aktualizovány nebo resetovány.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Clear">
      <summary>Vymaže položku delta a obnoví základní entitu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.CopyChangedValues(`0)">
      <summary>Zkopíruje hodnoty změněných vlastností ze základní entity (která je dostupná prostřednictvím položky <see cref="M:System.Web.Http.OData.Delta`1.GetEntity" />) do entity <paramref name="original" />.</summary>
      <param name="original">Entita, která má být aktualizována.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.CopyUnchangedValues(`0)">
      <summary>Zkopíruje hodnoty nezměněných vlastností ze základní entity (která je dostupná prostřednictvím položky <see cref="M:System.Web.Http.OData.Delta`1.GetEntity" />) do entity <paramref name="original" />.</summary>
      <param name="original">Entita, která má být aktualizována.</param>
    </member>
    <member name="P:System.Web.Http.OData.Delta`1.EntityType">
      <summary>Získá skutečný typ entity, pro kterou se sledují změny.</summary>
      <returns>Skutečný typ entity, pro kterou se sledují změny.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Delta`1.ExpectedClrType">
      <returns>Vrací objekt <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetChangedPropertyNames">
      <summary>Vrátí vlastnosti, které byly upraveny prostřednictvím této položky delta, jako výčtový objekt názvů vlastností.</summary>
      <returns>Názvy vlastností</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetDynamicMemberNames">
      <returns>Vrací objekt <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetEntity">
      <summary>Vrátí instanci typu <see cref="P:System.Web.Http.OData.Delta`1.EntityType" />, která obsahuje všechny změny (a původní hodnoty) sledované touto položkou delta.</summary>
      <returns>Instance <see cref="P:System.Web.Http.OData.Delta`1.EntityType" /></returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetUnchangedPropertyNames">
      <summary>Vrátí vlastnosti, které nebyly upraveny prostřednictvím této položky delta, jako výčtový objekt názvů vlastností.</summary>
      <returns>Vlastnosti, které nebyly upraveny prostřednictvím této položky delta, jako výčtový objekt názvů vlastností</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Patch(`0)">
      <summary>Přepíše entitu <paramref name="original" /> změnami sledovanými touto položkou delta.</summary>
      <param name="original">Entita, která má být aktualizována.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Put(`0)">
      <summary>Přepíše entitu <paramref name="original" /> změnami uloženými v této položce delta.</summary>
      <param name="original">Entita, která má být aktualizována.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetPropertyType(System.String,System.Type@)">
      <summary>Pokusí se získat typ <see cref="T:System.Type" /> vlastnosti s názvem <paramref name="name" /> ze základní entity.</summary>
      <returns>Hodnota true, pokud byla vlastnost nalezena, jinak hodnota false.</returns>
      <param name="name">Název vlastnosti</param>
      <param name="type">Typ proměnné</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Pokusí se získat hodnotu vlastnosti s názvem <paramref name="name" /> ze základní entity.</summary>
      <returns>Hodnota true, byla-li vlastnost nalezena.</returns>
      <param name="name">Název vlastnosti</param>
      <param name="value">Hodnota vlastnosti.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TrySetPropertyValue(System.String,System.Object)">
      <summary>Pokusí se nastavit vlastnost s názvem <paramref name="name" /> na zadanou hodnotu <paramref name="value" />.</summary>
      <returns>V případě úspěchu nabývá hodnoty true, v opačném případě hodnoty false.</returns>
      <param name="name">Název vlastnosti</param>
      <param name="value">Nová hodnota vlastnosti.</param>
    </member>
    <member name="T:System.Web.Http.OData.EdmComplexObject">
      <summary>Reprezentuje objekt <see cref="T:System.Web.Http.OData.IEdmComplexObject" /> bez pomocného typu CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObject.#ctor(Microsoft.Data.Edm.IEdmComplexType)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.EdmStructuredObject" />.</summary>
      <param name="edmType">Typ <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> tohoto objektu.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObject.#ctor(Microsoft.Data.Edm.IEdmComplexType,System.Boolean)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.EdmStructuredObject" />.</summary>
      <param name="edmType">Typ <see cref="T:Microsoft.Data.Edm.IEdmComplexType" /> tohoto objektu.</param>
      <param name="isNullable">Hodnota true, pokud u objektu lze povolit hodnotu null, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObject.#ctor(Microsoft.Data.Edm.IEdmComplexTypeReference)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.EdmStructuredObject" />.</summary>
      <param name="edmType">Typ <see cref="T:Microsoft.Data.Edm.IEdmComplexTypeReference" /> tohoto objektu.</param>
    </member>
    <member name="T:System.Web.Http.OData.EdmComplexObjectCollection">
      <summary>Reprezentuje objekt <see cref="T:System.Web.Http.OData.IEdmObject" />, který je kolekcí objektů <see cref="T:System.Web.Http.OData.IEdmComplexObject" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObjectCollection.#ctor(Microsoft.Data.Edm.IEdmCollectionTypeReference)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.EdmComplexObjectCollection" />.</summary>
      <param name="edmType">Typ EDM kolekce.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObjectCollection.#ctor(Microsoft.Data.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IList{System.Web.Http.OData.IEdmComplexObject})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.EdmComplexObjectCollection" />.</summary>
      <param name="edmType">Typ EDM kolekce.</param>
      <param name="list">Seznam zabalený novou kolekcí</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObjectCollection.GetEdmType"></member>
    <member name="T:System.Web.Http.OData.EdmEntityObject">
      <summary>Reprezentuje objekt <see cref="T:System.Web.Http.OData.IEdmEntityObject" /> bez pomocného typu CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObject.#ctor(Microsoft.Data.Edm.IEdmEntityType)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.EdmStructuredObject" />.</summary>
      <param name="edmType">Typ <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> tohoto objektu.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObject.#ctor(Microsoft.Data.Edm.IEdmEntityType,System.Boolean)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.EdmStructuredObject" />.</summary>
      <param name="edmType">Typ <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> tohoto objektu.</param>
      <param name="isNullable">Hodnota true, pokud u objektu lze povolit hodnotu null, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObject.#ctor(Microsoft.Data.Edm.IEdmEntityTypeReference)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.EdmStructuredObject" />.</summary>
      <param name="edmType">Typ <see cref="T:Microsoft.Data.Edm.IEdmEntityTypeReference" /> tohoto objektu.</param>
    </member>
    <member name="T:System.Web.Http.OData.EdmEntityObjectCollection">
      <summary>Reprezentuje objekt <see cref="T:System.Web.Http.OData.IEdmObject" />, který je kolekcí objektů <see cref="T:System.Web.Http.OData.IEdmEntityObject" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObjectCollection.#ctor(Microsoft.Data.Edm.IEdmCollectionTypeReference)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.EdmEntityObjectCollection" />.</summary>
      <param name="edmType">Typ EDM kolekce.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObjectCollection.#ctor(Microsoft.Data.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IList{System.Web.Http.OData.IEdmEntityObject})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.EdmEntityObjectCollection" />.</summary>
      <param name="edmType">Typ EDM kolekce.</param>
      <param name="list">Seznam zabalený novou kolekcí</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObjectCollection.GetEdmType"></member>
    <member name="T:System.Web.Http.OData.EdmModelExtensions">
      <summary>Poskytuje rozšiřující metody pro rozhraní <see cref="T:Microsoft.Data.Edm.IEdmModel" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmModelExtensions.GetActionLinkBuilder(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmFunctionImport)">
      <summary>Získá objekt <see cref="T:System.Web.Http.OData.Builder.ActionLinkBuilder" />, který má být použit při generování odkazů akcí pro danou akci.</summary>
      <returns>Objekt <see cref="T:System.Web.Http.OData.Builder.ActionLinkBuilder" /> pro danou akci, je-li nastaven, jinak nový objekt <see cref="T:System.Web.Http.OData.Builder.ActionLinkBuilder" />, který generuje odkazy akcí v souladu s konvencemi adres URL prostředí OData.</returns>
      <param name="model">Objekt <see cref="T:Microsoft.Data.Edm.IEdmModel" /> obsahující akci.</param>
      <param name="action">Akce, pro niž je vyžadován tvůrce odkazů.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmModelExtensions.GetEntitySetLinkBuilder(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Získá objekt <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" />, který má být použit při generování navigačních a vlastních odkazů pro danou sadu entit.</summary>
      <returns>Objekt <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" />, je-li pro danou sadu entit nastaven, jinak nový objekt <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" />, který generuje adresy URL v souladu s konvencemi adres URL prostředí OData.</returns>
      <param name="model">Objekt <see cref="T:Microsoft.Data.Edm.IEdmModel" /> obsahující sadu entit.</param>
      <param name="entitySet">Sada entit.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmModelExtensions.SetActionLinkBuilder(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmFunctionImport,System.Web.Http.OData.Builder.ActionLinkBuilder)">
      <summary>Nastaví objekt <see cref="T:System.Web.Http.OData.Builder.ActionLinkBuilder" />, který má být použit pro generování odkazu akce OData pro danou akci.</summary>
      <param name="model">Objekt <see cref="T:Microsoft.Data.Edm.IEdmModel" /> obsahující sadu entit.</param>
      <param name="action">Akce, pro niž má být vytvořen odkaz akce.</param>
      <param name="actionLinkBuilder">Objekt <see cref="T:System.Web.Http.OData.Builder.ActionLinkBuilder" /> k nastavení.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmModelExtensions.SetEntitySetLinkBuilder(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmEntitySet,System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation)">
      <summary>Nastaví objekt <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" />, který má být použit při generování navigačních a vlastních odkazů pro danou sadu entit.</summary>
      <param name="model">Objekt <see cref="T:Microsoft.Data.Edm.IEdmModel" /> obsahující sadu entit.</param>
      <param name="entitySet">Sada entit.</param>
      <param name="entitySetLinkBuilder">Objekt <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> k nastavení.</param>
    </member>
    <member name="T:System.Web.Http.OData.EdmStructuredObject">
      <summary>Reprezentuje objekt <see cref="T:System.Web.Http.OData.IEdmStructuredObject" /> bez pomocného typu CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.#ctor(Microsoft.Data.Edm.IEdmStructuredType)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.EdmStructuredObject" />.</summary>
      <param name="edmType">Typ <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> tohoto objektu.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.#ctor(Microsoft.Data.Edm.IEdmStructuredType,System.Boolean)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.EdmStructuredObject" />.</summary>
      <param name="edmType">Typ <see cref="T:Microsoft.Data.Edm.IEdmStructuredTypeReference" /> tohoto objektu.</param>
      <param name="isNullable">Hodnota true, pokud u objektu lze povolit hodnotu null, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.#ctor(Microsoft.Data.Edm.IEdmStructuredTypeReference)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.EdmStructuredObject" />.</summary>
      <param name="edmType">Typ <see cref="T:Microsoft.Data.Edm.IEdmStructuredTypeReference" /> tohoto objektu.</param>
    </member>
    <member name="P:System.Web.Http.OData.EdmStructuredObject.ActualEdmType">
      <summary>Získá nebo nastaví skutečný typ <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> entity nebo komplexní typ tohoto objektu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.Clear"></member>
    <member name="P:System.Web.Http.OData.EdmStructuredObject.ExpectedEdmType">
      <summary>Získá nebo nastaví očekávaný typ <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> entity nebo komplexní typ tohoto objektu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.GetChangedPropertyNames"></member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.GetEdmType"></member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.GetUnchangedPropertyNames"></member>
    <member name="P:System.Web.Http.OData.EdmStructuredObject.IsNullable">
      <summary>Získá nebo nastaví údaj o tom, zda u objektu EDM je povolena hodnota null.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.TryGetPropertyType(System.String,System.Type@)"></member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.TryGetPropertyValue(System.String,System.Object@)"></member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.TrySetPropertyValue(System.String,System.Object)"></member>
    <member name="T:System.Web.Http.OData.EnableQueryAttribute">
      <summary>Tato třída definuje atribut, který lze použít na akci za účelem povolení dotazů s použitím syntaxe dotazů OData.Chcete-li se vyhnout zpracování neočekávaných nebo nebezpečných dotazů, pomocí nastavení ověření u atributu <see cref="T:System.Web.Http.OData.EnableQueryAttribute" /> proveďte ověření příchozích dotazů.Další informace naleznete na stránce http://go.microsoft.com/fwlink/?LinkId=279712.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EnableQueryAttribute.#ctor">
      <summary>Umožňuje, aby akce kontroleru podporovala parametry dotazu OData.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EnableQueryAttribute.AllowedArithmeticOperators">
      <summary>Získá nebo nastaví hodnotu, která představuje seznam povolených aritmetických operátorů, například add, sub, mul, div, mod.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EnableQueryAttribute.AllowedFunctions">
      <summary>Získá nebo nastaví hodnotu, která představuje seznam povolených funkcí používaných v dotazu $filter.Mezi povolené funkce patří následující:[list type="definition"] [item] [term]String related[/term] [description]substringof, endswith, startswith, length, indexof, substring, tolower, toupper, trim, concat. Příklad:~/Customers?$filter=length(CompanyName) eq 19[/description] [/item] [item] [term]DateTime related[/term] [description]year, years, month, months, day, days, hour, hours, minute, minutes, second, seconds. Příklad:~/Employees?$filter=year(BirthDate) eq 1971[/description] [/item] [item] [term]Math related[/term] [description]round, floor, ceiling[/description] [/item] [item] [term]Type related[/term] [description]isof, cast[/description] [/item] [item] [term]Collection related[/term] [description]any, all[/description] [/item] [/list]</summary>
    </member>
    <member name="P:System.Web.Http.OData.EnableQueryAttribute.AllowedLogicalOperators">
      <summary>Získá nebo nastaví hodnotu, která představuje seznam povolených logických operátorů, například eq, ne, gt, ge, lt, le, and, or, not.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EnableQueryAttribute.AllowedOrderByProperties">
      <summary>Získá nebo nastaví řetězec se seznamem názvů vlastností oddělených čárkami.Dotazovatelný výsledek lze řadit pouze podle vlastností definovaných v tomto seznamu.Poznámka: Ve výchozím nastavení má tento řetězec hodnotu null, což znamená, že lze provést řazení podle libovolných vlastností.Pokud například nastavíte tuto hodnotu na hodnotu null nebo na prázdný řetězec, znamená to, že povolujeme řazení dotazovatelného výsledku podle libovolných vlastností.Nastavení hodnoty Name znamená, že řazení dotazovatelného výsledku povolujeme pouze podle vlastnosti Name.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EnableQueryAttribute.AllowedQueryOptions">
      <summary>Získá nebo nastaví parametry dotazu, které jsou v dotazech povoleny.Výchozí hodnotou jsou všechny možnosti dotazu, včetně možností $filter, $skip, $top, $orderby, $expand, $select, $inlineCount, $format a $skiptoken.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EnableQueryAttribute.ApplyQuery(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQueryOptions)">
      <summary>Použije dotaz na daný typ IQueryable na základě příchozího dotazu z identifikátoru URI a nastavení dotazu.Ve výchozím nastavení implementace podporuje možnosti $top, $skip, $orderby a $filter.Potlačí tuto metodu za účelem dalšího sestavení dotazu.</summary>
      <param name="queryable">Původní dotazovatelná instance zprávy s odpovědí.</param>
      <param name="queryOptions">Instance <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> vytvořená na základě příchozího požadavku.</param>
    </member>
    <member name="M:System.Web.Http.OData.EnableQueryAttribute.ApplyQuery(System.Object,System.Web.Http.OData.Query.ODataQueryOptions)">
      <summary>Použije dotaz na danou entitu na základě příchozího dotazu z identifikátoru URI a nastavení dotazu.</summary>
      <returns>Nová entita po použití dotazu $select a $expand.</returns>
      <param name="entity">Původní entita ze zprávy odpovědi.</param>
      <param name="queryOptions">Instance <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> vytvořená na základě příchozího požadavku.</param>
    </member>
    <member name="P:System.Web.Http.OData.EnableQueryAttribute.EnableConstantParameterization">
      <summary>Získá nebo nastaví hodnotu, která určuje, zda by měly být konstanty parametrizovány.Parametrizace konstant bude mít za následek vyšší výkon při použití platformy Entity.</summary>
      <returns>Výchozí hodnota je true.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EnableQueryAttribute.EnsureStableOrdering">
      <summary>Získá nebo nastaví hodnotu, která udává, zda by mělo sestavení dotazu v případě potřeby změnit původní dotaz za účelem zajištění stabilního pořadí řazení.</summary>
      <returns>Hodnota true udává, že by měl být původní dotaz v případě potřeby upraven za účelem zajištění stabilního pořadí řazení.Hodnota false udává, že pořadí řazení lze považovat za stabilní i bez úpravy dotazu.Zprostředkovatelé dotazů, kteří zajišťují stabilní pořadí řazení, by měli nastavit hodnotu false.Výchozí hodnota je true.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EnableQueryAttribute.GetModel(System.Type,System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Získá model EDM pro daný typ a požadavek.Potlačí tuto metodu za účelem přizpůsobení modelu EDM použitého k dotazování.</summary>
      <returns>Model EDM pro daný typ a požadavek.</returns>
      <param name="elementClrType">Typ CLR, pro který má být načten model.</param>
      <param name="request">Zpráva s požadavkem, pro kterou má být načten model.</param>
      <param name="actionDescriptor">Popisovač akce pro akci, která je dotazována.</param>
    </member>
    <member name="P:System.Web.Http.OData.EnableQueryAttribute.HandleNullPropagation">
      <summary>Získá nebo nastaví hodnotu, která udává, jak se má při sestavení dotazu postupovat v případě šíření hodnoty null.</summary>
      <returns>Výchozí hodnota je <see cref="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EnableQueryAttribute.MaxAnyAllExpressionDepth">
      <summary>Získá nebo nastaví maximální hloubku elementů Any nebo All vnořených v dotazu.Toto omezení pomáhá zabránit útokům založeným na odepření služeb.Výchozí hodnota je 1.</summary>
      <returns>Maximální hloubka elementů Any nebo All vnořených v dotazu.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EnableQueryAttribute.MaxExpansionDepth">
      <summary>Získá nebo nastaví maximální hloubku rozšíření pro možnost dotazu $expand.Chcete-li kontrolu maximální hloubky rozšíření zakázat, nastavte tuto vlastnost na hodnotu 0.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EnableQueryAttribute.MaxNodeCount">
      <summary>Získá nebo nastaví maximální počet uzlů v rámci stromu syntaxe $filter.Výchozí hodnota je 100.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EnableQueryAttribute.MaxOrderByNodeCount">
      <summary>Získá nebo nastaví maximální počet výrazů, které mohou existovat v dotazu $orderby.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EnableQueryAttribute.MaxSkip">
      <summary>Získá nebo nastaví maximální hodnotu dotazu $skip, kterou může klient požadovat.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EnableQueryAttribute.MaxTop">
      <summary>Získá nebo nastaví maximální hodnotu dotazu $top, kterou může klient požadovat.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EnableQueryAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Po provedení akce provede sestavení dotazu.Nejprve se pokusí z návratové zprávy s odpovědí načíst typ IQueryable.Poté dotaz potvrdí podle identifikátoru URI na základě nastavení ověřování v položce <see cref="T:System.Web.Http.OData.EnableQueryAttribute" />.Nakonec vhodně použije dotaz a ve zprávě s odpovědí jej vrátí zpět.</summary>
      <param name="actionExecutedContext">Kontext související s touto akcí, včetně zprávy s odpovědí, zprávy s požadavkem, položky HttpConfiguration atd.</param>
    </member>
    <member name="P:System.Web.Http.OData.EnableQueryAttribute.PageSize">
      <summary>Získá nebo nastaví maximální počet výsledků dotazu, který se má odeslat zpět klientům.</summary>
      <returns>Maximální počet výsledků dotazu, který se má odeslat zpět klientům.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EnableQueryAttribute.ValidateQuery(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Query.ODataQueryOptions)">
      <summary>Ověří dotaz OData v příchozím požadavku.Ve výchozím nastavení dojde v implementaci k výjimce, pokud dotaz obsahuje nepodporované parametry dotazu.Potlačí tuto metodu za účelem dalšího ověření dotazu.</summary>
      <param name="request">Příchozí požadavek.</param>
      <param name="queryOptions">Instance <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> vytvořená na základě příchozího požadavku.</param>
    </member>
    <member name="T:System.Web.Http.OData.EntityInstanceContext">
      <summary>Instance entity <see cref="T:System.Web.Http.OData.EntityInstanceContext`1" /> bude předána do tvůrců vlastních odkazů (<see cref="M:EntitySetConfiguration.HasIdLink" />, <see cref="M:EntitySetConfiguration.HasEditLink" />, <see cref="M:EntitySetConfiguration.HasReadLink" />) a navigačních odkazů (<see cref="M:EntitySetConfiguration.HasNavigationPropertyLink" />, <see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink" />) a tito tvůrci odkazů ji mohou používat ke generování odkazů.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EntityInstanceContext.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.EntityInstanceContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EntityInstanceContext.#ctor(System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Object)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.EntityInstanceContext" />.</summary>
      <param name="serializerContext">Základní objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext" /></param>
      <param name="entityType">Typ entity EMD tohoto kontextu instance.</param>
      <param name="entityInstance">Objekt reprezentující instanci tohoto kontextu.</param>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EdmModel">
      <summary>Získá nebo nastaví model <see cref="T:Microsoft.Data.Edm.IEdmModel" />, ke kterému tato instance patří.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EdmObject">
      <summary>Získá nebo nastaví objekt <see cref="T:System.Web.Http.OData.IEdmEntityObject" />, který je základem této instance </summary>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntityInstance">
      <summary>Získá nebo nastaví hodnotu této instance entity.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntitySet">
      <summary>Získá nebo nastaví model <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />, ke kterému tato instance patří.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntityType">
      <summary>Získá nebo nastaví typ <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> této instance entity.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.Request">
      <summary>Získá nebo nastaví požadavek HTTP, který způsobil vygenerování této instance.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.SerializerContext">
      <summary>Získá nebo nastaví položku <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.SkipExpensiveAvailabilityChecks">
      <summary>Získá nebo nastaví hodnotu udávající, zda se mají provést kontroly ActionAvailabilityChecks, či nikoli.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.Url">
      <summary>Získá nebo nastaví položku <see cref="T:System.Web.Http.Routing.UrlHelper" />, která může být použita ke generování odkazů při serializaci této instance entity.</summary>
    </member>
    <member name="T:System.Web.Http.OData.EntityInstanceContext`1">
      <summary>Instance entity <see cref="T:System.Web.Http.OData.EntityInstanceContext`1" /> bude předána do tvůrců vlastních odkazů (<see cref="M:EntitySetConfiguration.HasIdLink" />, <see cref="M:EntitySetConfiguration.HasEditLink" />, <see cref="M:EntitySetConfiguration.HasReadLink" />) a navigačních odkazů (<see cref="M:EntitySetConfiguration.HasNavigationPropertyLink" />, <see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink" />) a tito tvůrci odkazů ji mohou používat ke generování odkazů.</summary>
      <typeparam name="TEntityType">Typ entity</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.EntityInstanceContext`1.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.EntityInstanceContext`1" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext`1.EntityInstance">
      <summary>Získá nebo nastaví instanci entity.</summary>
    </member>
    <member name="T:System.Web.Http.OData.EntitySetController`2">
      <summary>Poskytuje příhodný výchozí bod pro kontroler, který zveřejňuje sadu entit OData.Jedná se o synchronní verzi kontroleru <see cref="T:System.Web.Http.OData.AsyncEntitySetController`2" />.</summary>
      <typeparam name="TEntity">Typ přidružený k typu entity zveřejněné sady entit.</typeparam>
      <typeparam name="TKey">Typ přidružený ke klíči entity pro typ entity zveřejněné sady entit.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.#ctor"></member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.CreateEntity(`0)">
      <summary>Tato metoda by měla být potlačena za účelem vytvoření nové entity v sadě entit.</summary>
      <returns>Vytvořená entita.</returns>
      <param name="entity">Entita, která má být přidána do sady entit.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.CreateLink(`1,System.String,System.Uri)">
      <summary>Za účelem zpracování požadavků POST a PUT, které se pokoušejí o vytvoření spoje mezi dvěma entitami, by měla být tato metoda potlačena.</summary>
      <param name="key">Klíč entity s navigační vlastností.</param>
      <param name="navigationProperty">Název navigační vlastnosti.</param>
      <param name="link">Identifikátor URI entity, pro kterou se má vytvořit spoj.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Delete(`1)">
      <summary>Tato metoda by měla být přepsána za účelem zpracování požadavků DELETE k odstranění stávajících entit ze sady entit.</summary>
      <param name="key">Klíč entity, která má být odstraněna.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.DeleteLink(`1,System.String,System.String)">
      <summary>Tato metoda by se měla potlačit za účelem zpracování požadavků DELETE, které se pokoušejí o přerušení vztahu mezi dvěma entitami.</summary>
      <param name="key">Klíč entity s navigační vlastností.</param>
      <param name="relatedKey">Klíč související entity.</param>
      <param name="navigationProperty">Název navigační vlastnosti.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.DeleteLink(`1,System.String,System.Uri)">
      <summary>Tato metoda by se měla potlačit za účelem zpracování požadavků DELETE, které se pokoušejí o přerušení vztahu mezi dvěma entitami.</summary>
      <param name="key">Klíč entity s navigační vlastností.</param>
      <param name="navigationProperty">Název navigační vlastnosti.</param>
      <param name="link">Identifikátor URI entity, která má být odebrána z navigační vlastnosti.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Get">
      <summary>Tato metoda by měla být potlačena za účelem zpracování požadavků GET, které se pokoušejí o načtení entity ze sady entit.</summary>
      <returns>Odpovídající entity ze sady entit.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Get(`1)">
      <summary>Zpracovává požadavky GET, které se pokoušejí o načtení jednotlivých entit ze sady entit podle klíče.</summary>
      <returns>Zpráva s odpovědí, která má být odeslána zpět klientovi.</returns>
      <param name="key">Klíč entity, která má být načtena.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.GetEntityByKey(`1)">
      <summary>Tato metoda by měla být potlačena za účelem načtení entity ze sady entit podle klíče.</summary>
      <returns>Načtená entita, nebo hodnota null, pokud v sadě entit nelze najít zadaný klíč entity.</returns>
      <param name="key">Klíč entity, která má být načtena.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.GetKey(`0)">
      <summary>Tato metoda by měla být potlačena za účelem získání klíče zadané entity.</summary>
      <returns>Hodnota klíče entity.</returns>
      <param name="entity">Entita.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.HandleUnmappedRequest(System.Web.Http.OData.Routing.ODataPath)">
      <summary>Tato metoda by měla být potlačena za účelem zpracování všech nemapovaných požadavků OData.</summary>
      <returns>Zpráva s odpovědí, která má být odeslána zpět klientovi.</returns>
      <param name="odataPath">Cesta OData daného požadavku.</param>
    </member>
    <member name="P:System.Web.Http.OData.EntitySetController`2.ODataPath">
      <summary>Získá cestu OData aktuálního požadavku.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Patch(`1,System.Web.Http.OData.Delta{`0})">
      <summary>Zpracovává požadavky PATCH a MERGE za účelem částečné aktualizace jedné entity v sadě entit.</summary>
      <returns>Zpráva s odpovědí, která má být odeslána zpět klientovi.</returns>
      <param name="key">Klíč entity, která má být aktualizována.</param>
      <param name="patch">Oprava, která představuje částečnou aktualizaci.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.PatchEntity(`1,System.Web.Http.OData.Delta{`0})">
      <summary>Tato metoda by měla být potlačena za účelem použití částečné aktualizace na stávající entitu v sadě entit.</summary>
      <returns>Aktualizovaná entita.</returns>
      <param name="key">Klíč entity, která má být aktualizována.</param>
      <param name="patch">Oprava, která představuje částečnou aktualizaci.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Post(`0)">
      <summary>Zpracovává požadavky POST, které vytvářejí nové entity v sadě entit.</summary>
      <returns>Zpráva s odpovědí, která má být odeslána zpět klientovi.</returns>
      <param name="entity">Entita, která má být vložena do sady entit.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Put(`1,`0)">
      <summary>Zpracovává požadavky PUT, které se pokoušejí o náhradu jedné entity v sadě entit.</summary>
      <returns>Zpráva s odpovědí, která má být odeslána zpět klientovi.</returns>
      <param name="key">Klíč entity, která má být nahrazena.</param>
      <param name="update">Aktualizovaná entita.</param>
    </member>
    <member name="P:System.Web.Http.OData.EntitySetController`2.QueryOptions">
      <summary>Získá možnosti dotazu OData aktuálního požadavku.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.UpdateEntity(`1,`0)">
      <summary>Tato metoda by měla být potlačena za účelem aktualizace stávající entity v sadě entit.</summary>
      <returns>Aktualizovaná entita.</returns>
      <param name="key">Klíč entity, která má být aktualizována.</param>
      <param name="update">Aktualizovaná entita.</param>
    </member>
    <member name="T:System.Web.Http.OData.ETagMessageHandler">
      <summary>Definuje objekt <see cref="T:System.Net.Http.HttpMessageHandler" /> pro přidání hodnoty hlavičky značky ETag do odpovědi prostředí OData, pokud tuto odpověď tvoří jedna entita s definovanou značkou ETag.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ETagMessageHandler.#ctor"></member>
    <member name="M:System.Web.Http.OData.ETagMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"></member>
    <member name="T:System.Web.Http.OData.FeedContext">
      <summary>Obsahuje kontextové informace o právě serializovaném informačním kanálu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.FeedContext.#ctor"></member>
    <member name="P:System.Web.Http.OData.FeedContext.EntitySet">
      <summary>Získá sadu <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />, do níž tato instance patří.</summary>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.FeedInstance">
      <summary>Získá hodnotu této instance informačního kanálu.</summary>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.Request">
      <summary>Získá nebo nastaví požadavek HTTP, který způsobil vygenerování této instance.</summary>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.RequestContext">
      <summary>Získá nebo nastaví kontext požadavku.</summary>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.Url">
      <summary>Získá nebo nastaví položku <see cref="T:System.Web.Http.Routing.UrlHelper" />, která má sloužit ke generování odkazů při serializaci této instance informačního kanálu.</summary>
    </member>
    <member name="T:System.Web.Http.OData.FromODataUriAttribute">
      <summary>Implementace atributu <see cref="T:System.Web.Http.ParameterBindingAttribute" />, který dokáže vázat parametry identifikátorů URI pomocí konvencí OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.FromODataUriAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.FromODataUriAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Získá vazbu pro parametr.</summary>
      <returns>
        <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> obsahující danou vazbu.</returns>
      <param name="parameter">Parametr k vytvoření vazby.</param>
    </member>
    <member name="T:System.Web.Http.OData.IDelta">
      <summary>
        <see cref="T:System.Web.Http.OData.IDelta" /> povoluje a sleduje změny určitého objektu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.Clear">
      <summary>Vymaže položku <see cref="T:System.Web.Http.OData.IDelta" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.GetChangedPropertyNames">
      <summary>Vrátí vlastnosti, které byly upraveny prostřednictvím této položky IDelta, jako výčtový objekt názvů vlastností.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.GetUnchangedPropertyNames">
      <summary>Vrátí vlastnosti, které nebyly upraveny prostřednictvím této položky IDelta, jako výčtový objekt názvů vlastností.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TryGetPropertyType(System.String,System.Type@)">
      <summary>Pokusí se získat typ <see cref="T:System.Type" /> vlastnosti s názvem <paramref name="name" /> ze základní entity.</summary>
      <returns>Vrátí hodnotu true, pokud byla vlastnost nalezena, a v opačném případě hodnotu false.</returns>
      <param name="name">Název vlastnosti</param>
      <param name="type">Typ vlastnosti</param>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Pokusí se získat hodnotu vlastnosti s názvem <paramref name="name" /> ze základní entity.</summary>
      <returns>Vrátí hodnotu true, pokud byla vlastnost nalezena, a v opačném případě hodnotu false.</returns>
      <param name="name">Název vlastnosti</param>
      <param name="value">Hodnota vlastnosti</param>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TrySetPropertyValue(System.String,System.Object)">
      <summary>Pokusí se nastavit vlastnost s názvem <paramref name="name" /> na zadanou hodnotu <paramref name="value" />.</summary>
      <returns>V případě úspěchu vrátí hodnotu true, v opačném případě hodnotu false.</returns>
      <param name="name">Název vlastnosti</param>
      <param name="value">Nová hodnota vlastnosti</param>
    </member>
    <member name="T:System.Web.Http.OData.IEdmComplexObject">
      <summary>Reprezentuje instanci objektu <see cref="T:Microsoft.Data.Edm.IEdmComplexType" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.IEdmEntityObject">
      <summary>Reprezentuje instanci objektu <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.IEdmObject">
      <summary>Reprezentuje instanci objektu <see cref="T:Microsoft.Data.Edm.IEdmType" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IEdmObject.GetEdmType">
      <summary>Získá položku <see cref="T:Microsoft.Data.Edm.IEdmTypeReference" /> této instance.</summary>
      <returns>Položka <see cref="T:Microsoft.Data.Edm.IEdmTypeReference" /> této instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.IEdmStructuredObject">
      <summary>Reprezentuje instanci objektu <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IEdmStructuredObject.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Získá hodnotu vlastnosti s daným názvem.</summary>
      <returns>Hodnota <see cref="true" />, pokud instance obsahuje vlastnost s daným názvem, jinak hodnota <see cref="false" />.</returns>
      <param name="propertyName">Název vlastnosti, kterou chcete získat.</param>
      <param name="value">Při návratu tato metoda obsahuje hodnotu vlastnosti s daným názvem, je-li tato vlastnost nalezena, jinak má hodnotu <see cref="null" />.Parametr se předává neinicializovaný.</param>
    </member>
    <member name="T:System.Web.Http.OData.NullEdmComplexObject">
      <summary>Reprezentuje objekt <see cref="T:System.Web.Http.OData.IEdmComplexObject" /> s hodnotou null.</summary>
    </member>
    <member name="M:System.Web.Http.OData.NullEdmComplexObject.#ctor(Microsoft.Data.Edm.IEdmComplexTypeReference)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.NullEdmComplexObject" />.</summary>
      <param name="edmType">Typ EDM tohoto objektu.</param>
    </member>
    <member name="M:System.Web.Http.OData.NullEdmComplexObject.GetEdmType"></member>
    <member name="M:System.Web.Http.OData.NullEdmComplexObject.TryGetPropertyValue(System.String,System.Object@)"></member>
    <member name="T:System.Web.Http.OData.ODataActionParameters">
      <summary>Datová část akce obsahuje názvy parametrů a hodnoty poskytnuté klientem v požadavku POST na volání určité akce.Hodnoty parametrů jsou uloženy ve slovníku s klíčem využívajícím název parametru.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataActionParameters.#ctor"></member>
    <member name="T:System.Web.Http.OData.ODataController">
      <summary>Definuje základní třídu pro kontrolery OData, které podporují zápis a čtení dat s využitím formátů OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataController.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataController.Created``1(``0)">
      <summary>Vytvoří výsledek akce se zadanými hodnotami, který je odpovědí na operaci POST s převodem entity na sadu entit.</summary>
      <returns>Objekt <see cref="T:System.Web.Http.OData.Results.CreatedODataResult`1" /> se zadanými hodnotami</returns>
      <param name="entity">Vytvořená entita.</param>
      <typeparam name="TEntity">Vytvořený typ entity.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.ODataController.Updated``1(``0)">
      <summary>Vytvoří výsledek akce se zadanými hodnotami, který je odpovědí na operaci PUT, PATCH nebo MERGE POST s entitou OData.</summary>
      <returns>Objekt <see cref="T:System.Web.Http.OData.Results.UpdatedODataResult`1" /> se zadanými hodnotami</returns>
      <param name="entity">Aktualizovaná entita.</param>
      <typeparam name="TEntity">Aktualizovaný typ entity.</typeparam>
    </member>
    <member name="T:System.Web.Http.OData.ODataFormattingAttribute">
      <summary>Atribut, který má být umístěn do kontrolerů a který povoluje formátovací moduly OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataFormattingAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataFormattingAttribute.CreateODataFormatters">
      <summary>Vytvoří formátovací moduly prostředí OData.</summary>
      <returns>Kolekce formátovacích modulů prostředí OData.</returns>
    </member>
    <member name="M:System.Web.Http.OData.ODataFormattingAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Tento popisovač kontroleru může být potlačen zpětným voláním pro nastavení kontroleru.</summary>
      <param name="controllerSettings">Nastavení kontroleru, které má být inicializováno.</param>
      <param name="controllerDescriptor">Popisovač kontroleruMějte na paměti, že popisovač x<see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> může být přidružen k odvozenému typu kontroleru, pokud bude zděděna konfigurace <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" />.</param>
    </member>
    <member name="T:System.Web.Http.OData.ODataMetadataController">
      <summary>Reprezentuje kontroler <see cref="T:System.Web.Http.ApiController" /> pro generování dokumentu služby a dokumentu metadat ($metadata).</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.GetMetadata">
      <summary>Vygeneruje dokument $metadata prostředí OData.</summary>
      <returns>Model <see cref="T:Microsoft.Data.Edm.IEdmModel" /> reprezentující dokument $metadata.</returns>
    </member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.GetServiceDocument">
      <summary>Vygeneruje dokument služby prostředí OData.</summary>
      <returns>Dokument služby pro danou službu.</returns>
    </member>
    <member name="T:System.Web.Http.OData.ODataNullValueAttribute">
      <summary>Reprezentuje položku <see cref="IActionFilter" />, která převádí hodnoty null v odpovědích na dotazy $value prostředí OData na odpovědi HTTP 404.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataNullValueAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataNullValueAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)"></member>
    <member name="T:System.Web.Http.OData.ODataQueryContext">
      <summary>Definuje určité kontextové informace sloužící k provedení sestavení dotazu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataQueryContext.#ctor(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmType)">
      <summary>Vytvoří instanci položky <see cref="T:System.Web.Http.OData.ODataQueryContext" /> s modelem <see cref="T:Microsoft.Data.Edm.IEdmModel" /> a typem CLR elementu.</summary>
      <param name="model">Model EDM, k němuž patří daný typ EDM.</param>
      <param name="elementType">Typ EDM elementu kolekce, která je dotazována.</param>
    </member>
    <member name="M:System.Web.Http.OData.ODataQueryContext.#ctor(Microsoft.Data.Edm.IEdmModel,System.Type)">
      <summary>Vytvoří instanci položky <see cref="T:System.Web.Http.OData.ODataQueryContext" /> s modelem <see cref="T:Microsoft.Data.Edm.IEdmModel" /> a typem CLR elementu.</summary>
      <param name="model">Model EDM, který zahrnuje typ <see cref="T:Microsoft.Data.Edm.IEdmType" /> odpovídající danému typu <paramref name="elementClrType" />.</param>
      <param name="elementClrType">Typ CLR elementu kolekce, která je dotazována.</param>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.ElementClrType">
      <summary>Získá typ CLR daného elementu.</summary>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.ElementType">
      <summary>Získá typ <see cref="T:Microsoft.Data.Edm.IEdmType" /> elementu.</summary>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.Model">
      <summary>Získá daný model <see cref="T:Microsoft.Data.Edm.IEdmModel" />, který obsahuje sadu entit.</summary>
    </member>
    <member name="T:System.Web.Http.OData.ODataQueryParameterBindingAttribute">
      <summary>Třída <see cref="T:System.Web.Http.ParameterBindingAttribute" /> pro svázání parametrů typu <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> s dotazem OData z příchozího požadavku.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataQueryParameterBindingAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataQueryParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)"></member>
    <member name="T:System.Web.Http.OData.ODataRoutingAttribute">
      <summary>Definuje atribut na úrovni kontroleru, který lze použít k povolení výběru akcí OData na základě konvencí směrování.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataRoutingAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataRoutingAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Tento popisovač kontroleru může být potlačen zpětným voláním pro nastavení kontroleru.</summary>
      <param name="controllerSettings">Nastavení kontroleru, které má být inicializováno.</param>
      <param name="controllerDescriptor">Popisovač kontroleruMějte na paměti, že popisovač x<see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> může být přidružen k odvozenému typu kontroleru, pokud bude zděděna konfigurace <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" />.</param>
    </member>
    <member name="T:System.Web.Http.OData.ODataUntypedActionParameters">
      <summary>Datová část akce obsahuje názvy parametrů a hodnoty poskytnuté klientem v požadavku POST na volání určité akce.Hodnoty parametrů jsou uloženy ve slovníku s klíčem využívajícím název parametru.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataUntypedActionParameters.#ctor(Microsoft.Data.Edm.IEdmFunctionImport)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.ODataUntypedActionParameters" />.</summary>
      <param name="action">Akce OData tohoto parametru.</param>
    </member>
    <member name="P:System.Web.Http.OData.ODataUntypedActionParameters.Action">
      <summary>Získá akci OData tohoto parametru.</summary>
    </member>
    <member name="T:System.Web.Http.OData.PageResult">
      <summary>Reprezentuje informační kanál entit, který obsahuje další informace podporované formáty protokolu OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.PageResult.#ctor(System.Uri,System.Nullable{System.Int64})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.PageResult" />.</summary>
      <param name="nextPageLink">Odkaz na další stránku položek v informačním kanálu.</param>
      <param name="count">Celkový počet položek v informačním kanálu.</param>
    </member>
    <member name="P:System.Web.Http.OData.PageResult.Count">
      <summary>Získá celkový počet položek v informačním kanálu.</summary>
    </member>
    <member name="P:System.Web.Http.OData.PageResult.NextPageLink">
      <summary>Získá odkaz na další stránku položek v informačním kanálu.</summary>
    </member>
    <member name="T:System.Web.Http.OData.PageResult`1">
      <summary>Reprezentuje informační kanál entit, který obsahuje další informace podporované formáty protokolu OData.</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Uri,System.Nullable{System.Int64})">
      <summary>Vytvoří částečnou sadu výsledků – používá se, když je povoleno stránkování řízené serverem.</summary>
      <param name="items">Dílčí sada odpovídajících výsledků, které by měly být na této stránce serializovány.</param>
      <param name="nextPageLink">Odkaz na další stránku odpovídajících výsledků (pokud existuje).</param>
      <param name="count">Celkový počet odpovídajících výsledků, aby klienti mohli zjistit počet odpovídajících položek na serveru.</param>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.GetEnumerator">
      <summary>Vrací enumerátor procházející kolekci.</summary>
      <returns>Objekt, <see cref="T:System.Collections.IEnumerator" /> který lze použít pro iteraci prostřednictvím kolekce.</returns>
    </member>
    <member name="P:System.Web.Http.OData.PageResult`1.Items">
      <summary>Získá kolekci entit pro tento informační kanál.</summary>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Vrací enumerátor procházející kolekci.</summary>
      <returns>Objekt, <see cref="T:System.Collections.IEnumerator" /> který lze použít pro iteraci prostřednictvím kolekce.</returns>
    </member>
    <member name="T:System.Web.Http.OData.TypedDelta">
      <summary>Reprezentuje objekt <see cref="T:System.Web.Http.OData.Delta" />, který lze použít, pokud pro entitu, jejíž změny jsou sledovány, existuje pomocný typ CLR.</summary>
    </member>
    <member name="M:System.Web.Http.OData.TypedDelta.#ctor"></member>
    <member name="P:System.Web.Http.OData.TypedDelta.EntityType">
      <summary>Získá skutečný typ entity, pro kterou se sledují změny.</summary>
    </member>
    <member name="P:System.Web.Http.OData.TypedDelta.ExpectedClrType">
      <summary>Získá očekávaný typ entity, pro kterou se sledují změny.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ChangeSetRequestItem">
      <summary>Představuje žádost ChangeSet.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetRequestItem.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.HttpRequestMessage})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Batch.ChangeSetRequestItem" />.</summary>
      <param name="requests">Zprávy žádosti v sadě ChangeSet.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetRequestItem.Dispose(System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetRequestItem.GetResourcesForDisposal">
      <summary>Získá prostředky registrované pro uvolnění pro zprávy každé žádosti sady ChangeSet.</summary>
      <returns>Kolekce prostředků registrovaných pro uvolnění.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Batch.ChangeSetRequestItem.Requests">
      <summary>Získá zprávy žádosti v sadě ChangeSet.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetRequestItem.SendRequestAsync(System.Net.Http.HttpMessageInvoker,System.Threading.CancellationToken)">
      <summary>Odešle žádost ChangeSet.</summary>
      <returns>Úloha <see cref="T:System.Web.Http.OData.Batch.ChangeSetResponseItem" />.</returns>
      <param name="invoker">Původce volání.</param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ChangeSetResponseItem">
      <summary>Reprezentuje odpověď pro požadavek ChangeSet.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetResponseItem.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.HttpResponseMessage})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Batch.ChangeSetResponseItem" />.</summary>
      <param name="responses">Zprávy odpovědi pro tyto požadavky ChangeSet.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetResponseItem.Dispose(System.Boolean)"></member>
    <member name="P:System.Web.Http.OData.Batch.ChangeSetResponseItem.Responses">
      <summary>Získá zprávy odpovědi pro tento požadavek ChangeSet.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetResponseItem.WriteResponseAsync(Microsoft.Data.OData.ODataBatchWriter,System.Threading.CancellationToken)">
      <summary>Zapíše odpovědi jako objekt ChangeSet.</summary>
      <param name="writer">Objekt <see cref="T:Microsoft.Data.OData.ODataBatchWriter" /></param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.DefaultODataBatchHandler">
      <summary>Výchozí implementace objektu <see cref="T:System.Web.Http.OData.Batch.ODataBatchHandler" /> pro zpracování dávkových žádostí prostředí OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Batch.DefaultODataBatchHandler" />.</summary>
      <param name="httpServer">Objekt <see cref="T:System.Web.Http.HttpServer" /> pro zpracování jednotlivých dávkových žádostí</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.CreateResponseMessageAsync(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Batch.ODataBatchResponseItem},System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Vytvoří zprávu dávkových odpovědí.</summary>
      <returns>Zpráva dávkových odpovědí</returns>
      <param name="responses">Odpovědi pro dávkové žádosti</param>
      <param name="request">Původní žádost obsahující všechny dávkové žádosti</param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.ExecuteRequestMessagesAsync(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Batch.ODataBatchRequestItem},System.Threading.CancellationToken)">
      <summary>Provede dávkové žádosti prostředí OData.</summary>
      <returns>Kolekce položek <see cref="T:System.Web.Http.OData.Batch.ODataBatchResponseItem" /> pro dávkové žádosti</returns>
      <param name="requests">Kolekce dávkových žádostí OData</param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.GetBaseUri(System.Net.Http.HttpRequestMessage)">
      <summary>Získá základní identifikátor URI pro dávkové žádosti.</summary>
      <returns>Základní identifikátor URI</returns>
      <param name="request">Původní žádost obsahující všechny dávkové žádosti</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.ParseBatchRequestsAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Převede příchozí dávkovou žádost OData na kolekci zpráv žádostí.</summary>
      <returns>Kolekce položek <see cref="T:System.Web.Http.OData.Batch.ODataBatchRequestItem" /></returns>
      <param name="request">Žádost obsahující zprávy dávkových žádostí</param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.ValidateRequest(System.Net.Http.HttpRequestMessage)">
      <summary>Ověří příchozí žádost, která obsahuje zprávy dávkových žádostí.</summary>
      <param name="request">Žádost obsahující zprávy dávkových žádostí</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchContent">
      <summary>Zapouzdří kolekci dávkových odpovědí OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchContent.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Batch.ODataBatchResponseItem})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Batch.ODataBatchContent" />.</summary>
      <param name="responses">Dávkové odpovědi.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchContent.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Batch.ODataBatchResponseItem},Microsoft.Data.OData.ODataMessageWriterSettings)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Batch.ODataBatchContent" />.</summary>
      <param name="responses">Dávkové odpovědi.</param>
      <param name="writerSettings">Objekt <see cref="T:Microsoft.Data.OData.ODataMessageWriterSettings" /></param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchContent.Dispose(System.Boolean)"></member>
    <member name="P:System.Web.Http.OData.Batch.ODataBatchContent.Responses">
      <summary>Získá dávkové odpovědi.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"></member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchContent.TryComputeLength(System.Int64@)"></member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchHandler">
      <summary>Definuje abstrakci pro zpracování dávkových požadavků OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Batch.ODataBatchHandler" />.</summary>
      <param name="httpServer">Objekt <see cref="T:System.Web.Http.HttpServer" /> pro zpracování jednotlivých dávkových žádostí</param>
    </member>
    <member name="P:System.Web.Http.OData.Batch.ODataBatchHandler.MessageQuotas">
      <summary>Získá objekty <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" /> používané pro čtení/zápis dávkového požadavku/odpovědi.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Batch.ODataBatchHandler.ODataRouteName">
      <summary>Získá nebo nastaví název trasy OData přidružené k této obslužné rutině dávky.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions">
      <summary>Poskytuje rozšiřující metody pro třídu <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.GetODataBatchId(System.Net.Http.HttpRequestMessage)">
      <summary>Načte ID dávky přidružené k požadavku.</summary>
      <returns>ID dávky přidružené k tomuto požadavku nebo hodnota null, pokud neexistuje.</returns>
      <param name="request">Žádost</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.GetODataChangeSetId(System.Net.Http.HttpRequestMessage)">
      <summary>Načte ID sady ChangeSet přidružené k požadavku.</summary>
      <returns>ID operace ChangeSet přidružené k tomuto požadavku nebo hodnota null, pokud neexistuje.</returns>
      <param name="request">Žádost</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.GetODataContentIdMapping(System.Net.Http.HttpRequestMessage)">
      <summary>Načte mapování ID obsahu na umístění přidružené k požadavku.</summary>
      <returns>Mapování ID obsahu na umístění přidružené k tomuto požadavku nebo hodnota null, pokud neexistuje.</returns>
      <param name="request">Žádost</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.SetODataBatchId(System.Net.Http.HttpRequestMessage,System.Guid)">
      <summary>Přidruží dané ID dávky k požadavku.</summary>
      <param name="request">Žádost</param>
      <param name="batchId">ID dávky.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.SetODataChangeSetId(System.Net.Http.HttpRequestMessage,System.Guid)">
      <summary>Přidruží dané ID sady ChangeSet k požadavku.</summary>
      <param name="request">Žádost</param>
      <param name="changeSetId">ID sady ChangeSet.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.SetODataContentIdMapping(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Přidruží dané mapování ID obsahu na umístění k požadavku.</summary>
      <param name="request">Žádost</param>
      <param name="contentIdMapping">Identifikátor Content-ID pro mapování umístění.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchReaderExtensions">
      <summary>Poskytuje rozšiřující metody pro třídu <see cref="T:Microsoft.Data.OData.ODataBatchReader" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetOperationRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Guid,System.Boolean)">
      <summary>Přečte požadavek Operation v sadě ChangeSet.</summary>
      <returns>Objekt <see cref="T:System.Net.Http.HttpRequestMessage" />, který reprezentuje operaci ChangeSet.</returns>
      <param name="reader">Objekt <see cref="T:Microsoft.Data.OData.ODataBatchReader" /></param>
      <param name="batchId">ID dávky.</param>
      <param name="changeSetId">ID sady ChangeSet.</param>
      <param name="bufferContentStream">Je-li nastavena hodnota true, bude datový proud obsahu požadavku uložen do vyrovnávací paměti.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetOperationRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
      <summary>Přečte požadavek Operation v sadě ChangeSet.</summary>
      <returns>Objekt <see cref="T:System.Net.Http.HttpRequestMessage" />, který reprezentuje operaci ChangeSet.</returns>
      <param name="reader">Objekt <see cref="T:Microsoft.Data.OData.ODataBatchReader" /></param>
      <param name="batchId">ID dávky.</param>
      <param name="changeSetId">ID sady ChangeSet.</param>
      <param name="bufferContentStream">Je-li nastavena hodnota true, bude datový proud obsahu požadavku uložen do vyrovnávací paměti.</param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid)">
      <summary>Přečte požadavek ChangeSet.</summary>
      <returns>Kolekce položek <see cref="T:System.Net.Http.HttpRequestMessage" /> v sadě ChangeSet.</returns>
      <param name="reader">Objekt <see cref="T:Microsoft.Data.OData.ODataBatchReader" /></param>
      <param name="batchId">ID dávky.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Threading.CancellationToken)">
      <summary>Přečte požadavek ChangeSet.</summary>
      <returns>Kolekce položek <see cref="T:System.Net.Http.HttpRequestMessage" /> v sadě ChangeSet.</returns>
      <param name="reader">Objekt <see cref="T:Microsoft.Data.OData.ODataBatchReader" /></param>
      <param name="batchId">ID dávky.</param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadOperationRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Boolean)">
      <summary>Přečte požadavek Operation.</summary>
      <returns>Objekt <see cref="T:System.Net.Http.HttpRequestMessage" /> reprezentující operaci.</returns>
      <param name="reader">Objekt <see cref="T:Microsoft.Data.OData.ODataBatchReader" /></param>
      <param name="batchId">ID dávky.</param>
      <param name="bufferContentStream">Je-li nastavena hodnota true, bude datový proud obsahu požadavku uložen do vyrovnávací paměti.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadOperationRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Boolean,System.Threading.CancellationToken)">
      <summary>Přečte požadavek Operation.</summary>
      <returns>Objekt <see cref="T:System.Net.Http.HttpRequestMessage" /> reprezentující operaci.</returns>
      <param name="reader">Objekt <see cref="T:Microsoft.Data.OData.ODataBatchReader" /></param>
      <param name="batchId">ID dávky.</param>
      <param name="bufferContentStream">Je-li nastavena hodnota true, bude datový proud obsahu požadavku uložen do vyrovnávací paměti.</param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchRequestItem">
      <summary>Představuje dávkovou odpověď OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.#ctor"></member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.Dispose"></member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.Dispose(System.Boolean)">
      <summary>Uvolnění nespravovaných a (volitelně) spravovaných prostředků.</summary>
      <param name="disposing">Hodnota true slouží k uvolnění spravovaných i nespravovaných prostředků, hodnota false slouží k uvolnění pouze nespravovaných prostředků.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.GetResourcesForDisposal">
      <summary>Získá prostředek pro uvolnění.</summary>
      <returns>Kolekce prostředků pro uvolnění.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.SendMessageAsync(System.Net.Http.HttpMessageInvoker,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken,System.Collections.Generic.Dictionary{System.String,System.String})">
      <summary>Odešle jednu dávkovou žádost OData.</summary>
      <param name="invoker">Původce volání.</param>
      <param name="request">Žádost</param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
      <param name="contentIdToLocationMapping">Identifikátor Content-ID pro mapování umístění.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.SendRequestAsync(System.Net.Http.HttpMessageInvoker,System.Threading.CancellationToken)">
      <summary>Odešle žádost.</summary>
      <returns>Úloha <see cref="T:System.Web.Http.OData.Batch.ODataBatchResponseItem" />.</returns>
      <param name="invoker">Původce volání.</param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchResponseItem">
      <summary>Představuje dávkovou odpověď OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchResponseItem.#ctor"></member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchResponseItem.Dispose"></member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchResponseItem.Dispose(System.Boolean)">
      <summary>Uvolnění nespravovaných a (volitelně) spravovaných prostředků.</summary>
      <param name="disposing">Hodnota true slouží k uvolnění spravovaných i nespravovaných prostředků, hodnota false slouží k uvolnění pouze nespravovaných prostředků.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchResponseItem.WriteMessageAsync(Microsoft.Data.OData.ODataBatchWriter,System.Net.Http.HttpResponseMessage)">
      <summary>Zapíše odpověď protokolu OData o jedné dávce.</summary>
      <returns>Objekt úlohy, který reprezentuje zápis dané dávkové odpovědi pomocí daného zapisovače.</returns>
      <param name="writer">Objekt <see cref="T:Microsoft.Data.OData.ODataBatchWriter" /></param>
      <param name="response">Odpověď</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchResponseItem.WriteMessageAsync(Microsoft.Data.OData.ODataBatchWriter,System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
      <summary>Zapíše odpověď protokolu OData o jedné dávce.</summary>
      <returns>Objekt úlohy, který reprezentuje zápis dané dávkové odpovědi pomocí daného zapisovače.</returns>
      <param name="writer">Objekt <see cref="T:Microsoft.Data.OData.ODataBatchWriter" /></param>
      <param name="response">Odpověď</param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchResponseItem.WriteResponseAsync(Microsoft.Data.OData.ODataBatchWriter,System.Threading.CancellationToken)">
      <summary>Zapíše odpověď.</summary>
      <param name="writer">Objekt <see cref="T:Microsoft.Data.OData.ODataBatchWriter" /></param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataHttpContentExtensions">
      <summary>Poskytuje rozšiřující metody pro třídu <see cref="T:System.Net.Http.HttpContent" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataHttpContentExtensions.GetODataMessageReaderAsync(System.Net.Http.HttpContent,Microsoft.Data.OData.ODataMessageReaderSettings)">
      <summary>Získá položku <see cref="T:Microsoft.Data.OData.ODataMessageReader" /> pro datový proud <see cref="T:System.Net.Http.HttpContent" />.</summary>
      <returns>Objekt úlohy, který po dokončení vytvoří objekt <see cref="T:Microsoft.Data.OData.ODataMessageReader" />.</returns>
      <param name="content">Objekt <see cref="T:System.Net.Http.HttpContent" /></param>
      <param name="settings">Objekt <see cref="T:Microsoft.Data.OData.ODataMessageReaderSettings" /></param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataHttpContentExtensions.GetODataMessageReaderAsync(System.Net.Http.HttpContent,Microsoft.Data.OData.ODataMessageReaderSettings,System.Threading.CancellationToken)">
      <summary>Získá položku <see cref="T:Microsoft.Data.OData.ODataMessageReader" /> pro datový proud <see cref="T:System.Net.Http.HttpContent" />.</summary>
      <returns>Objekt úlohy, který po dokončení vytvoří objekt <see cref="T:Microsoft.Data.OData.ODataMessageReader" />.</returns>
      <param name="content">Objekt <see cref="T:System.Net.Http.HttpContent" /></param>
      <param name="settings">Objekt <see cref="T:Microsoft.Data.OData.ODataMessageReaderSettings" /></param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.OperationRequestItem">
      <summary>Reprezentuje požadavek Operation.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationRequestItem.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Batch.OperationRequestItem" />.</summary>
      <param name="request">Typ požadavku Operation.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationRequestItem.Dispose(System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Batch.OperationRequestItem.GetResourcesForDisposal">
      <summary>Získá prostředky registrované pro uvolnění ve zprávě požadavku Operation.</summary>
      <returns>Kolekce prostředků registrovaných pro uvolnění.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Batch.OperationRequestItem.Request">
      <summary>Získá požadavek Operation.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationRequestItem.SendRequestAsync(System.Net.Http.HttpMessageInvoker,System.Threading.CancellationToken)">
      <summary>Odešle požadavek Operation.</summary>
      <returns>Úloha <see cref="T:System.Web.Http.OData.Batch.OperationResponseItem" />.</returns>
      <param name="invoker">Původce volání.</param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.OperationResponseItem">
      <summary>Reprezentuje odpověď na požadavek Operation.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationResponseItem.#ctor(System.Net.Http.HttpResponseMessage)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Batch.OperationResponseItem" />.</summary>
      <param name="response">Zprávy odpovědi pro tento požadavek Operation.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationResponseItem.Dispose(System.Boolean)"></member>
    <member name="P:System.Web.Http.OData.Batch.OperationResponseItem.Response">
      <summary>Získá zprávy odpovědi pro tento požadavek Operation.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationResponseItem.WriteResponseAsync(Microsoft.Data.OData.ODataBatchWriter,System.Threading.CancellationToken)">
      <summary>Zapíše odpověď jako objekt Operation.</summary>
      <param name="writer">Objekt <see cref="T:Microsoft.Data.OData.ODataBatchWriter" /></param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler">
      <summary>Implementace třídy <see cref="T:System.Web.Http.OData.Batch.ODataBatchHandler" />, která neukládá stream obsahu žádostí do mezipaměti.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler" />.</summary>
      <param name="httpServer">Objekt <see cref="T:System.Web.Http.HttpServer" /> pro zpracování jednotlivých dávkových žádostí</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.CreateResponseMessageAsync(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Batch.ODataBatchResponseItem},System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Vytvoří zprávu dávkových odpovědí.</summary>
      <returns>Zpráva dávkových odpovědí</returns>
      <param name="responses">Odpovědi pro dávkové žádosti</param>
      <param name="request">Původní žádost obsahující všechny dávkové žádosti</param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.ExecuteChangeSetAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Provede sadu ChangeSet.</summary>
      <returns>Odpověď pro sadu ChangeSet</returns>
      <param name="batchReader">Čtečka dávky</param>
      <param name="batchId">ID dávky</param>
      <param name="originalRequest">Původní žádost obsahující všechny dávkové žádosti</param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.ExecuteOperationAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Provede operaci.</summary>
      <returns>Odpověď pro tuto operaci</returns>
      <param name="batchReader">Čtečka dávky</param>
      <param name="batchId">ID dávky</param>
      <param name="originalRequest">Původní žádost obsahující všechny dávkové žádosti</param>
      <param name="cancellationToken">Token pro monitorování požadavků na zrušení.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.GetBaseUri(System.Net.Http.HttpRequestMessage)">
      <summary>Získá základní identifikátor URI pro dávkové žádosti.</summary>
      <returns>Základní identifikátor URI</returns>
      <param name="request">Původní žádost obsahující všechny dávkové žádosti</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.ValidateRequest(System.Net.Http.HttpRequestMessage)">
      <summary>Ověří příchozí žádost, která obsahuje zprávy dávkových žádostí.</summary>
      <param name="request">Žádost obsahující zprávy dávkových žádostí</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ActionConfiguration">
      <summary>Položka ActionConfiguration reprezentuje akci OData, kterou chcete zveřejnit prostřednictvím služby.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.AddParameter(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
      <summary>Přidá nový parametr neumožňující vazbu.</summary>
      <returns>Nový parametr neumožňující vazbu.</returns>
      <param name="name">Název parametru</param>
      <param name="parameterType">Typ parametru.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.BindingParameter">
      <summary>Získá položku bindingParameter.</summary>
      <returns>Položka bindingParameter.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.CollectionParameter``1(System.String)">
      <summary>Přidá nový parametr kolekce neumožňující vazbu.</summary>
      <returns>Nový parametr kolekce neumožňující vazbu.</returns>
      <param name="name">Název</param>
      <typeparam name="TElementType">Základní typ elementu.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.FollowsConventions">
      <summary>Získá hodnotu, která udává, zda odkazy poskytnuté položkou <see cref="M:System.Web.Http.OData.Builder.ActionConfiguration.GetActionLink" /> dodržují konvence prostředí OData.</summary>
      <returns>Hodnota true, pokud odkazy poskytnuté odkazem <see cref="M:System.Web.Http.OData.Builder.ActionConfiguration.GetActionLink" /> odpovídají konvencím prostředí OData; jinak hodnota false.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.GetActionLink">
      <summary>Načte aktuálně registrovaný objekt factory odkazu akce.</summary>
      <returns>Aktuálně registrovaný objekt factory odkazu akce.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.HasActionLink(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Boolean)">
      <summary>Zaregistruje objekt factory, který vytváří odkazy akce.</summary>
      <returns>Objekt factory, který vytváří odkazy akce.</returns>
      <param name="actionLinkFactory">Třída actionLinkFactory, kterou by měla tato třída ActionLinkBuilder používat při sestavení odkazů.</param>
      <param name="followsConventions">Hodnota, která udává, zda objekt faktory odkazu akce generuje odkazy vyhovující konvencím prostředí OData.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.IsAlwaysBindable">
      <summary>Udává, zda tato akce vždy umožňuje vazbu.Představme si například akci sledování, kterou lze svázat s filmem. Film nemusí být vždy možné sledovat, takže položka IsAlwaysBindable by v tomto případě měla hodnotu false.</summary>
      <returns>Hodnota true, pokud tato akce vždy umožňuje vazbu; jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.IsBindable">
      <summary>Získá hodnotu indikující, zda lze akci najít na adrese URL představující položku BindingParameter.</summary>
      <returns>Hodnota true, pokud lze akci najít na adrese URL představující položku BindingParameter; jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.Kind">
      <summary>Získá druh procedury, možnosti: Action, Function nebo ServiceOperation.</summary>
      <returns>Druh procedury.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.Parameter``1(System.String)">
      <summary>Přidá nový parametr neumožňující vazbu.</summary>
      <returns>Nový parametr neumožňující vazbu.</returns>
      <param name="name">Název parametru</param>
      <typeparam name="TParameter">Parametr generického typu.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.Parameters">
      <summary>Získá parametry, které akce používá.</summary>
      <returns>Parametry, které akce používá.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.Returns``1">
      <summary>Nastaví návratový typ akce.</summary>
      <returns>Typ tohoto objektu <see cref="T:System.Web.Http.OData.Builder.ActionConfiguration" />.</returns>
      <typeparam name="TReturnType">Typ, který je typem ReturnType.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollection``1">
      <summary>Určí návratový typ akce. Používá se, pokud je návratový typ tvořen kolekcí primitivních nebo komplexních typů.</summary>
      <returns>Návratový typ tohoto objektu <see cref="T:System.Web.Http.OData.Builder.ActionConfiguration" />.</returns>
      <typeparam name="TReturnElementType">Typ tohoto objektu ReturnElementType.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollectionFromEntitySet``1(System.String)">
      <summary>Nastaví návratový typ na kolekci instancí typu EntityType.</summary>
      <returns>Návratový typ tohoto objektu <see cref="T:System.Web.Http.OData.Builder.ActionConfiguration" />.</returns>
      <param name="entitySetName">Název entitySetName, který obsahuje vrácené instance typu EntityType</param>
      <typeparam name="TElementEntityType">Typ, který je typem EntityType.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollectionFromEntitySet``1(System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Nastaví návratový typ na kolekci entit.</summary>
      <returns>Vrací objekt <see cref="T:System.Web.Http.OData.Builder.ActionConfiguration" />.</returns>
      <param name="entitySetConfiguration">Název sady entit, která obsahuje vrácené entity.</param>
      <typeparam name="TElementEntityType">Typ entity.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsFromEntitySet``1(System.String)">
      <summary>Nastaví návratový typ na jednu instanci typu EntityType.</summary>
      <returns>Návratový typ tohoto objektu <see cref="T:System.Web.Http.OData.Builder.ActionConfiguration" />.</returns>
      <param name="entitySetName">Název entitySetName, který obsahuje vrácenou instanci typu EntityType</param>
      <typeparam name="TEntityType">Typ, který je typem EntityType.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsFromEntitySet``1(System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Nastaví návratový typ na jednu instanci typu EntityType.</summary>
      <returns>Vrací objekt <see cref="T:System.Web.Http.OData.Builder.ActionConfiguration" />.</returns>
      <param name="entitySetConfiguration">Název sady entit, která obsahuje vrácenou entitu.</param>
      <typeparam name="TEntityType">Typ, který je typem EntityType.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.SetBindingParameter(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Boolean)">
      <summary>Určuje název položky bindingParameter, její typ a vlastnost alwaysBindable (používá se pouze tehdy, když má akce vlastnost isBindable).</summary>
      <returns>Parametr vazby tohoto objektu <see cref="T:System.Web.Http.OData.Builder.ActionConfiguration" />.</returns>
      <param name="name">Název parametru</param>
      <param name="bindingParameterType">Typ parametru vazby.</param>
      <param name="alwaysBindable">Hodnota true, pokud vždy umožňuje vazbu, jinak hodnota false.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ActionLinkBuilder">
      <summary>Třída ActionLinkBuilder umožňuje anotaci akce.Formátovací moduly tak vytvářejí odkazy pro volání vázaných akcí.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Boolean)">
      <summary>Vytvoří novou třídu ActionLinkBuilder na základě třídy actionLinkFactory.</summary>
      <param name="actionLinkFactory">Třída actionLinkFactory, kterou by měla tato třída ActionLinkBuilder používat při sestavení odkazů.</param>
      <param name="followsConventions">Hodnota, která udává, zda objekt faktory odkazu akce generuje odkazy vyhovující konvencím prostředí OData.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.BuildActionLink(System.Web.Http.OData.EntityInstanceContext)">
      <summary>Vytvoří pro danou entitu odkaz akce.</summary>
      <returns>Vygenerovaný odkaz akce.</returns>
      <param name="context">Kontext instance, do kterého je instance entity zabalena.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.CreateActionLinkFactory(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Func{System.Web.Http.OData.EntityInstanceContext,System.Boolean})">
      <summary>Vytvoří objekt factory odkazu akce, který sestaví odkaz akce, avšak pouze pokud je to vhodné v závislosti na položce expensiveAvailabilityCheck a pokud se mají provádět nákladné kontroly, což se vyvodí z položky EntityInstanceContext. Vlastnost SkipExpensiveActionAvailabilityChecks.</summary>
      <returns>Nový objekt factory odkazu akce.</returns>
      <param name="baseFactory">Objekt factory odkazu akce, který skutečně sestavuje odkazy, pokud všechny kontroly skončí úspěchem.</param>
      <param name="expensiveAvailabilityCheck">Funkce kontroly dostupnosti, která je nákladná, avšak po jejím volání se vrátí informace o tom, zda je daná akce dostupná.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionLinkBuilder.FollowsConventions">
      <summary>Získá logickou hodnotu udávající, zda má objekt factory odkazu dodržovat konvence prostředí OData, či nikoli.</summary>
      <returns>Vrací objekt <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ActionOnDeleteAttribute">
      <summary>Představuje atribut <see cref="T:System.Attribute" />, který se může u vlastnosti navigace použít k určení použité akce, jestli by odstranění mělo odstranit také související položku na druhém konci přidružení.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionOnDeleteAttribute.#ctor(Microsoft.Data.Edm.EdmOnDeleteAction)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.ActionOnDeleteAttribute" />.</summary>
      <param name="onDeleteAction">Akce použitá při odstranění.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionOnDeleteAttribute.OnDeleteAction">
      <summary>Načte akci, jestli by odstranění mělo odstranit také související položku na druhém konci přidružení.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.BindingParameterConfiguration">
      <summary>Představuje parametr vazby.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.BindingParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Boolean)">
      <summary>Vytvořit položku BindingParameterConfiguration</summary>
      <param name="name">Název parametru vazby</param>
      <param name="parameterType">Typ parametru vazby</param>
      <param name="alwaysBindable">Udává, zda lze akci vždy svázat s instancemi parametru vazby.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.BindingParameterConfiguration.AlwaysBindable">
      <summary>Udává, zda lze parametr vazby vždy svázat, či ne.Například některé akce jsou vždy dostupné, zatímco jiné jsou dostupné pouze někdy nebo v některých stavech.</summary>
      <returns>Vrací objekt <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:System.Web.Http.OData.Builder.BindingParameterConfiguration.DefaultBindingParameterName">
      <summary>Výchozí název parametru pro parametr vazby akce.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration">
      <summary>Položka CollectionPropertyConfiguration reprezentuje vlastnost CollectionProperty v typu EntityType nebo ComplexType.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Sestaví položku CollectionPropertyConfiguration na základě zadané vlastnosti <paramref name="property" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.ElementType">
      <summary>Vrátí typ elementů v kolekci.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.IsOptional">
      <summary>Nastaví vlastnost CollectionProperty na volitelnou hodnotu (tj.připouštějící hodnotu null).</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.IsRequired">
      <summary>Nastaví vlastnost CollectionProperty na povinnou hodnotu (tj.nepřipouštějící hodnotu null).</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.RelatedClrType"></member>
    <member name="T:System.Web.Http.OData.Builder.CollectionTypeConfiguration">
      <summary>Reprezentuje kolekci pojmenovaného typu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionTypeConfiguration.#ctor(System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Type)">
      <summary>Sestaví kolekci, která obsahuje elementy zadaného typu ElementType a v prostředí CLR je reprezentována pomocí zadaného typu clrType.</summary>
      <param name="elementType">Prvek EdmTypeConfiguration elementů v kolekci</param>
      <param name="clrType">Typ této kolekce tak, jak se projevuje v prostředí CLR.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ClrType">
      <summary>Získá typ CLR přidružený k tomuto typu kolekce.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ElementType">
      <summary>Získá položku <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" /> elementů v této kolekci.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.FullName">
      <summary>Získá úplný název (včetně oboru názvů) tohoto typu kolekce.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Kind">
      <summary>Získá druh typu <see cref="T:Microsoft.Data.Edm.IEdmType" />.V tomto případě se jedná o druh <see cref="F:Microsoft.Data.Edm.EdmTypeKind.Collection" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ModelBuilder">
      <summary>Získá objekt <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> použitý k vytvoření této konfigurace.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Name">
      <summary>Získá název tohoto typu kolekce.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Namespace">
      <summary>Získá obor názvů tohoto typu kolekce.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration">
      <summary>Reprezentuje konfiguraci pro komplexní vlastnost strukturálního typu (typu entity nebo komplexního typu).</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Vytvoří novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" />.</summary>
      <param name="property">Vlastnost konfigurace.</param>
      <param name="declaringType">Deklarující typ vlastnosti.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.IsOptional">
      <summary>Označí aktuální komplexní vlastnost jako volitelnou.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.IsRequired">
      <summary>Označí aktuální komplexní vlastnost jako povinnou.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.RelatedClrType"></member>
    <member name="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration">
      <summary>Umožňuje provedení konfigurace pro komplexní typ v modelu.Položku ComplexTypeConfiguration lze získat pomocí metody <see cref="M:System.Web.Http.OData.Builder.ODataModelBuilder.ComplexType``1" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexTypeConfiguration.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration" />.</summary>
      <param name="modelBuilder">Používaný tvůrce <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</param>
      <param name="clrType">Základní typ CLR pro tento typ entity.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ComplexTypeConfiguration.Kind"></member>
    <member name="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration`1">
      <summary>Reprezentuje typ <see cref="T:Microsoft.Data.Edm.IEdmComplexType" />, který lze sestavit pomocí tvůrce <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
      <typeparam name="TComplexType"></typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1">
      <summary>Třída EntityCollectionConfiguration reprezentuje kolekci entit.Tuto třídu lze použít ke konfiguraci toho, co se váže k entitám, například akcí s vazbou na určitou kolekci.</summary>
      <typeparam name="TEntityType">Typ entity, který je typem elementu dané kolekce entit</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1.Action(System.String)">
      <summary>Vytvoří novou akci s vazbou na položku Collection(EntityType).</summary>
      <returns>Položka ActionConfiguration, která umožní další konfiguraci akce.</returns>
      <param name="name">Název akce.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1.TransientAction(System.String)">
      <summary>Vytvoří novou akci, která se někdy váže na položku Collection(EntityType).</summary>
      <returns>Položka ActionConfiguration, která umožní další konfiguraci akce.</returns>
      <param name="name">Název akce.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntitySetConfiguration">
      <summary>Umožňuje provedení konfigurace pro sadu entit v modelu.Položku <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" /> lze získat pomocí metody <see cref="M:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" />.</summary>
      <param name="modelBuilder">Objekt <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /></param>
      <param name="entityType">Získá typ CLR <see cref="T:System.Type" /> typu entity obsaženého v této sadě entit.</param>
      <param name="name">Název sady entit.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Web.Http.OData.Builder.EntityTypeConfiguration,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" />.</summary>
      <param name="modelBuilder">Objekt <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /></param>
      <param name="entityType">Typ entity obsažený v této sadě entit</param>
      <param name="name">Název sady entit.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.AddBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.EntitySetConfiguration)">
      <summary>Sváže danou navigační vlastnost s cílovou sadou entit.</summary>
      <returns>Položka <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> umožňující další konfiguraci.</returns>
      <param name="navigationConfiguration">Navigační vlastnost.</param>
      <param name="targetEntitySet">Cílová sada entit.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.Bindings">
      <summary>Získá cíle navigace této sady entit.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.ClrType">
      <summary>Získá základní typ CLR pro typ entity obsažený v této sadě entit.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.EntityType">
      <summary>Získá typ entity obsažený v této sadě entit.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.String)">
      <summary>Získá konfiguraci <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> pro navigační vlastnost s daným názvem.</summary>
      <returns>Objekt <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /></returns>
      <param name="propertyName">Název navigační vlastnosti.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Vyhledá vazbu pro danou navigační vlastnost, a pokud neexistuje, pokusí se ji vytvořit.</summary>
      <returns>Položka <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> umožňující další konfiguraci.</returns>
      <param name="navigationConfiguration">Navigační vlastnost.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Boolean)">
      <summary>Vyhledá vazbu pro danou navigační vlastnost.</summary>
      <returns>Položka <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> umožňující další konfiguraci.</returns>
      <param name="navigationConfiguration">Navigační vlastnost.</param>
      <param name="autoCreate">Určí, zda se má vazba automaticky vytvořit, pokud neexistuje.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetEditLink">
      <summary>Získá tvůrce sloužícího ke generování odkazů na úpravu pro položky z této sady entit.</summary>
      <returns>Tvůrce odkazů.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetFeedSelfLink">
      <summary>Získá tvůrce sloužícího ke generování vlastních odkazů pro položky z této sady entit.</summary>
      <returns>Tvůrce odkazů.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetIdLink">
      <summary>Získá tvůrce sloužícího ke generování ID pro položky z této sady entit.</summary>
      <returns>Tvůrce.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Získá tvůrce sloužícího ke generování navigačního odkazu pro danou navigační vlastnost pro položky z této sady entit.</summary>
      <returns>Tvůrce odkazů.</returns>
      <param name="navigationProperty">Navigační vlastnost.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetReadLink">
      <summary>Získá tvůrce sloužícího ke generování odkazů pro čtení pro položky z této sady entit.</summary>
      <returns>Tvůrce odkazů.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetUrl">
      <summary>Získá adresu URL sady entit.</summary>
      <returns>Adresa URL sady entit.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasEditLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})">
      <summary>Nakonfiguruje pro entity z této sady entit odkaz pro úpravy.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
      <param name="editLinkBuilder">Tvůrce sloužící ke generování odkazu pro úpravy.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.Uri})">
      <summary>Přidá do informačního kanálu vlastní odkaz.</summary>
      <returns>Konfigurace sady entit, která se právě nastavuje.</returns>
      <param name="feedSelfLinkFactory">Tvůrce sloužící ke generování adresy URL odkazu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasIdLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.String})">
      <summary>Nakonfiguruje ID pro entity z této sady entit.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
      <param name="idLinkBuilder">Tvůrce sloužící ke generování ID.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Builder.NavigationPropertyConfiguration},System.Web.Http.OData.Builder.NavigationLinkBuilder)">
      <summary>Nakonfiguruje pro entity z této sady entit navigační odkaz pro dané navigační vlastnosti.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
      <param name="navigationProperties">Navigační vlastnosti, pro které má být vygenerován navigační odkaz.</param>
      <param name="navigationLinkBuilder">Tvůrce sloužící ke generování navigačního odkazu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.NavigationLinkBuilder)">
      <summary>Nakonfiguruje pro entity z této sady entit navigační odkaz pro danou navigační vlastnost.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
      <param name="navigationProperty">Navigační vlastnost, pro kterou má být vygenerován navigační odkaz.</param>
      <param name="navigationLinkBuilder">Tvůrce sloužící ke generování navigačního odkazu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasReadLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})">
      <summary>Nakonfiguruje pro entity z této sady entit odkaz pro čtení.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
      <param name="readLinkBuilder">Tvůrce sloužící ke generování odkazu pro čtení.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasUrl(System.String)">
      <summary>Konfiguruje adresu URL sady entit.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
      <param name="url">Adresa URL sady entit.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.Name">
      <summary>Získá název této sady entit.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.RemoveBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Odebere vazbu dané navigační vlastnosti.</summary>
      <param name="navigationConfiguration">Navigační vlastnost</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntitySetConfiguration`1">
      <typeparam name="TEntityType">Typ elementu pro danou sadu entit.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration`1.EntityType">
      <summary>Získá typ entity obsažený v této sadě entit.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.String)">
      <summary>Vyhledá konfiguraci <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> pro navigační vlastnost s daným názvem.</summary>
      <returns>Vazba, pokud je nalezena, jinak hodnota <see cref="null" />.</returns>
      <param name="propertyName">Název navigační vlastnosti.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Vyhledá položku <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> pro danou navigační vlastnost nebo ji vytvoří, pokud neexistuje.</summary>
      <returns>Vazba, pokud je nalezena, jinak vytvořená vazba.</returns>
      <param name="navigationConfiguration">Navigační vlastnost.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Boolean)">
      <summary>Vyhledá položku <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> pro danou navigační vlastnost.</summary>
      <returns>Vazba, je-li nalezena.</returns>
      <param name="navigationConfiguration">Navigační vlastnost.</param>
      <param name="autoCreate">Reprezentuje hodnotu udávající, zda má být vazba vytvořena, pokud nebude nalezena.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasEditLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)">
      <summary>Nakonfiguruje pro entity z této sady entit odkaz pro úpravy.</summary>
      <param name="editLinkFactory">Objekt factory sloužící ke generování odkazu pro úpravy.</param>
      <param name="followsConventions">Hodnota <see cref="true" />, pokud objekt factory dodržuje konvence prostředí OData pro odkazy pro úpravy, jinak hodnota <see cref="false" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasEditLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)">
      <summary>Nakonfiguruje pro entity z této sady entit odkaz pro úpravy.</summary>
      <param name="editLinkFactory">Objekt factory sloužící ke generování odkazu pro úpravy.</param>
      <param name="followsConventions">Hodnota <see cref="true" />, pokud objekt factory dodržuje konvence prostředí OData pro odkazy pro úpravy, jinak hodnota <see cref="false" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.String})">
      <summary>Přidá do informačního kanálu vlastní odkaz.</summary>
      <param name="feedSelfLinkFactory">Tvůrce sloužící ke generování adresy URL odkazu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.Uri})">
      <summary>Přidá do informačního kanálu vlastní odkaz.</summary>
      <param name="feedSelfLinkFactory">Tvůrce sloužící ke generování adresy URL odkazu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasIdLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)">
      <summary>Nakonfiguruje odkaz ID pro entity z této sady entit.</summary>
      <param name="idLinkFactory">Objekt factory sloužící ke generování odkazu ID.</param>
      <param name="followsConventions">Hodnota <see cref="true" />, pokud objekt factory dodržuje konvence prostředí OData pro odkazy ID, jinak hodnota <see cref="false" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <summary>Nakonfiguruje vícenásobný vztah z tohoto typu entity a sváže s danou sadou entit odpovídající navigační vlastnost.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vztah dále konfigurovat.</returns>
      <param name="navigationExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <param name="entitySetName">Název cílové sady entit pro vazbu.Pokud název neexistuje, bude vytvořen.</param>
      <typeparam name="TTargetType">Typ cílové sady entit.</typeparam>
      <typeparam name="TDerivedEntityType">Cílový typ entity.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Nakonfiguruje vícenásobný vztah z tohoto typu entity a sváže s danou sadou entit odpovídající navigační vlastnost.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vztah dále konfigurovat.</returns>
      <param name="navigationExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <param name="targetSet">Cílová sada entit pro vazbu.</param>
      <typeparam name="TTargetType">Typ cílové sady entit.</typeparam>
      <typeparam name="TDerivedEntityType">Cílový typ entity.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <summary>Nakonfiguruje vícenásobný vztah z tohoto typu entity a sváže s danou sadou entit odpovídající navigační vlastnost.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vztah dále konfigurovat.</returns>
      <param name="navigationExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <param name="entitySetName">Název cílové sady entit pro vazbu.Pokud název neexistuje, bude vytvořen.</param>
      <typeparam name="TTargetType">Typ cílové sady entit.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Nakonfiguruje vícenásobný vztah z tohoto typu entity a sváže s danou sadou entit odpovídající navigační vlastnost.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vztah dále konfigurovat.</returns>
      <param name="navigationExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <param name="targetSet">Cílová sada entit pro vazbu.</param>
      <typeparam name="TTargetType">Typ cílové sady entit.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Builder.NavigationPropertyConfiguration},System.Func{System.Web.Http.OData.EntityInstanceContext{`0},Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
      <summary>Nakonfiguruje pro entity z této sady entit navigační odkaz pro dané navigační vlastnosti.</summary>
      <param name="navigationProperties">Navigační vlastnosti, pro které má být vygenerován navigační odkaz.</param>
      <param name="navigationLinkFactory">Objekt factory sloužící ke generování navigačního odkazu.</param>
      <param name="followsConventions">Hodnota <see cref="true" />, pokud objekt factory dodržuje konvence prostředí OData pro navigační odkazy, jinak hodnota <see cref="false" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Func{System.Web.Http.OData.EntityInstanceContext{`0},Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
      <summary>Nakonfiguruje pro entity z této sady entit navigační odkaz pro danou navigační vlastnost.</summary>
      <param name="navigationProperty">Navigační vlastnost, pro kterou má být vygenerován navigační odkaz.</param>
      <param name="navigationLinkFactory">Objekt factory sloužící ke generování navigačního odkazu.</param>
      <param name="followsConventions">Hodnota <see cref="true" />, pokud objekt factory dodržuje konvence prostředí OData pro navigační odkazy, jinak hodnota <see cref="false" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
      <summary>Nakonfiguruje volitelný vztah z tohoto typu entity a sváže s danou sadou entit odpovídající navigační vlastnost.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vztah dále konfigurovat.</returns>
      <param name="navigationExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <param name="entitySetName">Název cílové sady entit pro vazbu.Pokud název neexistuje, bude vytvořen.</param>
      <typeparam name="TTargetType">Typ cílové sady entit.</typeparam>
      <typeparam name="TDerivedEntityType">Cílový typ entity.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Nakonfiguruje volitelný vztah z tohoto typu entity a sváže s danou sadou entit odpovídající navigační vlastnost.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vztah dále konfigurovat.</returns>
      <param name="navigationExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <param name="targetSet">Cílová sada entit pro vazbu.</param>
      <typeparam name="TTargetType">Typ cílové sady entit.</typeparam>
      <typeparam name="TDerivedEntityType">Cílový typ entity.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>Nakonfiguruje volitelný vztah z tohoto typu entity a sváže s danou sadou entit odpovídající navigační vlastnost.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vztah dále konfigurovat.</returns>
      <param name="navigationExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <param name="entitySetName">Název cílové sady entit pro vazbu.</param>
      <typeparam name="TTargetType">Typ cílové sady entit.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Nakonfiguruje volitelný vztah z tohoto typu entity a sváže s danou sadou entit odpovídající navigační vlastnost.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vztah dále konfigurovat.</returns>
      <param name="navigationExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <param name="targetSet">Cílová sada entit pro vazbu.</param>
      <typeparam name="TTargetType">Typ cílové sady entit.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasReadLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)">
      <summary>Nakonfiguruje pro entity z této sady entit odkaz pro čtení.</summary>
      <param name="readLinkFactory">Objekt factory sloužící ke generování odkazu pro čtení.</param>
      <param name="followsConventions">Hodnota <see cref="true" />, pokud objekt factory dodržuje konvence prostředí OData pro odkazy pro čtení, jinak hodnota <see cref="false" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasReadLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)">
      <summary>Nakonfiguruje pro entity z této sady entit odkaz pro čtení.</summary>
      <param name="readLinkFactory">Objekt factory sloužící ke generování odkazu pro čtení.</param>
      <param name="followsConventions">Hodnota <see cref="true" />, pokud objekt factory dodržuje konvence prostředí OData pro odkazy pro čtení, jinak hodnota <see cref="false" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
      <summary>Nakonfiguruje povinný vztah z tohoto typu entity a sváže s danou sadou entit odpovídající navigační vlastnost.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vztah dále konfigurovat.</returns>
      <param name="navigationExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <param name="entitySetName">Název cílové sady entit pro vazbu.</param>
      <typeparam name="TTargetType">Typ cílové sady entit.</typeparam>
      <typeparam name="TDerivedEntityType">Cílový typ entity.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Nakonfiguruje povinný vztah z tohoto typu entity a sváže s danou sadou entit odpovídající navigační vlastnost.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vztah dále konfigurovat.</returns>
      <param name="navigationExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <param name="targetSet">Cílová sada entit pro vazbu.</param>
      <typeparam name="TTargetType">Typ cílové sady entit.</typeparam>
      <typeparam name="TDerivedEntityType">Cílový typ entity.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>Nakonfiguruje povinný vztah z tohoto typu entity a sváže s danou sadou entit odpovídající navigační vlastnost.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vztah dále konfigurovat.</returns>
      <param name="navigationExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <param name="entitySetName">Název cílové sady entit pro vazbu.</param>
      <typeparam name="TTargetType">Typ cílové sady entit.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Nakonfiguruje povinný vztah z tohoto typu entity a sváže s danou sadou entit odpovídající navigační vlastnost.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vztah dále konfigurovat.</returns>
      <param name="navigationExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <param name="targetSet">Cílová sada entit pro vazbu.</param>
      <typeparam name="TTargetType">Typ cílové sady entit.</typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> je třída používaná k anotaci objektu <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> v rámci modelu <see cref="T:Microsoft.Data.Edm.IEdmModel" /> s využitím informací o postupu sestavování odkazů souvisejících s danou sadou entit.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.#ctor(Microsoft.Data.Edm.IEdmEntitySet,Microsoft.Data.Edm.IEdmModel)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" />.</summary>
      <param name="entitySet">Sada entit, pro kterou je vytvářen tvůrce odkazů.</param>
      <param name="model">Model EDM, ke které tato sada entit patří.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.#ctor(Microsoft.Data.Edm.IEdmEntitySet,System.Func{System.Web.Http.OData.FeedContext,System.Uri},System.Web.Http.OData.Builder.SelfLinkBuilder{System.String},System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri},System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})">
      <summary>Vytvoří instanci objektu <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.#ctor(System.Web.Http.OData.Builder.EntitySetConfiguration)">
      <summary>Vytvoří instanci objektu <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> z objektu <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.AddNavigationPropertyLinkBuilder(Microsoft.Data.Edm.IEdmNavigationProperty,System.Web.Http.OData.Builder.NavigationLinkBuilder)">
      <summary>Zaregistruje tvůrce obsahu pro objekt <see cref="T:Microsoft.Data.Edm.IEdmNavigationProperty" />, který naviguje z entit v této sadě entit.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildEditLink(System.Web.Http.OData.EntityInstanceContext,System.Web.Http.OData.Formatter.ODataMetadataLevel,System.String)">
      <summary>Vytvoří adresu URL EditLink pro konkrétní položky <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> a <see cref="T:System.Web.Http.OData.Formatter.ODataMetadataLevel" />.</summary>
      <returns>Vrací objekt <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildEntitySelfLinks(System.Web.Http.OData.EntityInstanceContext,System.Web.Http.OData.Formatter.ODataMetadataLevel)">
      <summary>Vytvoří <see cref="T:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks" /> pro konkrétní položky <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> a <see cref="T:System.Web.Http.OData.Formatter.ODataMetadataLevel" />.</summary>
      <returns>Vrací objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildFeedSelfLink(System.Web.Http.OData.FeedContext)">
      <summary>Sestaví URI vlastního odkazu s daným objektem <see cref="T:System.Web.Http.OData.FeedContext" />.</summary>
      <returns>Vrací objekt <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildIdLink(System.Web.Http.OData.EntityInstanceContext,System.Web.Http.OData.Formatter.ODataMetadataLevel)">
      <summary>Vytvoří IdLink pro konkrétní položky <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> a <see cref="T:System.Web.Http.OData.Formatter.ODataMetadataLevel" />.</summary>
      <returns>Vrací objekt <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildNavigationLink(System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.Edm.IEdmNavigationProperty,System.Web.Http.OData.Formatter.ODataMetadataLevel)">
      <summary>Vytvoří NavigationLink pro konkrétní položky <see cref="T:System.Web.Http.OData.EntityInstanceContext" />, <see cref="T:Microsoft.Data.Edm.IEdmNavigationProperty" /> a <see cref="T:System.Web.Http.OData.Formatter.ODataMetadataLevel" />.</summary>
      <returns>Vrací objekt <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildReadLink(System.Web.Http.OData.EntityInstanceContext,System.Web.Http.OData.Formatter.ODataMetadataLevel,System.Uri)">
      <summary>Vytvoří adresu URL ReadLink pro konkrétní položky <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> a <see cref="T:System.Web.Http.OData.Formatter.ODataMetadataLevel" />.</summary>
      <returns>Vrací objekt <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntityTypeConfiguration">
      <summary>Reprezentuje typ <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />, který lze sestavit pomocí tvůrce <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration" />.</summary>
      <param name="modelBuilder">Používaný tvůrce <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</param>
      <param name="clrType">Základní typ CLR pro tento typ entity.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.Abstract">
      <summary>Označí tento typ entity jako abstraktní.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
      <summary>Přidá k tomuto typu entity novou vlastnost kolekce EDM.</summary>
      <returns>Vrátí položku <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" /> přidané vlastnosti.</returns>
      <param name="propertyInfo">Základní vlastnost CLR.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
      <summary>Přidá k tomuto typu entity novou komplexní vlastnost EDM.</summary>
      <returns>Vrátí položku <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" /> přidané vlastnosti.</returns>
      <param name="propertyInfo">Základní vlastnost CLR.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddNavigationProperty(System.Reflection.PropertyInfo,Microsoft.Data.Edm.EdmMultiplicity)">
      <summary>Přidá k tomuto typu entity novou navigační vlastnost EDM.</summary>
      <returns>Vrátí položku <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> přidané vlastnosti.</returns>
      <param name="navigationProperty">Základní vlastnost CLR.</param>
      <param name="multiplicity">Položka <see cref="T:Microsoft.Data.Edm.EdmMultiplicity" /> navigační vlastnosti.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
      <summary>Přidá k tomuto typu entity novou primitivní vlastnost EDM.</summary>
      <returns>Vrátí položku <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration" /> přidané vlastnosti.</returns>
      <param name="propertyInfo">Základní vlastnost CLR.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.BaseType">
      <summary>Získá nebo nastaví základní typ tohoto typu entity.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.BaseTypeConfigured">
      <summary>Získá hodnotu, která udává, zda je základní typ explicitně nakonfigurován, nebo vyvozen.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.DerivesFrom(System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Nastaví základní typ tohoto typu entity.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
      <param name="baseType">Základní typ entity.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.DerivesFromNothing">
      <summary>Nastaví základní typ tohoto typu entity na hodnotu null, což znamená, že se tento typ entity z ničeho neodvozuje.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.HasKey(System.Reflection.PropertyInfo)">
      <summary>Nakonfiguruje klíčové vlastnosti pro tento typ entity.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
      <param name="keyProperty">Vlastnost, která má být přidána ke klíčovým vlastnostem tohoto typu entity.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.IsAbstract">
      <summary>Získá nebo nastaví hodnotu, která udává, zda je tento typ abstraktní.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.Keys">
      <summary>Získá kolekci klíčů pro tento typ entity.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.Kind">
      <summary>Získá druh <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> této položky <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.NavigationProperties">
      <summary>Získá kolekci položek <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> tohoto typu entity.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.RemoveKey(System.Web.Http.OData.Builder.PrimitivePropertyConfiguration)">
      <summary>Odebere vlastnost z kolekce klíčů entit.</summary>
      <param name="keyProperty">Klíč určený k odebrání.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)">
      <summary>Odebere vlastnost z entity.</summary>
      <param name="propertyInfo">Údaj <see cref="T:System.Reflection.PropertyInfo" /> odebírané vlastnosti.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntityTypeConfiguration`1">
      <summary>Reprezentuje typ <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />, který lze sestavit pomocí tvůrce <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
      <typeparam name="TEntityType">Základní typ CLR pro tento typ <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Abstract">
      <summary>Označí tento typ entity jako abstraktní.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Action(System.String)">
      <summary>Vytvoří akci, která se sváže s tímto typem entity.</summary>
      <returns>Položka ActionConfiguration, která umožní další konfiguraci nové akce.</returns>
      <param name="name">Název akce</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.BaseType">
      <summary>Získá základní typ tohoto typu entity.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Collection">
      <summary>Slouží k přístupu ke kolekci entit, která umožňuje konfiguraci akcí umožňujících vazbu na kolekce entit.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.DerivesFrom``1">
      <summary>Nastaví základní typ tohoto typu entity.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
      <typeparam name="TBaseType">Základní typ entity.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.DerivesFromNothing">
      <summary>Nastaví základní typ tohoto typu entity na hodnotu null, což znamená, že se tento typ entity z ničeho neodvozuje.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Nakonfiguruje klíčové vlastnosti pro tento typ entity.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
      <param name="keyDefinitionExpression">Výraz lambda reprezentující vlastnost, která má být použita jako primární klíč.Příklad pro jazyk C#: t =&amp;gt; t.Id. Příklad pro jazyk Visual Basic: .Net Function(t) t.Id.</param>
      <typeparam name="TKey">Typ klíče.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>Nakonfiguruje vícenásobný vztah z tohoto typu entity.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vztah dále konfigurovat.</returns>
      <param name="navigationPropertyExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">Typ entity na druhém konci vztahu.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasOptional``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Nakonfiguruje volitelný vztah z tohoto typu entity.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vztah dále konfigurovat.</returns>
      <param name="navigationPropertyExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">Typ entity na druhém konci vztahu.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasOptional``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
      <summary>Nakonfiguruje volitelný vztah s referenčním omezením z tohoto typu entity.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vztah dále konfigurovat.</returns>
      <param name="navigationPropertyExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.Customer. Příklad pro prostředí Visual Basic .NET: Function(t) t.Cusomter.</param>
      <param name="referentialConstraintExpression">Výraz lambda reprezentující referenční omezení.Příklad pro jazyk C#: (o, c) =&gt; o.CustomerId == c.Id. Příklad pro prostředí Visual Basic .NET: Function(o, c) o.CustomerId == c.Id.</param>
      <typeparam name="TTargetEntity">Typ entity na druhém konci vztahu.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasRequired``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Nakonfiguruje vyžadovaný vztah z tohoto typu entity.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vztah dále konfigurovat.</returns>
      <param name="navigationPropertyExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">Typ entity na druhém konci vztahu.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasRequired``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
      <summary>Nakonfiguruje požadovaný vztah s referenčním omezením z tohoto typu entity.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vztah dále konfigurovat.</returns>
      <param name="navigationPropertyExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.Customer. Příklad pro prostředí Visual Basic .NET: Function(t) t.Customer.</param>
      <param name="referentialConstraintExpression">Výraz lambda reprezentující referenční omezení.Příklad pro jazyk C#: (o, c) =&gt; o.CustomerId == c.Id. Příklad pro prostředí Visual Basic .NET: Function(o) o.CustomerId == c.Id.</param>
      <typeparam name="TTargetEntity">Typ entity na druhém konci vztahu.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.NavigationProperties">
      <summary>Získá kolekci položek <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> tohoto typu entity.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.TransientAction(System.String)">
      <summary>Vytvoří akci, která se někdy váže k tomuto typu entity.</summary>
      <returns>Položka ActionConfiguration, která umožní další konfiguraci nové přechodné akce.</returns>
      <param name="name">Název akce</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration">
      <summary>Představuje typ EdmType.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.ClrType">
      <summary>Typ CLR přidružený k typu EdmType.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.FullName">
      <summary>Úplný název (včetně oboru názvů) typu EdmType.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Kind">
      <summary>Druh typu EdmType.Příklady: EntityType, ComplexType, PrimitiveType, CollectionType.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.ModelBuilder">
      <summary>Tvůrce ODataModelBuilder použitý k vytvoření tohoto typu IEdmType.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Name">
      <summary>Jméno typu EdmType.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Namespace">
      <summary>Obor názvů typu EdmType.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.LinkGenerationHelpers">
      <summary>Obsahuje pomocné metody pro generování odkazů OData, které dodržují konvence prostředí OData pro adresy URL.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.LinkGenerationHelpers.GenerateActionLink(System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.Edm.IEdmFunctionBase)">
      <summary>Vytvoří odkaz akce v souladu s konvencemi prostředí OData pro adresy URL pro akci <paramref name="action" /> a vázaný k entitě reprezentované objektem <paramref name="entityContext" />.</summary>
      <returns>Vygenerovaný odkaz akce v souladu s konvencemi prostředí OData pro adresy URL.</returns>
      <param name="entityContext">Objekt <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> reprezentující entitu, pro niž je třeba vytvořit odkaz akce.</param>
      <param name="action">Akce, pro niž je třeba vytvořit odkaz akce.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.LinkGenerationHelpers.GenerateFeedSelfLink(System.Web.Http.OData.FeedContext)">
      <summary>Vytvoří vlastní odkaz v souladu s konvencemi prostředí OData pro adresy URL pro informační kanál reprezentovaný objektem <paramref name="feedContext" />.</summary>
      <returns>Vygenerovaný vlastní odkaz informačního kanálu v souladu s konvencemi prostředí OData pro adresy URL.</returns>
      <param name="feedContext">Objekt <see cref="T:System.Web.Http.OData.FeedContext" /> reprezentující informační kanál, pro nějž je třeba vytvořit vlastní odkaz.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.LinkGenerationHelpers.GenerateNavigationPropertyLink(System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.Edm.IEdmNavigationProperty,System.Boolean)">
      <summary>Vytvoří navigační odkaz v souladu s konvencemi prostředí OData pro adresy URL pro entitu reprezentovanou objektem <paramref name="entityContext" /> a danou navigační vlastnost.</summary>
      <returns>Navigační odkaz v souladu s konvencemi prostředí OData pro adresy URL.</returns>
      <param name="entityContext">Objekt <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> reprezentující entitu, pro niž je třeba vytvořit navigační odkaz.</param>
      <param name="navigationProperty">Navigační vlastnost EDM.</param>
      <param name="includeCast">Udává, zda vytvořený odkaz obsahuje segment, který reprezentuje přetypování.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.LinkGenerationHelpers.GenerateSelfLink(System.Web.Http.OData.EntityInstanceContext,System.Boolean)">
      <summary>Vytvoří vlastní odkaz v souladu s konvencemi prostředí OData pro adresy URL pro entitu reprezentovanou objektem <paramref name="entityContext" />.</summary>
      <returns>Vlastní odkaz v souladu s konvencemi prostředí OData pro adresy URL.</returns>
      <param name="entityContext">Objekt <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> reprezentující entitu, pro niž je třeba vytvořit vlastní odkaz.</param>
      <param name="includeCast">Udává, zda vytvořený odkaz obsahuje segment, který reprezentuje přetypování.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NavigationLinkBuilder">
      <summary>Zapouzdří objekt factory navigačních odkazů a určí, zda má tento objekt factory odkazů dodržovat konvence, či nikoli.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationLinkBuilder.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.NavigationLinkBuilder" />.</summary>
      <param name="navigationLinkFactory">Objekt faktory navigačních odkazů sloužící k vytváření navigačních odkazů.</param>
      <param name="followsConventions">Udává, zda má tento objekt faktory dodržovat konvence prostředí OData, či nikoli.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationLinkBuilder.Factory">
      <summary>Získá objekt faktory navigačních odkazů sloužící k vytváření navigačních odkazů.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationLinkBuilder.FollowsConventions">
      <summary>Získá hodnotu udávající, zda má tento objekt faktory dodržovat konvence prostředí OData, či nikoli.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration">
      <summary>Slouží ke konfiguraci vazby pro navigační vlastnost sady entit.Tato konfigurační funkce je zveřejněna rozhraním API Fluent tvůrce modelu (viz <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />).</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.#ctor(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.EntitySetConfiguration)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" />.</summary>
      <param name="navigationProperty">Navigační vlastnost pro vazbu.</param>
      <param name="entitySet">Cílová sada entit vazby.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.EntitySet">
      <summary>Získá cílovou sadu entit vazby.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.NavigationProperty">
      <summary>Získá navigační vlastnost vazby.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration">
      <summary>Reprezentuje konfiguraci navigační vlastnosti typu entity.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,Microsoft.Data.Edm.EdmMultiplicity,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" />.</summary>
      <param name="property">Základní vlastnost CLR.</param>
      <param name="multiplicity">Objekt <see cref="T:Microsoft.Data.Edm.EdmMultiplicity" /></param>
      <param name="declaringType">Deklarující typ entity.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.CascadeOnDelete">
      <summary>Nakonfiguruje kaskádové odstranění jako zapnuté pro navigační vlastnost.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.CascadeOnDelete(System.Boolean)">
      <summary>Umožňuje nakonfigurovat, jestli má být kaskádové odstranění pro navigační vlastnost zapnuté.</summary>
      <param name="cascade">true označuje, že se při odstranění mají odebrat taky přidružené položky; false označuje, že se při odstraňování nemá provádět žádná další akce.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.DeclaringEntityType">
      <summary>Získá deklarující typ entity.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.HasConstraint(System.Collections.Generic.KeyValuePair{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo})">
      <summary>Nakonfiguruje referenční omezení pro navigační vlastnost.Vlastnost Dependent se přidá jako primitivní vlastnost, která nemůže mít hodnotu null, do deklarujícího typu entity, pokud není v typu entity.</summary>
      <param name="constraint">Informace o dvojici vlastností Dependent a Principal</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.HasConstraint(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)">
      <param name="dependentPropertyInfo">Informace o vlastnosti Dependent pro referenční omezení</param>
      <param name="principalPropertyInfo">Informace o vlastnosti Principal pro referenční omezení</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Kind">
      <summary>Získá druh <see cref="T:System.Web.Http.OData.Builder.PropertyKind" /> této vlastnosti.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Multiplicity">
      <summary>Získá parametr <see cref="T:Microsoft.Data.Edm.EdmMultiplicity" /> této navigační vlastnosti.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.OnDeleteAction">
      <summary>Získá nebo nastaví akci odstranění pro tuto navigační vlastnost.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Optional">
      <summary>Označí navigační vlastnost jako volitelnou.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.ReferentialConstraint">
      <summary>Získá referenční omezení jen pro čtení této navigační vlastnosti.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.RelatedClrType">
      <summary>Získá základní typ CLR tohoto typu vlastnosti.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Required">
      <summary>Označí navigační vlastnost jako povinnou.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NonbindingParameterConfiguration">
      <summary>Reprezentuje parametr procedury neumožňující vazbu.Parametry neumožňující vazbu jsou obsaženy v textu POST pro parametry akcí neumožňující vazbu a pro funkce jsou k dispozici ve třech podobách: - ~/.../Function(p1=value) - ~/.../Function(p1=@x)?@x=value - ~/.../Function?p1=value (povoleno pouze v případě, že funkce tvoří poslední segment cesty adresy URL).</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NonbindingParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.NonbindingParameterConfiguration" />.</summary>
      <param name="name">Název parametru</param>
      <param name="parameterType">Typ EDM parametru.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" /> slouží k automatickému mapování tříd CLR na model EDM založený na sadě konvencí <see cref="T:System.Web.Http.OData.Builder.Conventions.IConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Inicializuje nový objekt <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />.</summary>
      <param name="configuration">Modul <see cref="T:System.Web.Http.HttpConfiguration" />, která má být použit.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor(System.Web.Http.HttpConfiguration,System.Boolean)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />.</summary>
      <param name="configuration">Modul <see cref="T:System.Web.Http.HttpConfiguration" />, která má být použit.</param>
      <param name="isQueryCompositionMode">Pokud se model sestavuje jen pro dotazování.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddComplexType(System.Type)"></member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddEntity(System.Type)"></member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddEntitySet(System.String,System.Web.Http.OData.Builder.EntityTypeConfiguration)"></member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.GetEdmModel"></member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.Ignore``1">
      <summary>Vyloučí z modelu určitý typ.Cílem je odebrat z modelu typy, které byly při počátečním zjišťování modelu přidány na základě konvencí.</summary>
      <returns>Stejná položka , aby bylo možné zřetězit více volání.</returns>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.Ignore(System.Type[])">
      <summary>Vyloučí z modelu určitý typ nebo typy.Cílem je odebrat z modelu typy, které byly při počátečním zjišťování modelu přidány na základě konvencí.</summary>
      <returns>Stejná položka , aby bylo možné zřetězit více volání.</returns>
      <param name="types">Typy, které mají být z modelu vyloučeny.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataConventionModelBuilder.OnModelCreating">
      <summary>Tato akce je volána poté, co objekt <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" /> spustil všechny konvence, avšak před uzamknutím konfigurace, a slouží k sestavení modelu <see cref="T:Microsoft.Data.Edm.IEdmModel" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ODataModelBuilder">
      <summary>Představuje tvůrce modelu, který se používá k mapování tříd CLR do modelu EDM.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.Action(System.String)">
      <summary>Přidá do tvůrce akci neumožňující vazbu.</summary>
      <returns>Objekt konfigurace pro zadanou akci.</returns>
      <param name="name">Název akce</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddComplexType(System.Type)">
      <summary>Zaregistruje jako součást modelu komplexní typ a vrátí objekt, který lze použít ke konfiguraci entity.Tuto metodu lze pro stejnou entitu volat vícekrát, a provést tak více řádků konfigurace.</summary>
      <returns>Objekt konfigurace pro zadaný komplexní typ.</returns>
      <param name="type">Typ, který má být zaregistrován nebo nakonfigurován.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddEntity(System.Type)">
      <summary>Zaregistruje jako součást modelu typ entity a vrátí objekt, který lze použít ke konfiguraci entity.Tuto metodu lze pro stejnou entitu volat vícekrát, a provést tak více řádků konfigurace.</summary>
      <returns>Objekt konfigurace pro zadaný typ entity.</returns>
      <param name="type">Typ, který má být zaregistrován nebo nakonfigurován.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddEntitySet(System.String,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Zaregistruje jako součást modelu entitu a vrátí objekt, který lze použít ke konfiguraci sady entit.Tuto metodu lze pro stejný typ volat vícekrát, a provést tak více řádků konfigurace.</summary>
      <returns>Objekt konfigurace pro zadanou sadu entit.</returns>
      <param name="name">Název sady entit.</param>
      <param name="entityType">Typ, který má být zaregistrován nebo nakonfigurován.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddProcedure(System.Web.Http.OData.Builder.ProcedureConfiguration)">
      <summary>Přidá do modelu proceduru.</summary>
      <param name="procedure">Procedura určená k přidání</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.ComplexType``1">
      <summary>V modelu zaregistruje typ jako komplexní typ a vrátí objekt, který lze použít ke konfiguraci tohoto komplexního typu.Tuto metodu lze pro stejný typ volat vícekrát, a provést tak více řádků konfigurace.</summary>
      <returns>Objekt konfigurace pro zadaný komplexní typ.</returns>
      <typeparam name="TComplexType">Typ, který má být zaregistrován nebo nakonfigurován.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.ContainerName">
      <summary>Získá nebo nastaví název kontejneru, který bude obsahovat všechny sady entit, akce a funkce.</summary>
      <returns>Název kontejneru</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.DataServiceVersion">
      <summary>Získá nebo nastaví verzi datové služby modelu.Výchozí hodnota je 3.0.</summary>
      <returns>Verze datové služby modelu</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.Entity``1">
      <summary>Zaregistruje jako součást modelu typ entity a vrátí objekt, který lze použít ke konfiguraci entity.Tuto metodu lze pro stejnou entitu volat vícekrát, a provést tak více řádků konfigurace.</summary>
      <returns>Objekt konfigurace pro zadaný typ entity.</returns>
      <typeparam name="TEntityType">Typ, který má být zaregistrován nebo nakonfigurován.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)">
      <summary>Zaregistruje jako součást modelu entitu a vrátí objekt, který lze použít ke konfiguraci sady entit.Tuto metodu lze pro stejný typ volat vícekrát, a provést tak více řádků konfigurace.</summary>
      <returns>Objekt konfigurace pro zadanou sadu entit.</returns>
      <param name="name">Název sady entit.</param>
      <typeparam name="TEntityType">Typ entity pro danou sadu entit.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySets">
      <summary>Získá kolekci sad entit EDM v modelu, který má být sestaven.</summary>
      <returns>Kolekce sad entit EDM v modelu, který má být sestaven</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.GetEdmModel">
      <summary>V závislosti na konfiguraci provedené pomocí tohoto tvůrce vytvoří a vrátí model <see cref="T:Microsoft.Data.Edm.IEdmModel" />.</summary>
      <returns>Model, který byl sestaven.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.GetTypeConfigurationOrNull(System.Type)">
      <summary>Pokusí se najít buď předběžně nakonfigurovaný strukturální typ, nebo primitivní typ odpovídající položce <paramref name="type" />.Nejsou-li nalezeny žádné shody, vrátí se hodnota null.</summary>
      <returns>Předkonfigurovaný strukturální typ nebo primitivní typ, pokud je nalezen, v opačném případě hodnota null</returns>
      <param name="type">Hledaný typ</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.MaxDataServiceVersion">
      <summary>Získá nebo nastaví maximální verzi datové služby modelu.Výchozí hodnota je 3.0.</summary>
      <returns>Maximální verze datové služby modelu</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.Namespace">
      <summary>Získá nebo nastaví obor názvů, který bude použit pro výsledný model.</summary>
      <returns>Obor názvů, který se použije pro výsledný model</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.Procedures">
      <summary>Získá kolekci procedur (například akcí, funkcí a operací služeb) v modelu, který má být sestaven.</summary>
      <returns>Kolekce procedur</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveEntitySet(System.String)">
      <summary>Odebere sadu entit z modelu.</summary>
      <returns>Hodnota true, pokud se daná sada entit nachází v modelu, jinak hodnota false.</returns>
      <param name="name">Název sady entit, která má být odebrána</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveProcedure(System.String)">
      <summary>Odebere proceduru z modelu.</summary>
      <returns>Hodnota true, pokud se daná procedura nachází v modelu, jinak hodnota false.</returns>
      <param name="name">Název odebírané procedury.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveProcedure(System.Web.Http.OData.Builder.ProcedureConfiguration)">
      <summary>Odebere proceduru z modelu.</summary>
      <returns>Hodnota true, pokud se daná procedura nachází v modelu, jinak hodnota false.</returns>
      <param name="procedure">Procedura určená k odebrání.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveStructuralType(System.Type)">
      <summary>Odebere typ z modelu.</summary>
      <returns>Hodnota true, pokud se daný typ nachází v modelu, jinak hodnota false.</returns>
      <param name="type">Typ určený k odebrání</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.StructuralTypes">
      <summary>Získá kolekci strukturálních typů EDM v modelu, který má být sestaven.</summary>
      <returns>Kolekce strukturálních typů EDM v modelu</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ParameterConfiguration">
      <summary>Reprezentuje parametr pro proceduru.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.ParameterConfiguration" />.</summary>
      <param name="name">Název parametru</param>
      <param name="parameterType">Typ EDM parametru.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ParameterConfiguration.Name">
      <summary>Název parametru.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ParameterConfiguration.TypeConfiguration">
      <summary>Typ parametru.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration">
      <summary>Slouží ke konfiguraci primitivní vlastnosti typu entity nebo komplexního typu.Tato konfigurační funkce je zveřejněna rozhraním API Fluent tvůrce modelu (viz <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />).</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration" />.</summary>
      <param name="property">Název vlastnosti</param>
      <param name="declaringType">Deklarující typ EDM dané vlastnosti.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.HasStoreGeneratedPattern(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)">
      <summary>Nakonfiguruje vlastnost tak, aby měla zadaný výčet <paramref name="databaseGeneratedOption" />.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
      <param name="databaseGeneratedOption">Cílový výčet DatabaseGeneratedOption</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.IsConcurrencyToken">
      <summary>Nakonfiguruje vlastnost tak, aby měla atribut ConcurrencyCheck (OData: ETag).</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.IsOptional">
      <summary>Nakonfiguruje vlastnost jako volitelnou.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.IsRequired">
      <summary>Nakonfiguruje vlastnost jako vyžadovanou.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.Kind">
      <summary>Získá typ této vlastnosti.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.RelatedClrType">
      <summary>Získá základní typ CLR tohoto typu vlastnosti.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.StoreGeneratedPattern">
      <summary>Získá nebo nastaví hodnotu, která udává, který výčet StoreGeneratedPattern je tato vlastnost.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration">
      <summary>Reprezentuje jednoduchý typ.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,Microsoft.Data.Edm.IEdmPrimitiveType,System.Type)">
      <summary>Tento konstruktor je veřejný pouze pro účely testování jednotek.K získání položky PrimitiveTypeConfiguration použijte metodu ODataModelBuilder.GetTypeConfigurationOrNull(Type).</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.ClrType">
      <summary>Získá základní typ CLR tohoto typu EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.EdmPrimitiveType">
      <summary>Vrátí typ IEdmPrimitiveType přidružený k této položce PrimitiveTypeConfiguration.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.FullName">
      <summary>Získá úplný název tohoto typu EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Kind">
      <summary>Získá druh <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> tohoto typu EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.ModelBuilder">
      <summary>Získá objekt <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> použitý k vytvoření této konfigurace.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Name">
      <summary>Získá název tohoto typu EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Namespace">
      <summary>Získá obor názvů tohoto typu EDM.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ProcedureConfiguration">
      <summary>Reprezentuje proceduru zveřejněnou v modelu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ProcedureConfiguration.#ctor"></member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ContainerQualifiedName">
      <summary>Úplný název procedury při použití v adresách URL OData.Úplný název je nutný k rozlišení procedury od případných jiných identifikátorů složených z jedné části.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.EntitySet">
      <summary>Sada entit, ze které se vrátí entity.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.FullName">
      <summary>Položka FullName odpovídá položce ContainerQualifiedName.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.FullyQualifiedName">
      <summary>Položka FullyQualifiedName představuje položku ContainerQualifiedName, která je dále kvalifikována s použitím oboru názvů.To většinou není vyžadováno, protože většina služeb nemívá více kontejnerů se stejným názvem.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsAlwaysBindable">
      <summary>Má-li procedura vlastnost IsBindable, znamená to, že vždy umožňuje vazbu.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsBindable">
      <summary>Určuje, zda může být procedura svázána s adresou URL reprezentující parametr vazby.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsComposable">
      <summary>Určuje, zda lze proceduru dále upravovat.Například udává, zda lze adresu URL, která proceduru volá, použít jako základní adresu URL pro požadavek volající tuto proceduru a poté s výsledky provést jinou akci.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsSideEffecting">
      <summary>Udává, zda má procedura vedlejší účinky.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Kind">
      <summary>Druh procedury. Možnosti: Action, Function nebo ServiceOperation.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ModelBuilder">
      <summary>Získá nebo nastaví objekt <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> použitý k vytvoření této konfigurace.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Name">
      <summary>Název procedury</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Parameters">
      <summary>Parametry, které procedura používá</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ReturnType">
      <summary>Typ vrácený po volání procedury</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ProcedureKind">
      <summary>Druh procedury OData.Možnosti: Action, Function nebo ServiceOperation.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.Action">
      <summary>Akce.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.Function">
      <summary>Funkce.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.ServiceOperation">
      <summary>Operace služby.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PropertyConfiguration">
      <summary>Základní třída pro všechny konfigurace vlastností.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.PropertyConfiguration" />.</summary>
      <param name="property">Název vlastnosti</param>
      <param name="declaringType">Deklarující typ EDM dané vlastnosti.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.AddedExplicitly">
      <summary>Získá nebo nastaví hodnotu <see cref="true" />, pokud vlastnost přidal uživatel, nebo hodnotu <see cref="false" />, pokud byla vlastnost vyvozena z konvencí.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.DeclaringType">
      <summary>Získá deklarující typ.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.Kind">
      <summary>Získá druh <see cref="T:System.Web.Http.OData.Builder.PropertyKind" /> vlastnosti.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.Name">
      <summary>Získá název vlastnosti.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.PropertyInfo">
      <summary>Získá mapování třídy CLR <see cref="P:System.Web.Http.OData.Builder.PropertyConfiguration.PropertyInfo" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.RelatedClrType">
      <summary>Získá typ CLR <see cref="T:System.Type" /> vlastnosti.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PropertyKind">
      <summary>Druh vlastnosti EDM.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Collection">
      <summary>Reprezentuje vlastnost kolekce EDM.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Complex">
      <summary>Reprezentuje komplexní vlastnost EDM.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Navigation">
      <summary>Reprezentuje navigační vlastnost EDM.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Primitive">
      <summary>Reprezentuje primitivní vlastnost EDM.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.SelfLinkBuilder`1">
      <summary>Zapouzdří objekt factory vlastních odkazů a určí, zda má tento objekt factory odkazů dodržovat konvence, či nikoli.</summary>
      <typeparam name="T">Typ vlastního odkazu, který má být vygenerován.V případě odkazů na ID by se mělo jednat o typ <see cref="T:System.String" />, v případě odkazů pro čtení a úpravy o typ <see cref="T:System.Uri" />.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.SelfLinkBuilder`1.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,`0},System.Boolean)">
      <summary>Sestaví novou instanci položky <see cref="T:System.Web.Http.OData.Builder.SelfLinkBuilder`1" />.</summary>
      <param name="linkFactory">Objekt factory odkazu.</param>
      <param name="followsConventions">Určí, zda má objekt factory dodržovat konvence prostředí OData pro generování odkazů.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.SelfLinkBuilder`1.Factory">
      <summary>Získá objekt factory pro generování odkazů.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.SelfLinkBuilder`1.FollowsConventions">
      <summary>Získá logickou hodnotu udávající, zda má objekt factory odkazu dodržovat konvence prostředí OData, či nikoli.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.StructuralPropertyConfiguration">
      <summary>Základní třída pro všechny konfigurace strukturálních vlastností.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.StructuralPropertyConfiguration" />.</summary>
      <param name="property">Vlastnost konfigurace.</param>
      <param name="declaringType">Deklarující typ vlastnosti.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralPropertyConfiguration.ConcurrencyToken">
      <summary>Získá nebo nastaví hodnotu, která udává, jestli je tato vlastnost tokenem souběžnosti, nebo ne.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralPropertyConfiguration.OptionalProperty">
      <summary>Získá nebo nastaví hodnotu, která udává, zda je tato vlastnost volitelná, či nikoli.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration">
      <summary>Reprezentuje typ <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" />, který lze sestavit pomocí tvůrce <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration" />.</summary>
      <param name="modelBuilder">Přiřazená třída <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</param>
      <param name="clrType">Základní typ CLR pro tento strukturální typ EDM.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
      <summary>Přidá k tomuto typu EDM vlastnost kolekce.</summary>
      <returns>Položka <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" />, která umožní další konfiguraci vlastnosti.</returns>
      <param name="propertyInfo">Přidávaná vlastnost.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
      <summary>Přidá k tomuto typu EDM komplexní vlastnost.</summary>
      <returns>Položka <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" />, která umožní další konfiguraci vlastnosti.</returns>
      <param name="propertyInfo">Přidávaná vlastnost.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
      <summary>Přidá k tomuto typu EDM primitivní vlastnost.</summary>
      <returns>Položka <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration" />, která umožní další konfiguraci vlastnosti.</returns>
      <param name="propertyInfo">Přidávaná vlastnost.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ClrType">
      <summary>Získá základní typ CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ExplicitProperties">
      <summary>Získá kolekci explicitně přidaných vlastností.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.FullName">
      <summary>Získá úplný název tohoto typu EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.IgnoredProperties">
      <summary>Získá od základního typu CLR vlastnosti, které se mají u tohoto typu EDM ignorovat.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Kind">
      <summary>Získá druh <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> tohoto typu EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ModelBuilder">
      <summary>Objekt <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /></summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Name">
      <summary>Získá název tohoto typu EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Namespace">
      <summary>Získá obor názvů tohoto typu EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Properties">
      <summary>Získá deklarované vlastnosti tohoto typu EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.RemovedProperties">
      <summary>Získá kolekci explicitně odebraných vlastností.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)">
      <summary>Odebere danou vlastnost.</summary>
      <param name="propertyInfo">Odebíraná vlastnost.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1">
      <summary>Reprezentuje typ <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" />, který lze sestavit pomocí tvůrce <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
      <typeparam name="TStructuralType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.#ctor(System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1" />.</summary>
      <param name="configuration">Vnitřní konfigurace strukturálního typu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.CollectionProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>Přidá k tomuto typu EDM vlastnost kolekce.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vlastnost dále konfigurovat.</returns>
      <param name="propertyExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <typeparam name="TElementType">Typ elementu kolekce.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.ComplexProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Přidá k tomuto typu EDM komplexní vlastnost.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vlastnost dále konfigurovat.</returns>
      <param name="propertyExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <typeparam name="TComplexType">Komplexní typ.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Ignore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Vyloučí z tohoto typu vlastnost.</summary>
      <param name="propertyExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <typeparam name="TProperty">Typ vlastnosti.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Properties">
      <summary>Získá kolekci strukturálních vlastností EDM patřících k tomuto typu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}})">
      <summary>Přidá k tomuto typu EDM binární vlastnost.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vlastnost dále konfigurovat.</returns>
      <param name="propertyExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.IO.Stream}})">
      <summary>Přidá k tomuto typu EDM vlastnost datového proudu.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vlastnost dále konfigurovat.</returns>
      <param name="propertyExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
      <summary>Přidá k tomuto typu EDM volitelnou primitivní vlastnost.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vlastnost dále konfigurovat.</returns>
      <param name="propertyExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <typeparam name="T">Typ primitivní vlastnosti.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
      <summary>Přidá k tomuto typu EDM řetězcovou vlastnost.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vlastnost dále konfigurovat.</returns>
      <param name="propertyExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Přidá k tomuto typu EDM povinnou primitivní vlastnost.</summary>
      <returns>Objekt konfigurace, pomocí kterého lze vlastnost dále konfigurovat.</returns>
      <param name="propertyExpression">Výraz lambda reprezentující navigační vlastnost pro daný vztah.Příklad pro jazyk C#: t =&gt; t.MyProperty. Příklad pro prostředí Visual Basic .NET: Function(t) t.MyProperty.</param>
      <typeparam name="T">Typ primitivní vlastnosti.</typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Extensions.HttpConfigurationExtensions">
      <summary>Poskytuje rozšiřující metody pro třídu <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Extensions.HttpConfigurationExtensions.AddODataQueryFilter(System.Web.Http.HttpConfiguration)">
      <summary>Povolí podporu dotazů pro akce s návratovým typem <see cref="T:System.Linq.IQueryable" /> nebo <see cref="T:System.Linq.IQueryable`1" />.Chcete-li se vyhnout zpracování neočekávaných nebo nebezpečných dotazů, pomocí nastavení ověření u atributu <see cref="T:System.Web.Http.OData.EnableQueryAttribute" /> proveďte ověření příchozích dotazů.Další informace naleznete na stránce http://go.microsoft.com/fwlink/?LinkId=279712.</summary>
      <param name="configuration">Konfigurace serveru.</param>
    </member>
    <member name="M:System.Web.Http.OData.Extensions.HttpConfigurationExtensions.AddODataQueryFilter(System.Web.Http.HttpConfiguration,System.Web.Http.Filters.IActionFilter)">
      <summary>Povolí podporu dotazů pro akce s návratovým typem <see cref="T:System.Linq.IQueryable" /> nebo <see cref="T:System.Linq.IQueryable`1" />.Chcete-li se vyhnout zpracování neočekávaných nebo nebezpečných dotazů, pomocí nastavení ověření u atributu <see cref="T:System.Web.Http.OData.EnableQueryAttribute" /> proveďte ověření příchozích dotazů.Další informace naleznete na stránce http://go.microsoft.com/fwlink/?LinkId=279712.</summary>
      <param name="configuration">Konfigurace serveru.</param>
      <param name="queryFilter">Filtr akcí, který provede daný dotaz.</param>
    </member>
    <member name="M:System.Web.Http.OData.Extensions.HttpConfigurationExtensions.GetETagHandler(System.Web.Http.HttpConfiguration)">
      <summary>Získá z konfigurace objekt <see cref="T:System.Web.Http.OData.Formatter.IETagHandler" />.</summary>
      <returns>Objekt <see cref="T:System.Web.Http.OData.Formatter.IETagHandler" /> pro danou konfiguraci.</returns>
      <param name="configuration">Konfigurace serveru.</param>
    </member>
    <member name="M:System.Web.Http.OData.Extensions.HttpConfigurationExtensions.SetETagHandler(System.Web.Http.HttpConfiguration,System.Web.Http.OData.Formatter.IETagHandler)">
      <summary>Nastaví v konfiguraci položku <see cref="T:System.Web.Http.OData.Formatter.IETagHandler" />.</summary>
      <param name="configuration">Konfigurace serveru.</param>
      <param name="handler">Objekt <see cref="T:System.Web.Http.OData.Formatter.IETagHandler" /> pro danou konfiguraci.</param>
    </member>
    <member name="T:System.Web.Http.OData.Extensions.HttpErrorExtensions">
      <summary>Poskytuje rozšiřující metody pro třídu <see cref="T:System.Web.Http.HttpError" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Extensions.HttpErrorExtensions.CreateODataError(System.Web.Http.HttpError)">
      <summary>Převede položku <paramref name="httpError" /> na položku <see cref="T:Microsoft.Data.OData.ODataError" />.</summary>
      <returns>Převedená položka <see cref="T:Microsoft.Data.OData.ODataError" /></returns>
      <param name="httpError">Instance položky <see cref="T:System.Web.Http.HttpError" />, která má být převedena.</param>
    </member>
    <member name="T:System.Web.Http.OData.Extensions.HttpRequestMessageExtensions">
      <summary>Poskytuje rozšiřující metody pro třídu <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Extensions.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,Microsoft.Data.OData.ODataError)">
      <summary>Pomocná metoda, která provede vyjednávání obsahu a vytvoří objekt <see cref="T:System.Net.Http.HttpResponseMessage" /> představující chybu s instancí <see cref="T:System.Net.Http.ObjectContent`1" />, do které je jako obsah zabalena chyba <paramref name="oDataError" />.Pokud není formátování nalezeno, vrátí tato metoda odpověď se stavem 406 NotAcceptable.Tato metoda vyžaduje, aby byl požadavek <paramref name="request" /> přidružen k instanci <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
      <returns>Zabalení odpovědi na chybu <paramref name="oDataError" /> se stavovým kódem <paramref name="statusCode" />.</returns>
      <param name="request">Požadavek vyjadřující zájem.</param>
      <param name="statusCode">Stavový kód vytvořené odpovědi.</param>
      <param name="oDataError">Chyba OData, která má být zabalena.</param>
    </member>
    <member name="M:System.Web.Http.OData.Extensions.HttpRequestMessageExtensions.GetETag``1(System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary>Získá položku <see cref="T:System.Web.Http.OData.Formatter.ETag`1" /> z daného požadavku.</summary>
      <returns>Analyzovaná cesta <see cref="T:System.Web.Http.OData.Formatter.ETag`1" />.</returns>
      <param name="request">Žádost</param>
      <param name="entityTagHeaderValue">Hodnota hlavičky značky entity.</param>
      <typeparam name="TEntity"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Extensions.HttpRequestMessageExtensions.GetETag(System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary>Získá značku <see cref="T:System.Web.Http.OData.Formatter.ETag" /> prostředí OData z daného požadavku.</summary>
      <returns>Analyzovaná cesta <see cref="T:System.Web.Http.OData.Formatter.ETag" />.</returns>
      <param name="request">Žádost</param>
      <param name="entityTagHeaderValue">Hodnota hlavičky značky entity.</param>
    </member>
    <member name="M:System.Web.Http.OData.Extensions.HttpRequestMessageExtensions.ODataProperties(System.Net.Http.HttpRequestMessage)">
      <summary>Získá instanci <see cref="T:System.Web.Http.OData.Extensions.HttpRequestMessageProperties" /> obsahující metody a vlastnosti prostředí OData pro danou položku <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>Objekt, jehož prostřednictvím jsou k dispozici metody a vlastnosti prostředí OData pro daný požadavek <paramref name="request" />.</returns>
      <param name="request">Požadavek vyjadřující zájem.</param>
    </member>
    <member name="T:System.Web.Http.OData.Extensions.HttpRequestMessageProperties">
      <summary>Poskytuje vlastnosti, které se používají s metodou rozšíření <see cref="M:System.Web.Http.OData.Extensions.HttpRequestMessageExtensions.ODataProperties(System.Net.Http.HttpRequestMessage)" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Extensions.HttpRequestMessageProperties.Model">
      <summary>Získá nebo nastaví model EDM přidružený k požadavku.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Extensions.HttpRequestMessageProperties.NextLink">
      <summary>Získá nebo nastaví odkaz na další položku pro odpověď prostředí OData.Pokud se nemá klientovi odeslat žádný odkaz na další položku, metoda getter vrátí hodnotu null.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Extensions.HttpRequestMessageProperties.Path">
      <summary>Získá nebo nastaví cestu OData daného požadavku.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Extensions.HttpRequestMessageProperties.PathHandler">
      <summary>Získá nebo nastaví objekt <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> pro generování odkazů.Pokud je aktuálně nastavená hodnota null, metoda getter vytvoří výchozí objekt <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Extensions.HttpRequestMessageProperties.RouteName">
      <summary>Získá nebo nastaví název trasy pro generování odkazů OData.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Extensions.HttpRequestMessageProperties.RoutingConventions">
      <summary>Získá nebo nastaví konvence trasování prostředí OData, které se mají použít při výběru kontroleru a akce.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Extensions.HttpRequestMessageProperties.RoutingConventionsStore">
      <summary>Získá datové úložiště používané konvencemi <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> k ukládání dat vlastní trasy.Při prvním volání metoda getter vytvoří nový objekt IDictionary&lt;string, object&gt;.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Extensions.HttpRequestMessageProperties.SelectExpandClause">
      <summary>Získá nebo nastaví analyzovanou klauzuli OData <see cref="P:System.Web.Http.OData.Extensions.HttpRequestMessageProperties.SelectExpandClause" /> daného požadavku.Modul <see cref="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter" /> tuto informaci (pokud existuje) použije při zápisu odpovědi na tento požadavek.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Extensions.HttpRequestMessageProperties.TotalCount">
      <summary>Získá nebo nastaví celkový počet pro odpověď prostředí OData.Pokud se nemá klientovi vrátit žádný počet, metoda getter vrátí hodnotu null.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Extensions.HttpRouteCollectionExtensions">
      <summary>Poskytuje rozšiřující metody pro třídu <see cref="T:System.Web.Http.HttpRouteCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Extensions.HttpRouteCollectionExtensions.MapODataServiceRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel)">
      <summary>Mapuje zadanou trasu OData.</summary>
      <returns>Přidaný objekt <see cref="T:System.Web.Http.OData.Routing.ODataRoute" />.</returns>
      <param name="routes">Kolekce tras pro aplikaci</param>
      <param name="routeName">Název mapované trasy</param>
      <param name="routePrefix">Předpona, která se má přidat k šabloně cesty trasy OData.</param>
      <param name="model">Model EDM, který se má použít k analýze cest OData.</param>
    </member>
    <member name="M:System.Web.Http.OData.Extensions.HttpRouteCollectionExtensions.MapODataServiceRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Batch.ODataBatchHandler)">
      <summary>Mapuje zadanou trasu OData.Pokud je zadána položka <paramref name="batchHandler" />, vytvoří koncový bod $batch pro zpracování dávkových žádostí.</summary>
      <returns>Přidaný objekt <see cref="T:System.Web.Http.OData.Routing.ODataRoute" />.</returns>
      <param name="routes">Kolekce tras pro aplikaci</param>
      <param name="routeName">Název mapované trasy</param>
      <param name="routePrefix">Předpona, která se má přidat k šabloně cesty trasy OData.</param>
      <param name="model">Model EDM, který se má použít k analýze cest OData.</param>
      <param name="batchHandler">Objekt <see cref="T:System.Web.Http.OData.Batch.ODataBatchHandler" /></param>
    </member>
    <member name="M:System.Web.Http.OData.Extensions.HttpRouteCollectionExtensions.MapODataServiceRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary>Mapuje zadanou trasu OData.</summary>
      <returns>Přidaný objekt <see cref="T:System.Web.Http.OData.Routing.ODataRoute" />.</returns>
      <param name="routes">Kolekce tras pro aplikaci</param>
      <param name="routeName">Název mapované trasy</param>
      <param name="routePrefix">Předpona, která se má přidat k šabloně cesty trasy OData.</param>
      <param name="model">Model EDM, který se má použít k analýze cest OData.</param>
      <param name="pathHandler">Objekt <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" />, který se má použít k analýze cesty OData.</param>
      <param name="routingConventions">Konvence trasování OData, které se mají použít při výběru kontroleru a akce.</param>
    </member>
    <member name="M:System.Web.Http.OData.Extensions.HttpRouteCollectionExtensions.MapODataServiceRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention},System.Web.Http.OData.Batch.ODataBatchHandler)">
      <summary>Mapuje zadanou trasu OData.Pokud je zadána položka <paramref name="batchHandler" />, vytvoří koncový bod $batch pro zpracování dávkových žádostí.</summary>
      <returns>Přidaný objekt <see cref="T:System.Web.Http.OData.Routing.ODataRoute" />.</returns>
      <param name="routes">Kolekce tras pro aplikaci</param>
      <param name="routeName">Název mapované trasy</param>
      <param name="routePrefix">Předpona, která se má přidat k šabloně cesty trasy OData.</param>
      <param name="model">Model EDM, který se má použít k analýze cest OData.</param>
      <param name="pathHandler">Objekt <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" />, který se má použít k analýze cesty OData.</param>
      <param name="routingConventions">Konvence trasování OData, které se mají použít při výběru kontroleru a akce.</param>
      <param name="batchHandler">Objekt <see cref="T:System.Web.Http.OData.Batch.ODataBatchHandler" /></param>
    </member>
    <member name="T:System.Web.Http.OData.Extensions.UrlHelperExtensions">
      <summary>Poskytuje rozšiřující metody pro třídu <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Extensions.UrlHelperExtensions.CreateODataLink(System.Web.Http.Routing.UrlHelper,System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>Vygeneruje odkaz OData pomocí názvu trasy OData daného požadavku, obslužné rutiny cesty a daných segmentů.</summary>
      <returns>Vygenerovaný odkaz OData.</returns>
      <param name="urlHelper">Pomocný objekt adresy URL</param>
      <param name="segments">Segmenty cesty OData.</param>
    </member>
    <member name="M:System.Web.Http.OData.Extensions.UrlHelperExtensions.CreateODataLink(System.Web.Http.Routing.UrlHelper,System.String,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>Vygeneruje odkaz OData pomocí daného názvu trasy OData, obslužné rutiny cesty a segmentů.</summary>
      <returns>Vygenerovaný odkaz OData.</returns>
      <param name="urlHelper">Pomocný objekt adresy URL</param>
      <param name="routeName">Název trasy OData.</param>
      <param name="pathHandler">Obslužná rutina cesty, která se má použít k vygenerování odkazu.</param>
      <param name="segments">Segmenty cesty OData.</param>
    </member>
    <member name="M:System.Web.Http.OData.Extensions.UrlHelperExtensions.CreateODataLink(System.Web.Http.Routing.UrlHelper,System.Web.Http.OData.Routing.ODataPathSegment[])">
      <summary>Vygeneruje odkaz OData pomocí názvu trasy OData daného požadavku, obslužné rutiny cesty a daných segmentů.</summary>
      <returns>Vygenerovaný odkaz OData.</returns>
      <param name="urlHelper">Pomocný objekt adresy URL</param>
      <param name="segments">Segmenty cesty OData.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ETag">
      <summary>Značka ETag analyzovaná z požadavku.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ETag.#ctor">
      <summary>Vytvoří instanci <see cref="T:System.Web.Http.OData.Formatter.ETag" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ETag.ApplyTo(System.Linq.IQueryable)">
      <summary>Použije značku ETag na danou položku IQueryable.</summary>
      <returns>Nová položka <see cref="T:System.Linq.IQueryable" /> po použití značky ETag.</returns>
      <param name="query">Původní položka <see cref="T:System.Linq.IQueryable" />.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ETag.EntityType">
      <summary>Získá nebo nastaví typ entity dané značky ETag.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ETag.IsAny">
      <summary>Získá informaci, jestli značka ETag odpovídá *, nebo ji nastaví.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ETag.IsWellFormed">
      <summary>Získá informaci, jestli je značka ETag správně vytvořená, nebo ji nastaví.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ETag.Item(System.String)">
      <summary>Získá nebo nastaví hodnotu přidruženou k zadanému klíči.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ETag.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)"></member>
    <member name="M:System.Web.Http.OData.Formatter.ETag.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)"></member>
    <member name="T:System.Web.Http.OData.Formatter.ETag`1">
      <summary>Značka ETag typu entity <paramref name="TEntity" />.</summary>
      <typeparam name="TEntity">TEntity je typ entity.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ETag`1.#ctor">
      <summary>Vytvoří instanci třídy <see cref="T:System.Web.Http.OData.Formatter.ETag`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ETag`1.ApplyTo(System.Linq.IQueryable)"></member>
    <member name="M:System.Web.Http.OData.Formatter.ETag`1.ApplyTo(System.Linq.IQueryable{`0})">
      <summary>Použije značku ETag na danou položku <see cref="T:System.Linq.IQueryable`1" />.</summary>
      <returns>Nová položka <see cref="T:System.Linq.IQueryable`1" /> po použití značky ETag.</returns>
      <param name="query">Původní položka <see cref="T:System.Linq.IQueryable`1" />.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.IETagHandler">
      <summary>Zpřístupňuje schopnost převést kolekci názvů a hodnot vlastností souběžnosti na hodnotu <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> a analyzovat hodnotu <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> na seznam hodnot vlastností souběžnosti.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.IETagHandler.CreateETag(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Z názvů a hodnot vlastností souběžnosti vytvoří značku ETag.</summary>
      <returns>Generovaná značka ETag <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</returns>
      <param name="properties">Názvy a hodnoty vstupní vlastnosti.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.IETagHandler.ParseETag(System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary>Analyzuje hodnotu hlavičky značky ETag na názvy a hodnoty vlastností souběžnosti.</summary>
      <returns>Názvy a hodnoty vlastností souběžnosti.</returns>
      <param name="etagHeaderValue">Hodnota hlavičky značky ETag.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataBinaryValueMediaTypeMapping">
      <summary>Mapování typu médií, které přidružuje požadavky na nezpracovanou hodnotu binárních vlastností k typu obsahu application/octet-stream.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataBinaryValueMediaTypeMapping.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.ODataBinaryValueMediaTypeMapping" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataBinaryValueMediaTypeMapping.IsMatch(System.Web.Http.OData.Routing.PropertyAccessPathSegment)"></member>
    <member name="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter">
      <summary>Třída <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> určená ke zpracování protokolu OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Data.OData.ODataPayloadKind})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter" />.</summary>
      <param name="payloadKinds">Druh datových částí, které tento formátovací modul podporuje.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,System.Collections.Generic.IEnumerable{Microsoft.Data.OData.ODataPayloadKind})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter" />.</summary>
      <param name="deserializerProvider">Modul <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider" />, která má být použit.</param>
      <param name="serializerProvider">Modul <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" />, která má být použit.</param>
      <param name="payloadKinds">Druh datových částí, které tento formátovací modul podporuje.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.CanReadType(System.Type)"></member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.CanWriteType(System.Type)"></member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.DeserializerProvider">
      <summary>Získá hodnotu <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider" />, která bude použita pro tuto instanci formátovacího modulu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)"></member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageReaderQuotas">
      <summary>Získá položku <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" />, kterou tento formátovací modul používá na straně pro čtení.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageReaderSettings">
      <summary>Získá nastavení <see cref="T:Microsoft.Data.OData.ODataMessageReaderSettings" />, které se má používat při čtení požadavků.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageWriterQuotas">
      <summary>Získá položku <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" />, kterou tento formátovací modul používá na straně pro zápis.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageWriterSettings">
      <summary>Získá nastavení <see cref="T:Microsoft.Data.OData.ODataMessageWriterSettings" />, které se má používat při zápisu odpovědí.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)"></member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.SerializerProvider">
      <summary>Získá hodnotu <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" />, která bude použita pro tuto instanci formátovacího modulu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)"></member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)"></member>
    <member name="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters">
      <summary>Třídy <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> určené ke zpracování protokolu OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters.Create">
      <summary>Vytvoří seznam formátovacích modulů typů médií pro zpracování protokolu OData.</summary>
      <returns>Seznam formátovacích modulů typů médií pro zpracování protokolu OData.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters.Create(System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Vytvoří seznam formátovacích modulů typů médií pro zpracování prostředí OData za použití daných hodnot <paramref name="serializerProvider" /> a <paramref name="deserializerProvider" />.</summary>
      <returns>Seznam formátovacích modulů typů médií pro zpracování protokolu OData.</returns>
      <param name="serializerProvider">Zprostředkovatel serializace určený k použití.</param>
      <param name="deserializerProvider">Zprostředkovatel deserializace určený k použití.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataMetadataLevel">
      <summary>Objem informací metadat k serializaci v odpovědi OData (pro formát JSON light).</summary>
    </member>
    <member name="F:System.Web.Http.OData.Formatter.ODataMetadataLevel.Default">
      <summary>Běžná metadata, používá se pro ostatní formáty vyjma JSON light (Atom/XML, JSON verbose).</summary>
    </member>
    <member name="F:System.Web.Http.OData.Formatter.ODataMetadataLevel.FullMetadata">
      <summary>JSON light – plná metadata.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Formatter.ODataMetadataLevel.MinimalMetadata">
      <summary>JSON light – minimální metadata.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Formatter.ODataMetadataLevel.NoMetadata">
      <summary>JSON light – žádná metadata.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataModelBinderProvider">
      <summary>Poskytuje objekt <see cref="T:System.Web.Http.ModelBinding.IModelBinder" /> pro primitivní typy EDM.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataModelBinderProvider.#ctor"></member>
    <member name="M:System.Web.Http.OData.Formatter.ODataModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)"></member>
    <member name="T:System.Web.Http.OData.Formatter.ODataPrimitiveValueMediaTypeMapping">
      <summary>Mapování typu médií, které přidružuje požadavky k nezpracované hodnotě nebinárních primitivních vlastností typu obsahu text/plain.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataPrimitiveValueMediaTypeMapping.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.ODataPrimitiveValueMediaTypeMapping" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataPrimitiveValueMediaTypeMapping.IsMatch(System.Web.Http.OData.Routing.PropertyAccessPathSegment)"></member>
    <member name="T:System.Web.Http.OData.Formatter.ODataRawValueMediaTypeMapping">
      <summary>Mapování typů médií, které přidružuje žádosti pro nezpracovanou hodnotu vlastností.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataRawValueMediaTypeMapping.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.ODataRawValueMediaTypeMapping" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataRawValueMediaTypeMapping.IsMatch(System.Web.Http.OData.Routing.PropertyAccessPathSegment)">
      <summary>Tato metoda určuje, zda je položka <see cref="T:System.Net.Http.HttpRequestMessage" /> žádostí o nezpracovanou hodnotu OData.</summary>
      <returns>Hodnota true, pokud se jedná o žádost o nezpracovanou hodnotu OData.</returns>
      <param name="propertySegment">Segment <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment" /> cesty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataRawValueMediaTypeMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider">
      <summary>Výchozí objekt <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider.GetEdmTypeDeserializer(Microsoft.Data.Edm.IEdmTypeReference)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider.GetODataDeserializer(Microsoft.Data.Edm.IEdmModel,System.Type,System.Net.Http.HttpRequestMessage)"></member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider.Instance">
      <summary>Získá výchozí instanci objektu <see cref="T:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataActionPayloadDeserializer">
      <summary>Představuje objekt <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> pro čtení parametrů akcí OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataActionPayloadDeserializer.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataActionPayloadDeserializer" />.</summary>
      <param name="deserializerProvider">Zprostředkovatel deserializátoru určený ke čtení vnitřních objektů</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataActionPayloadDeserializer.DeserializerProvider">
      <summary>Získá zprostředkovatele deserializátoru určeného ke čtení vnitřních objektů.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataActionPayloadDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer">
      <summary>Představuje objekt <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" />, který může číst datové části kolekcí OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer" />.</summary>
      <param name="deserializerProvider">Zprostředkovatel deserializátoru určený ke čtení vnitřních objektů</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer.ReadCollectionValue(Microsoft.Data.OData.ODataCollectionValue,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializuje daný objekt <paramref name="collectionValue" /> v rámci daného objektu <paramref name="readContext" />.</summary>
      <returns>Deserializovaná kolekce</returns>
      <param name="collectionValue">Objekt <see cref="T:Microsoft.Data.OData.ODataCollectionValue" /> k deserializaci</param>
      <param name="elementType">Typ elementu kolekce ke čtení.</param>
      <param name="readContext">Kontext deserializátoru</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataComplexTypeDeserializer">
      <summary>Představuje objekt <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" />, který může číst datové části komplexních typů OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataComplexTypeDeserializer.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataComplexTypeDeserializer" />.</summary>
      <param name="deserializerProvider">Zprostředkovatel deserializátoru určený ke čtení vnitřních objektů</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataComplexTypeDeserializer.ReadComplexValue(Microsoft.Data.OData.ODataComplexValue,Microsoft.Data.Edm.IEdmComplexTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializuje daný objekt <paramref name="complexValue" /> v rámci daného objektu <paramref name="readContext" />.</summary>
      <returns>Deserializovaná komplexní hodnota</returns>
      <param name="complexValue">Komplexní hodnota k deserializaci</param>
      <param name="complexType">Typ EDM komplexní hodnoty ke čtení.</param>
      <param name="readContext">Kontext deserializátoru</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataComplexTypeDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer">
      <summary>Objekt <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> slouží k načtení objektu ODataMessage do objektu CLR.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer.#ctor(Microsoft.Data.OData.ODataPayloadKind)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" />.</summary>
      <param name="payloadKind">Druh datových částí, které tento deserializátor zpracovává.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer.ODataPayloadKind">
      <summary>Druh datových částí ODataPayload, které tento deserializátor zpracovává.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Přečte objekt <see cref="T:Microsoft.Data.OData.IODataRequestMessage" /> s využitím čtečky messageReader.</summary>
      <returns>Deserializovaný objekt</returns>
      <param name="messageReader">Čtečka messageReader, která má být použita.</param>
      <param name="type">Typ objektu určeného ke čtení.</param>
      <param name="readContext">Kontext čtení</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext">
      <summary>Tato třída zapouzdří stav a nastavení předávaná objektu <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> z objektu <see cref="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.#ctor"></member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.Model">
      <summary>Získá nebo nastaví model EDM přidružený k požadavku.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.Path">
      <summary>Získá nebo nastaví položku <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> požadavku.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.Request">
      <summary>Získá nebo nastaví požadavek HTTP, který je deserializován.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.RequestContext">
      <summary>Získá nebo nastaví kontext požadavku.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.ResourceEdmType">
      <summary>Získá nebo nastaví položku <see cref="T:Microsoft.Data.Edm.IEdmTypeReference" /> objektu na nejvyšší úrovni, do něhož je třeba deserializovat požadavek.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.ResourceType">
      <summary>Získá nebo nastaví typ objektu na nejvyšší úrovni, do kterého je potřeba deserializovat požadavek.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider">
      <summary>Reprezentuje objekt factory, který vytvoří objekt <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider.#ctor"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider.GetEdmTypeDeserializer(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Získá objekt <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer" /> pro daný typ EDM.</summary>
      <returns>Objekt <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer" />, který může deserializovat daný typ EDM.</returns>
      <param name="edmType">Typ EDM</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider.GetODataDeserializer(Microsoft.Data.Edm.IEdmModel,System.Type,System.Net.Http.HttpRequestMessage)">
      <summary>Získá objekt <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> pro daný typ.</summary>
      <returns>Objekt <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" />, který může deserializovat daný typ.</returns>
      <param name="model">Model EDM</param>
      <param name="type">Typ CLR</param>
      <param name="request">Deserializovaný požadavek.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer">
      <summary>Základní třída pro všechny objekty <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" />, které se deserializují na objekt založený na typu <see cref="T:Microsoft.Data.Edm.IEdmType" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.#ctor(Microsoft.Data.OData.ODataPayloadKind)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer" />.</summary>
      <param name="payloadKind">Druh datových částí OData, které tento deserializátor čte.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.#ctor(Microsoft.Data.OData.ODataPayloadKind,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer" />.</summary>
      <param name="payloadKind">Druh datových částí OData, které tento deserializátor zpracovává.</param>
      <param name="deserializerProvider">Objekt <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider" /></param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.DeserializerProvider">
      <summary>Objekt <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider" />, který má být použit pro deserializaci vnitřních položek.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializuje položku do nového objektu s typem odpovídajícím typu <paramref name="edmType" />.</summary>
      <returns>Deserializovaný objekt</returns>
      <param name="item">Položka k deserializaci</param>
      <param name="edmType">Typ EDM objektu určeného ke čtení.</param>
      <param name="readContext">Objekt <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext" /></param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer">
      <summary>Představuje objekt <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> pro čtení datových částí položek OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer" />.</summary>
      <param name="deserializerProvider">Zprostředkovatel deserializátoru určený ke čtení vnitřních objektů</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ApplyNavigationProperties(System.Object,System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializuje navigační vlastnosti z objektu <paramref name="entryWrapper" /> do objektu <paramref name="entityResource" />.</summary>
      <param name="entityResource">Objekt, do nějž by měly být načteny navigační vlastnosti</param>
      <param name="entryWrapper">Objekt položky obsahující navigační vlastnosti</param>
      <param name="entityType">Typ entity pro daný prostředek entity.</param>
      <param name="readContext">Kontext deserializátoru</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ApplyNavigationProperty(System.Object,System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializuje navigační vlastnost z objektu <paramref name="navigationLinkWrapper" /> do objektu <paramref name="entityResource" />.</summary>
      <param name="entityResource">Objekt, do nějž by měla být načtena navigační vlastnost</param>
      <param name="navigationLinkWrapper">Navigační odkaz</param>
      <param name="entityType">Typ entity pro daný prostředek entity.</param>
      <param name="readContext">Kontext deserializátoru</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ApplyStructuralProperties(System.Object,System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializuje strukturální vlastnosti z objektu <paramref name="entryWrapper" /> do objektu <paramref name="entityResource" />.</summary>
      <param name="entityResource">Objekt, do nějž by měly být načteny strukturální vlastnosti</param>
      <param name="entryWrapper">Objekt položky obsahující strukturální vlastnosti</param>
      <param name="entityType">Typ entity pro daný prostředek entity.</param>
      <param name="readContext">Kontext deserializátoru</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ApplyStructuralProperty(System.Object,Microsoft.Data.OData.ODataProperty,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializuje daný objekt <paramref name="structuralProperty" /> do objektu <paramref name="entityResource" />.</summary>
      <param name="entityResource">Objekt, do nějž by měla být načtena strukturální vlastnost</param>
      <param name="structuralProperty">Objekt položky obsahující strukturální vlastnosti</param>
      <param name="entityType">Typ entity pro daný prostředek entity.</param>
      <param name="readContext">Kontext deserializátoru</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.CreateEntityResource(Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Vytvoří novou instanci pomocného objektu CLR pro daný typ entity.</summary>
      <returns>Vytvořený objekt CLR</returns>
      <param name="entityType">Typ EDM entity k vytvoření.</param>
      <param name="readContext">Kontext deserializátoru</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ReadEntry(System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializuje daný objekt <paramref name="entryWrapper" /> v rámci daného objektu <paramref name="readContext" />.</summary>
      <returns>Deserializovaná entita</returns>
      <param name="entryWrapper">Položka OData k deserializaci</param>
      <param name="entityType">Typ entity položky určené k deserializaci.</param>
      <param name="readContext">Kontext deserializátoru</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ReadEntryOrFeed(Microsoft.Data.OData.ODataReader)">
      <summary>Čte objekt ODataFeed nebo ODataItem ze čtečky.</summary>
      <returns>Položka nebo informační kanál čtení</returns>
      <param name="reader">Čtečka OData, ze které mají být čtena data</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkBase">
      <summary>Zapouzdří odkaz <see cref="T:Microsoft.Data.OData.ODataEntityReferenceLink" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkBase.#ctor(Microsoft.Data.OData.ODataEntityReferenceLink)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkBase" />.</summary>
      <param name="item">Zabalená položka.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkBase.EntityReferenceLink">
      <summary>Získá zabalenou položku <see cref="T:Microsoft.Data.OData.ODataEntityReferenceLink" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer">
      <summary>Představuje objekt <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" />, který může číst datové části referenčních odkazů entit OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks">
      <summary>Zapouzdří položku <see cref="T:Microsoft.Data.OData.ODataEntry" /> a vnitřní navigační odkazy.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks.#ctor(Microsoft.Data.OData.ODataEntry)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks" />.</summary>
      <param name="item">Zabalená položka.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks.Entry">
      <summary>Získá zabalenou položku <see cref="T:Microsoft.Data.OData.ODataEntry" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks.NavigationLinks">
      <summary>Získá vnitřní navigační odkazy.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataFeedDeserializer">
      <summary>Reprezentuje objekt <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" />, který může číst informační kanály OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataFeedDeserializer.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataFeedDeserializer" />.</summary>
      <param name="deserializerProvider">Zprostředkovatel deserializátoru určený ke čtení vnitřních objektů</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataFeedDeserializer.ReadFeed(System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializuje daný objekt <paramref name="feed" /> v rámci daného objektu <paramref name="readContext" />.</summary>
      <returns>Deserializovaný objekt informačního kanálu.</returns>
      <param name="feed">Objekt k deserializaci.</param>
      <param name="elementType">Typ elementu čteného informačního kanálu.</param>
      <param name="readContext">Kontext deserializátoru</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataFeedDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries">
      <summary>Zapouzdří objekt <see cref="T:Microsoft.Data.OData.ODataFeed" /> a objekty <see cref="T:Microsoft.Data.OData.ODataEntry" />, které jsou jeho součástí.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries.#ctor(Microsoft.Data.OData.ODataFeed)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries" />.</summary>
      <param name="item">Zabalená položka.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries.Entries">
      <summary>Získá vnořené položky tohoto informačního kanálu.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries.Feed">
      <summary>Získá zabalenou položku <see cref="T:Microsoft.Data.OData.ODataFeed" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataItemBase">
      <summary>Základní třída pro všechny třídy, které balí objekt <see cref="T:Microsoft.Data.OData.ODataItem" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataItemBase.#ctor(Microsoft.Data.OData.ODataItem)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataItemBase" />.</summary>
      <param name="item">Zabalená položka.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataItemBase.Item">
      <summary>Získá zabalenou položku <see cref="T:Microsoft.Data.OData.ODataItem" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems">
      <summary>Zapouzdří objekt <see cref="T:Microsoft.Data.OData.ODataNavigationLink" /> a seznam vložených položek.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems.#ctor(Microsoft.Data.OData.ODataNavigationLink)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems" />.</summary>
      <param name="item">Zabalená položka.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems.NavigationLink">
      <summary>Získá zabalenou položku <see cref="T:Microsoft.Data.OData.ODataNavigationLink" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems.NestedItems">
      <summary>Získá vnořené položky, které jsou součástí tohoto navigačního odkazu.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer">
      <summary>Představuje objekt <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" />, který může číst primitivní typy OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.ReadPrimitive(Microsoft.Data.OData.ODataProperty,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializuje primitivní vlastnost z dané vlastnosti <paramref name="primitiveProperty" /> v rámci daného objektu <paramref name="readContext" />.</summary>
      <returns>Deserializovaná primitivní hodnota OData</returns>
      <param name="primitiveProperty">Primitivní vlastnost k deserializaci</param>
      <param name="readContext">Kontext deserializátoru</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider">
      <summary>Výchozí objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider.GetEdmTypeSerializer(Microsoft.Data.Edm.IEdmTypeReference)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider.GetODataPayloadSerializer(Microsoft.Data.Edm.IEdmModel,System.Type,System.Net.Http.HttpRequestMessage)"></member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider.Instance">
      <summary>Získá výchozí instanci objektu <see cref="T:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks">
      <summary>Objekt EntitySelfLinks obsahuje odkazy Id, Edit a Read pro entitu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks.#ctor"></member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks.EditLink">
      <summary>Adresa URL, kterou lze použít k úpravě kopie prostředku.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks.IdLink">
      <summary>Řetězec, který jednoznačně identifikuje prostředek.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks.ReadLink">
      <summary>Adresa URL, kterou lze použít k načtení kopie prostředku.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer">
      <summary>Serializátor ODataSerializer pro serializaci kolekce entit nebo komplexních typů nebo primitiv.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.#ctor(System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer" />.</summary>
      <param name="serializerProvider">Zprostředkovatel serializace určený k serializaci vnořených objektů.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.AddTypeNameAnnotationAsNeeded(Microsoft.Data.OData.ODataCollectionValue,System.Web.Http.OData.Formatter.ODataMetadataLevel)">
      <summary>Přidá anotace názvu typu vyžadované pro vhodnou serializaci JSON-light.</summary>
      <param name="value">Hodnota kolekce, pro niž je třeba přidat anotace</param>
      <param name="metadataLevel">Úroveň metadat OData dané odpovědi</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.CreateODataCollectionValue(System.Collections.IEnumerable,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Vytvoří položku <see cref="T:Microsoft.Data.OData.ODataCollectionValue" /> pro výčtový typ reprezentovaný objektem <paramref name="enumerable" />.</summary>
      <returns>Vytvořený objekt <see cref="T:Microsoft.Data.OData.ODataCollectionValue" />.</returns>
      <param name="enumerable">Hodnota kolekce k vytvoření</param>
      <param name="elementType">Typ EDM elementu kolekce.</param>
      <param name="writeContext">Kontext serializátoru, který má být použit při vytváření kolekce</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.CreateODataValue(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.WriteCollection(Microsoft.Data.OData.ODataCollectionWriter,System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Zapíše daný objekt <paramref name="graph" /> s využitím daného objektu <paramref name="writer" />.</summary>
      <param name="writer">Modul <see cref="T:Microsoft.Data.OData.ODataCollectionWriter" />, která má být použit.</param>
      <param name="graph">Kolekce k zápisu</param>
      <param name="collectionType">Typ EDM kolekce.</param>
      <param name="writeContext">Kontext serializátoru.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer">
      <summary>Objekt ODataSerializer pro serializaci složitých typů.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer.#ctor(System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer" />.</summary>
      <param name="serializerProvider">Zprostředkovatel serializace určený k serializaci vnořených objektů.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer.CreateODataComplexValue(System.Object,Microsoft.Data.Edm.IEdmComplexTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Vytvoří položku <see cref="T:Microsoft.Data.OData.ODataComplexValue" /> pro objekt představovaný položkou <paramref name="graph" />.</summary>
      <returns>Vytvořený objekt <see cref="T:Microsoft.Data.OData.ODataComplexValue" />.</returns>
      <param name="graph">Hodnota položky <see cref="T:Microsoft.Data.OData.ODataComplexValue" /> k vytvoření.</param>
      <param name="complexType">Komplexní typ EDM daného objektu.</param>
      <param name="writeContext">Kontext serializátoru.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer.CreateODataValue(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer">
      <summary>Reprezentuje objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" />, který serializuje instance objektů založených na typu <see cref="T:Microsoft.Data.Edm.IEdmType" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer.#ctor(Microsoft.Data.OData.ODataPayloadKind)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer" />.</summary>
      <param name="payloadKind">Druh datových částí OData, které tento serializátor generuje.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer.#ctor(Microsoft.Data.OData.ODataPayloadKind,System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer" />.</summary>
      <param name="payloadKind">Druh datových částí OData, které tento serializátor generuje.</param>
      <param name="serializerProvider">Objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" />, který má být použit pro zápis vnitřních objektů.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer.CreateODataValue(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Vytvoří položku <see cref="T:Microsoft.Data.OData.ODataValue" /> pro objekt představovaný položkou <paramref name="graph" />.</summary>
      <returns>Vytvořená hodnota <see cref="T:Microsoft.Data.OData.ODataValue" />.</returns>
      <param name="graph">Hodnota položky <see cref="T:Microsoft.Data.OData.ODataValue" /> k vytvoření.</param>
      <param name="expectedType">Očekávaný typ EDM objektu reprezentovaného parametrem <paramref name="graph" />.</param>
      <param name="writeContext">Objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext" /></param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer.SerializerProvider">
      <summary>Získá objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" />, který lze použít k zápisu vnitřních objektů.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer.WriteObjectInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,Microsoft.Data.OData.ODataWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Zapíše daný objekt zadaný grafem parametrů jako část stávající zprávy OData s použitím daného objektu messageWriter a writeContext.</summary>
      <param name="graph">Objekt k zapsání.</param>
      <param name="expectedType">Očekávaný typ EDM objektu reprezentovaného parametrem <paramref name="graph" />.</param>
      <param name="writer">Položka <see cref="T:Microsoft.Data.OData.ODataWriter" />, která se má použít k zápisu.</param>
      <param name="writeContext">Objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext" /></param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer">
      <summary>Reprezentuje objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> pro serializaci odpovědi $links.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer">
      <summary>Představuje objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> pro serializaci odezvy $link pro navigační vlastnost kolekce.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer">
      <summary>Objekt ODataSerializer sloužící k serializaci instancí typu <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /></summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.#ctor(System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateEntry(System.Web.Http.OData.Formatter.Serialization.SelectExpandNode,System.Web.Http.OData.EntityInstanceContext)">
      <summary>Vytvoří objekt <see cref="T:Microsoft.Data.OData.ODataEntry" />, který má být zapsán při zápisu této entity.</summary>
      <returns>Vytvořený objekt <see cref="T:Microsoft.Data.OData.ODataEntry" />.</returns>
      <param name="selectExpandNode">Objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode" /> popisující graf odpovědi</param>
      <param name="entityInstanceContext">Kontext pro zapisovanou instanci entity</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateETag(System.Web.Http.OData.EntityInstanceContext)">
      <summary>Vytvoří pro danou entitu značku ETag.</summary>
      <returns>Vytvořená značka ETag.</returns>
      <param name="entityInstanceContext">Kontext pro zapisovanou instanci entity</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateNavigationLink(Microsoft.Data.Edm.IEdmNavigationProperty,System.Web.Http.OData.EntityInstanceContext)">
      <summary>Vytvoří objekt <see cref="T:Microsoft.Data.OData.ODataNavigationLink" />, který má být zapsán při zápisu této entity.</summary>
      <returns>Navigační odkaz k zapsání</returns>
      <param name="navigationProperty">Navigační vlastnost, pro kterou je vytvářen navigační odkaz</param>
      <param name="entityInstanceContext">Kontext pro zapisovanou instanci entity</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateODataAction(Microsoft.Data.Edm.IEdmFunctionImport,System.Web.Http.OData.EntityInstanceContext)">
      <summary>Vytvoří objekt <see cref="T:Microsoft.Data.OData.ODataAction" />, který má být zapsán pro danou akci a instanci entity.</summary>
      <returns>Vytvořená akce nebo hodnota null, pokud se akce nemá zapisovat</returns>
      <param name="action">Akce OData</param>
      <param name="entityInstanceContext">Kontext pro zapisovanou instanci entity</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateSelectExpandNode(System.Web.Http.OData.EntityInstanceContext)">
      <summary>Vytvoří objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode" />, který popisuje sadu vlastností a akcí pro výběr a rozbalení během zápisu této entity.</summary>
      <returns>Objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode" />, který popisuje sadu vlastností a akcí pro výběr a rozbalení během zápisu této entity</returns>
      <param name="entityInstanceContext">Obsahuje zapisovanou instanci entity a kontext.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateStructuralProperty(Microsoft.Data.Edm.IEdmStructuralProperty,System.Web.Http.OData.EntityInstanceContext)">
      <summary>Vytvoří objekt <see cref="T:Microsoft.Data.OData.ODataProperty" />, který má být zapsán pro entitu a strukturální vlastnost.</summary>
      <returns>Objekt <see cref="T:Microsoft.Data.OData.ODataProperty" />, který má být zapsán</returns>
      <param name="structuralProperty">Zapisovaná strukturální vlastnost EDM</param>
      <param name="entityInstanceContext">Kontext pro zapisovanou instanci entity</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.WriteObjectInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,Microsoft.Data.OData.ODataWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataErrorSerializer">
      <summary>Reprezentuje objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> pro serializaci objektů <see cref="T:Microsoft.Data.OData.ODataError" /> a <see cref="T:System.Web.Http.HttpError" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataErrorSerializer.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataErrorSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer">
      <summary>Serializátor prostředí OData pro serializaci kolekce objektů <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer.#ctor(System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer" />.</summary>
      <param name="serializerProvider">Objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" /> sloužící k zápisu vnořených položek.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer.CreateODataFeed(System.Collections.IEnumerable,Microsoft.Data.Edm.IEdmCollectionTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Vytvoří objekt <see cref="T:Microsoft.Data.OData.ODataFeed" />, který se má použít k zápisu pro danou instanci informačního kanálu.</summary>
      <returns>Vytvořený objekt <see cref="T:Microsoft.Data.OData.ODataFeed" />.</returns>
      <param name="feedInstance">Instance reprezentující zapisovaný informační kanál</param>
      <param name="feedType">Typ EDM informačního kanálu, u kterého probíhá zápis.</param>
      <param name="writeContext">Kontext serializátoru.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer.WriteObjectInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,Microsoft.Data.OData.ODataWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataMetadataSerializer">
      <summary>Představuje objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> pro serializaci dotazu $metadata.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataMetadataSerializer.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataMetadataSerializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataMetadataSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer">
      <summary>Představuje serializátor <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> pro serializaci položek <see cref="T:Microsoft.Data.Edm.IEdmPrimitiveType" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer.CreateODataPrimitiveValue(System.Object,Microsoft.Data.Edm.IEdmPrimitiveTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Vytvoří položku <see cref="T:Microsoft.Data.OData.ODataPrimitiveValue" /> pro objekt představovaný položkou <paramref name="graph" />.</summary>
      <returns>Vytvořený objekt <see cref="T:Microsoft.Data.OData.ODataPrimitiveValue" />.</returns>
      <param name="graph">Primitivní hodnota.</param>
      <param name="primitiveType">Primitivní typ EDM hodnoty.</param>
      <param name="writeContext">Kontext pro zápis serializátoru.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer.CreateODataValue(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataRawValueSerializer">
      <summary>Představuje objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> pro serializaci nezpracované hodnoty objektu <see cref="T:Microsoft.Data.Edm.IEdmPrimitiveType" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataRawValueSerializer.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataRawValueSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer">
      <summary>Objekt ODataSerializer slouží k zápisu objektu CLR do objektu ODataMessage.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializer.#ctor(Microsoft.Data.OData.ODataPayloadKind)">
      <summary>Vytvoří objekt ODataSerializer, který může vytvořit datovou část OData zadaného druhu.</summary>
      <param name="payloadKind">Druh datových částí OData, které tento serializátor generuje.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializer.ODataPayloadKind">
      <summary>Získá objekt <see cref="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializer.ODataPayloadKind" />, který tento serializátor generuje.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Zapíše daný objekt zadaný grafem parametrů jako celek za použití daných položek messageWriter a writeContext.</summary>
      <param name="graph">Objekt, který má být zapsán.</param>
      <param name="type">Typ objektu určeného k zápisu.</param>
      <param name="messageWriter">Položka <see cref="T:Microsoft.Data.OData.ODataMessageWriter" />, která se má použít k zápisu.</param>
      <param name="writeContext">Objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext" /></param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext">
      <summary>Kontextové informace používané objektem <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> při serializaci objektů ve formátu zpráv OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.#ctor(System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause,Microsoft.Data.Edm.IEdmNavigationProperty)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext" />.</summary>
      <param name="entity">Entita, jejíž navigační vlastnost je rozbalována.</param>
      <param name="selectExpandClause">Klauzule <see cref="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause" /> pro rozbalovanou navigační vlastnost.</param>
      <param name="navigationProperty">Rozbalovaná navigační vlastnost.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.EntitySet">
      <summary>Získá nebo nastaví sadu entit.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.ExpandedEntity">
      <summary>Získá nebo nastaví rozbalovanou entitu.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.Items">
      <summary>Získá kontejner objektů a dat spojený s tímto kontextem za účelem ukládání jakýchkoli generických dat.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.MetadataLevel">
      <summary>Získá nebo nastaví úroveň metadat odpovědi.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.Model">
      <summary>Získá nebo nastaví model EDM přidružený k požadavku.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.NavigationProperty">
      <summary>Získá nebo nastaví rozbalovanou navigační vlastnost.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.Path">
      <summary>Získá nebo nastaví položku <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> požadavku.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.Request">
      <summary>Získá nebo nastaví požadavek HTTP, jehož odpověď je serializována.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.RequestContext">
      <summary>Získá nebo nastaví kontext požadavku.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.RootElementName">
      <summary>Získá nebo nastaví název kořenového elementu, který je použit při zápisu primitivních a komplexních typů.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause">
      <summary>Získá nebo nastaví položku <see cref="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.SkipExpensiveAvailabilityChecks">
      <summary>Získá nebo nastaví, zda mají být vypočteny nákladné odkazy.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.Url">
      <summary>Získá nebo nastaví objekt <see cref="T:System.Web.Http.Routing.UrlHelper" /> pro generování odkazů OData.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider">
      <summary>ODataSerializerProvider je objekt factory pro vytváření položek <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider.#ctor"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider.GetEdmTypeSerializer(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Získá objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer" /> pro daný typ edmType.</summary>
      <returns>Objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /></returns>
      <param name="edmType">Objekt <see cref="T:Microsoft.Data.Edm.IEdmTypeReference" /></param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider.GetODataPayloadSerializer(Microsoft.Data.Edm.IEdmModel,System.Type,System.Net.Http.HttpRequestMessage)">
      <summary>Získá objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> pro daný objekt <paramref name="model" /> a <paramref name="type" />.</summary>
      <returns>Objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> pro daný typ</returns>
      <param name="model">Model EDM přidružený k požadavku.</param>
      <param name="type">Objekt <see cref="T:System.Type" />, pro který je vyžadován serializátor</param>
      <param name="request">Požadavek, pro který probíhá serializace odpovědi.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataWorkspaceSerializer">
      <summary>Představuje objekt <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> pro serializaci objektů <see cref="T:Microsoft.Data.OData.ODataWorkspace" /> pro generování servisních dokumentů.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataWorkspaceSerializer.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataWorkspaceSerializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataWorkspaceSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode">
      <summary>Popisuje sadu strukturálních a navigačních vlastností a akcí pro výběr a navigačních vlastností pro rozbalení při zápisu objektu <see cref="T:Microsoft.Data.OData.ODataEntry" /> v odpovědi.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.#ctor">
      <summary>Vytvoří novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.#ctor(Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause,Microsoft.Data.Edm.IEdmEntityType,Microsoft.Data.Edm.IEdmModel)">
      <summary>Vytvoří novou instanci třídy <see cref="T:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode" /> se sadou strukturálních vlastností, navigačních vlastností a akcí k výběru a rozbalení pro danou klauzuli <paramref name="selectExpandClause" />.</summary>
      <param name="selectExpandClause">Analyzované možnosti dotazu $select a $expand.</param>
      <param name="entityType">Typ entity položky, která by byla zapsána.</param>
      <param name="model">Objekt <see cref="T:Microsoft.Data.Edm.IEdmModel" /> obsahující daný typ entity.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.ExpandedNavigationProperties">
      <summary>Získá seznam navigačních vlastností EDM, které mají být rozbaleny v odpovědi.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.SelectedActions">
      <summary>Získá seznam akcí OData, které mají být zahrnuty v odpovědi.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.SelectedNavigationProperties">
      <summary>Získá seznam navigačních vlastností EDM, které mají být v odpovědi zahrnuty jako odkazy.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.SelectedStructuralProperties">
      <summary>Získá seznam strukturálních vlastností EDM, které mají být zahrnuty v odpovědi.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedArithmeticOperators">
      <summary>Aritmetické operátory umožňující dotazování pomocí možnosti $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Add">
      <summary>Hodnota, která odpovídá povolení aritmetického operátoru Add v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.All">
      <summary>Hodnota, která odpovídá povolení všech aritmetických operátorů v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Divide">
      <summary>Hodnota, která odpovídá povolení aritmetického operátoru Divide v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Modulo">
      <summary>Hodnota, která odpovídá povolení aritmetického operátoru Modulo v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Multiply">
      <summary>Hodnota, která odpovídá povolení aritmetického operátoru Multiply v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.None">
      <summary>Hodnota, která odpovídá nepovolení aritmetických operátorů v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Subtract">
      <summary>Hodnota, která odpovídá povolení aritmetického operátoru Subtract v dotazech $filter.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedFunctions">
      <summary>Funkce umožňující dotazování pomocí možnosti $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.All">
      <summary>Hodnota, která odpovídá povolení funkce All v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllDateTimeFunctions">
      <summary>Hodnota, která odpovídá povolení všech funkcí souvisejících s datem a časem v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllFunctions">
      <summary>Hodnota, která odpovídá povolení všech funkcí v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllMathFunctions">
      <summary>Hodnota, která odpovídá povolení všech funkcí souvisejících s matematikou v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllStringFunctions">
      <summary>Hodnota, která odpovídá povolení všech funkcí souvisejících s řetězci v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Any">
      <summary>Hodnota, která odpovídá povolení funkce Any v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Cast">
      <summary>Hodnota, která odpovídá povolení funkce Cast v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Ceiling">
      <summary>Hodnota, která odpovídá povolení funkce Ceiling v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Concat">
      <summary>Hodnota, která odpovídá povolení funkce Concat v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Day">
      <summary>Hodnota, která odpovídá povolení funkce Day v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Days">
      <summary>Hodnota, která odpovídá povolení funkce Days v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.EndsWith">
      <summary>Hodnota, která odpovídá povolení funkce EndsWith v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Floor">
      <summary>Hodnota, která odpovídá povolení funkce Floor v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Hour">
      <summary>Hodnota, která odpovídá povolení funkce Hour v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Hours">
      <summary>Hodnota, která odpovídá povolení funkce Hours v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.IndexOf">
      <summary>Hodnota, která odpovídá povolení funkce IndexOf v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.IsOf">
      <summary>Hodnota, která odpovídá povolení funkce IsOf v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Length">
      <summary>Hodnota, která odpovídá povolení funkce Length v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Minute">
      <summary>Hodnota, která odpovídá povolení funkce Minute v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Minutes">
      <summary>Hodnota, která odpovídá povolení funkce Minutes v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Month">
      <summary>Hodnota, která odpovídá povolení funkce Month v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Months">
      <summary>Hodnota, která odpovídá povolení funkce Months v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.None">
      <summary>Hodnota, která odpovídá nepovolení žádných funkcí v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Round">
      <summary>Hodnota, která odpovídá povolení funkce Round v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Second">
      <summary>Hodnota, která odpovídá povolení funkce Second v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Seconds">
      <summary>Hodnota, která odpovídá povolení funkce Seconds v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.StartsWith">
      <summary>Hodnota, která odpovídá povolení funkce StartsWith v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Substring">
      <summary>Hodnota, která odpovídá povolení funkce Substring v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.SubstringOf">
      <summary>Hodnota, která odpovídá povolení funkce SubstringOf v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.ToLower">
      <summary>Hodnota, která odpovídá povolení funkce ToLower v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.ToUpper">
      <summary>Hodnota, která odpovídá povolení funkce ToUpper v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Trim">
      <summary>Hodnota, která odpovídá povolení funkce Trim v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Year">
      <summary>Hodnota, která odpovídá povolení funkce Year v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Years">
      <summary>Hodnota, která odpovídá povolení funkce Years v dotazech $filter.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedLogicalOperators">
      <summary>Logické operátory umožňující dotazování pomocí možnosti $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.All">
      <summary>Hodnota, která odpovídá povolení všech logických operátorů v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.And">
      <summary>Hodnota, která odpovídá povolení logického operátoru And v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Equal">
      <summary>Hodnota, která odpovídá povolení logického operátoru Equal v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.GreaterThan">
      <summary>Hodnota, která odpovídá povolení logického operátoru GreaterThan v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.GreaterThanOrEqual">
      <summary>Hodnota, která odpovídá povolení logického operátoru GreaterThanOrEqual v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.LessThan">
      <summary>Hodnota, která odpovídá povolení logického operátoru LessThan v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.LessThanOrEqual">
      <summary>Hodnota, která odpovídá povolení logického operátoru LessThanOrEqual v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.None">
      <summary>Hodnota, která odpovídá nepovolení logických operátorů v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Not">
      <summary>Hodnota, která odpovídá povolení logického operátoru Not v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.NotEqual">
      <summary>Hodnota, která odpovídá povolení logického operátoru NotEqual v dotazech $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Or">
      <summary>Hodnota, která odpovídá povolení logického operátoru Or v dotazech $filter.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedQueryOptions">
      <summary>Možnosti dotazů OData sloužící k povolení dotazování.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.All">
      <summary>Hodnota, která určuje, že mají být povoleny všechny možnosti dotazu.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Expand">
      <summary>Hodnota, která určuje, že má být povolena možnost dotazu $expand.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Filter">
      <summary>Hodnota, která určuje, že má být povolena možnost dotazu $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Format">
      <summary>Hodnota, která určuje, že má být povolena možnost dotazu $format.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.InlineCount">
      <summary>Hodnota, která určuje, že má být povolena možnost dotazu $inlinecount.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.None">
      <summary>Hodnota, která určuje, že nemají být povoleny žádné možnosti dotazu.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.OrderBy">
      <summary>Hodnota, která určuje, že má být povolena možnost dotazu $orderby.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Select">
      <summary>Hodnota, která určuje, že má být povolena možnost dotazu $select.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Skip">
      <summary>Hodnota, která určuje, že má být povolena možnost dotazu $skip.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.SkipToken">
      <summary>Hodnota, která určuje, že má být povolena možnost dotazu $skiptoken.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Supported">
      <summary>Hodnota, která odpovídá výchozím možnostem dotazu podporovaným atributem <see cref="T:System.Web.Http.OData.EnableQueryAttribute" />.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Top">
      <summary>Hodnota, která určuje, že má být povolena možnost dotazu $top.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.FilterQueryOption">
      <summary>Definuje možnost dotazu OData $filter pro dotazování.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" /> na základě nezpracované hodnoty $filter a modelu EDM z položky <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">Nezpracovaná hodnota pro dotaz $filter.Může se jednat o hodnotu null či prázdnou hodnotu.</param>
      <param name="context">Položka <see cref="T:System.Web.Http.OData.ODataQueryContext" />, která obsahuje model <see cref="T:Microsoft.Data.Edm.IEdmModel" /> a informace o typu</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Použije dotaz filter na danou položku IQueryable.</summary>
      <returns>Nový objekt <see cref="T:System.Linq.IQueryable" /> po použití dotazu filter</returns>
      <param name="query">Původní položka <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">Položka <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />, která obsahuje veškeré nastavení týkající se použití dotazu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings,System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary>Použije dotaz filter na danou položku IQueryable.</summary>
      <returns>Nový objekt <see cref="T:System.Linq.IQueryable" /> po použití dotazu filter</returns>
      <param name="query">Původní položka <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">Položka <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />, která obsahuje veškeré nastavení týkající se použití dotazu.</param>
      <param name="assembliesResolver">Modul <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" />, která má být použit.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.Context">
      <summary>Získá danou položku <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.FilterClause">
      <summary>Získá analyzovanou klauzuli <see cref="P:System.Web.Http.OData.Query.FilterQueryOption.FilterClause" /> pro tuto možnost dotazu.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.RawValue">
      <summary>Získá nezpracovanou hodnotu pro dotaz $filter.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Ověří dotaz filter na základě dané položky <paramref name="validationSettings" />.Pokud ověření selže, vydá výjimku ODataException.</summary>
      <param name="validationSettings">Instance položky <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />, která obsahuje veškeré nastavení ověření.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.Validator">
      <summary>Získá nebo nastaví validátor dotazu filter.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.HandleNullPropagationOption">
      <summary>Tento výčet určuje způsob zpracování šíření hodnoty null při podpoře dotazů.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default">
      <summary>Určuje, jak během sestavení dotazu zpracovávat šíření hodnoty null v závislosti na zprostředkovateli dotazu.Jedná se o výchozí hodnotu použitou v položce <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.False">
      <summary>Nezpracuje šíření hodnoty null během sestavení dotazu.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.True">
      <summary>Zpracuje šíření hodnoty null během sestavení dotazu.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.InlineCountQueryOption">
      <summary>Reprezentuje hodnotu možnosti dotazu $inlinecount a zveřejňuje způsob načtení řady entit odpovídajících určitému dotazu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.InlineCountQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption" />.</summary>
      <param name="rawValue">Nezpracovaná hodnota pro možnost dotazu $inlinecount.</param>
      <param name="context">Položka <see cref="T:System.Web.Http.OData.ODataQueryContext" />, která obsahuje model <see cref="T:Microsoft.Data.Edm.IEdmModel" /> a informace o typu</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.Context">
      <summary>Získá danou položku <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.InlineCountQueryOption.GetEntityCount(System.Linq.IQueryable)">
      <summary>Získá počet entit, které odpovídají danému dotazu, pokud má odpověď obsahovat vložený počet; v opačném případě hodnota null.</summary>
      <returns>Počet entit, které odpovídají zadanému dotazu, pokud má odpověď obsahovat vložený počet; v opačném případě hodnota null.</returns>
      <param name="query">Dotaz, pro který se má vypočítat počet.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.RawValue">
      <summary>Získá nezpracovanou hodnotu pro dotaz $inlinecount.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.Value">
      <summary>Získá hodnotu dotazu $inlinecount v analyzované formě.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.InlineCountValue">
      <summary>Určuje výčet pro hodnoty možnosti dotazu $inlinecount.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.InlineCountValue.AllPages">
      <summary>Odpovídá hodnotě allpages možnosti dotazu $inlinecount.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.InlineCountValue.None">
      <summary>Odpovídá hodnotě none možnosti dotazu $inlinecount.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.IPropertyMapper">
      <summary>Výsledek projekce dotazů $select a $expand je reprezentovaný jako instance <see cref="T:System.Web.Http.OData.Query.ISelectExpandWrapper" />.Tuto instanci je možné promítnout do instance <see cref="T:System.Collections.Generic.IDictionary`2" /> voláním metody <see cref="M:System.Web.Http.OData.Query.ISelectExpandWrapper.ToDictionary(System.Func{Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmStructuredType,System.Web.Http.OData.Query.IPropertyMapper})" />.Tato metoda pomocí této funkce vytvoří objekt <see cref="T:System.Web.Http.OData.Query.IPropertyMapper" />, který provede mapování názvů vlastností v dané projekci na klíče ve vráceném objektu <see cref="T:System.Collections.Generic.IDictionary`2" />.Hlavním účelem převodu instance <see cref="T:System.Web.Http.OData.Query.ISelectExpandWrapper" /> na objekt <see cref="T:System.Collections.Generic.IDictionary`2" /> (pomocí výše popsané metody) je umožnit změnu názvů vlastností v typu <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" />, které se použijí při serializaci projekce dotazů $select a $expand daným formátovacím modulem.Například tak bude možné v určitém formátovacím modulu podporovat vlastní atributy serializace.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.IPropertyMapper.MapProperty(System.String)">
      <summary>Definuje mapování mezi názvem vlastnosti <see cref="T:Microsoft.Data.Edm.IEdmProperty" /> typu <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> a názvem, který by se měl používat v jiných kontextech, například při projekci instance <see cref="T:System.Web.Http.OData.Query.ISelectExpandWrapper" /> do instance objektu <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Hodnota, která se použije jako klíč pro tuto vlastnost v objektu <see cref="T:System.Collections.Generic.IDictionary`2" />, který je výsledkem volání metody ToDictionary v instanci <see cref="T:System.Web.Http.OData.Query.ISelectExpandWrapper" />.</returns>
      <param name="propertyName">Název vlastnosti typu <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> reprezentovaný touto instancí <see cref="T:System.Web.Http.OData.Query.ISelectExpandWrapper" />.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.ISelectExpandWrapper">
      <summary>Představuje výsledek operace dotazů $select a $expand.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ISelectExpandWrapper.ToDictionary">
      <summary>Promítne výsledek operace dotazů $select a $expand do slovníku <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Objekt <see cref="T:System.Collections.Generic.IDictionary`2" /> reprezentující výsledek dotazů $select a $expand.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.ISelectExpandWrapper.ToDictionary(System.Func{Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmStructuredType,System.Web.Http.OData.Query.IPropertyMapper})">
      <summary>Promítne výsledek operace dotazu $select nebo $expand do slovníku <see cref="T:System.Collections.Generic.IDictionary`2" /> za použití daného objektu <paramref name="propertyMapperProvider" />.Objekt <paramref name="propertyMapperProvider" /> slouží k získání rozhraní <see cref="T:System.Web.Http.OData.Query.IPropertyMapper" /> pro typ <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" />, který tato instance <see cref="T:System.Web.Http.OData.Query.ISelectExpandWrapper" /> reprezentuje.Toto rozhraní <see cref="T:System.Web.Http.OData.Query.IPropertyMapper" /> se použije k mapování vlastností instance <see cref="T:System.Web.Http.OData.Query.ISelectExpandWrapper" /> na klíče vráceného objektu <see cref="T:System.Collections.Generic.IDictionary`2" />.Tato metoda se dá použít například k mapování názvů vlastností typu <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> na názvy, které by se měly použít k serializaci vlastností obsažených v této projekci.</summary>
      <returns>Objekt <see cref="T:System.Collections.Generic.IDictionary`2" /> reprezentující výsledek dotazů $select a $expand.</returns>
      <param name="propertyMapperProvider">Funkce poskytující novou instanci rozhraní <see cref="T:System.Web.Http.OData.Query.IPropertyMapper" /> pro daný typ <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> a daný model <see cref="T:Microsoft.Data.Edm.IEdmModel" />.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.ITruncatedCollection">
      <summary>Reprezentuje kolekci, která je oříznuta na danou velikost stránky.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ITruncatedCollection.IsTruncated">
      <summary>Získá hodnotu, která udává, jestli je kolekce oříznutá, nebo ne.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ITruncatedCollection.PageSize">
      <summary>Získá velikost stránky, na niž je kolekce oříznuta.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQueryOptions">
      <summary>Definuje možnosti kompozitního dotazu OData, které lze použít k sestavení dotazu.V současné době jsou podporovány pouze možnosti $filter, $orderby, $top, $skip a $inlinecount.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.#ctor(System.Web.Http.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> na základě příchozího požadavku a informací o metadatech z položky <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="context">Položka <see cref="T:System.Web.Http.OData.ODataQueryContext" />, která obsahuje model <see cref="T:Microsoft.Data.Edm.IEdmModel" /> a informace o typu.</param>
      <param name="request">Příchozí zpráva požadavku.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable)">
      <summary>Použije konkrétní dotaz na danou položku IQueryable ve správném pořadí.</summary>
      <returns>Nový objekt <see cref="T:System.Linq.IQueryable" /> po použití dotazu.</returns>
      <param name="query">Původní položka <see cref="T:System.Linq.IQueryable" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Použije konkrétní dotaz na danou položku IQueryable ve správném pořadí.</summary>
      <returns>Nový objekt <see cref="T:System.Linq.IQueryable" /> po použití dotazu.</returns>
      <param name="query">Původní položka <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">Nastavení, které se má použít při vytváření dotazu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Object,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Použije dotaz na danou entitu za použití dané položky <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />.</summary>
      <returns>Nová entita po použití dotazu $select a $expand.</returns>
      <param name="entity">Původní entita.</param>
      <param name="querySettings">Položka <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />, která obsahuje veškeré nastavení týkající se použití dotazu.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Context">
      <summary>Získá danou položku <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Filter">
      <summary>Získá konfiguraci <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.IfMatch">
      <summary>Získá položku <see cref="T:System.Web.Http.OData.Formatter.ETag" /> z hlavičky IfMatch (pokud existuje).</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.IfNoneMatch">
      <summary>Získá položku <see cref="T:System.Web.Http.OData.Formatter.ETag" /> z hlavičky IfNoneMatch (pokud existuje).</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.InlineCount">
      <summary>Získá konfiguraci <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.IsSystemQueryOption(System.String)">
      <summary>Zkontroluje, zda je daná možnost dotazu možností dotazu systému OData.</summary>
      <returns>Pokud je daná možnost dotazu možností dotazu systému OData, vrátí hodnotu true.</returns>
      <param name="queryOptionName">Název možnosti dotazu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.LimitResults``1(System.Linq.IQueryable{``0},System.Int32,System.Boolean@)">
      <summary>Omezí počet výsledků na maximální počet výsledků.</summary>
      <returns>Omezené výsledky dotazu.</returns>
      <param name="queryable">Dotazovatelná položka do stanoveného limitu.</param>
      <param name="limit">Limit výsledků dotazu.</param>
      <param name="resultsLimited">Hodnota true, pokud byly výsledky dotazu omezeny, jinak hodnota false.</param>
      <typeparam name="T">Typ entity CLR</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.OrderBy">
      <summary>Získá konfiguraci <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.RawValues">
      <summary>Získá nezpracovaný řetězec všech možností dotazu OData.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Request">
      <summary>Získá zprávu požadavku přidruženou k této instanci.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.SelectExpand">
      <summary>Získá konfiguraci <see cref="T:System.Web.Http.OData.Query.SelectExpandQueryOption" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Skip">
      <summary>Získá konfiguraci <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Top">
      <summary>Získá konfiguraci <see cref="T:System.Web.Http.OData.Query.TopQueryOption" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Ověří všechny dotazy OData, včetně dotazů $skip, $top, $orderby a $filter, na základě daného nastavení <paramref name="validationSettings" />.Pokud ověření selže, vydá výjimku ODataException.</summary>
      <param name="validationSettings">Instance položky <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />, která obsahuje veškeré nastavení ověření.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Validator">
      <summary>Získá nebo nastaví validátor dotazu.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQueryOptions`1">
      <summary>Definuje možnosti kompozitního dotazu OData, které lze použít k sestavení dotazu.V současné době jsou podporovány pouze možnosti $filter, $orderby, $top a $skip.</summary>
      <typeparam name="TEntity"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.#ctor(System.Web.Http.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> na základě příchozího požadavku a informací o metadatech z položky <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="context">Položka <see cref="T:System.Web.Http.OData.ODataQueryContext" />, která obsahuje model <see cref="T:Microsoft.Data.Edm.IEdmModel" /> a informace o typu</param>
      <param name="request">Příchozí zpráva požadavku</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable)">
      <summary>Použije konkrétní dotaz na danou položku IQueryable ve správném pořadí.</summary>
      <returns>Nový objekt <see cref="T:System.Linq.IQueryable" /> po použití dotazu.</returns>
      <param name="query">Původní položka <see cref="T:System.Linq.IQueryable" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Použije konkrétní dotaz na danou položku IQueryable ve správném pořadí.</summary>
      <returns>Nový objekt <see cref="T:System.Linq.IQueryable" /> po použití dotazu.</returns>
      <param name="query">Původní položka <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">Nastavení, které se má použít při vytváření dotazu.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions`1.IfMatch">
      <summary>Získá položku <see cref="T:System.Web.Http.OData.Formatter.ETag`1" /> z hlavičky IfMatch (pokud existuje).</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions`1.IfNoneMatch">
      <summary>Získá položku <see cref="T:System.Web.Http.OData.Formatter.ETag`1" /> z hlavičky IfNoneMatch (pokud existuje).</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQuerySettings">
      <summary>Tato třída popisuje nastavení, které se má použít při vytváření dotazu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQuerySettings.#ctor">
      <summary>Vytvoří novou instanci třídy <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> a inicializuje výchozí nastavení.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQuerySettings.#ctor(System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> na základě existující instance.</summary>
      <param name="settings">Nastavení, ze kterého se má kopírovat.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.EnableConstantParameterization">
      <summary>Získá nebo nastaví hodnotu, která určuje, zda by měly být konstanty parametrizovány.Parametrizace konstant bude mít za následek vyšší výkon při použití platformy Entity.</summary>
      <returns>Výchozí hodnota je true.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.EnsureStableOrdering">
      <summary>Získá nebo nastaví hodnotu, která udává, zda by mělo sestavení dotazu v případě potřeby změnit původní dotaz za účelem zajištění stabilního pořadí řazení.</summary>
      <returns>Hodnota true udává, že by měl být původní dotaz v případě potřeby upraven za účelem zajištění stabilního pořadí řazení.Hodnota false udává, že pořadí řazení lze považovat za stabilní i bez úpravy dotazu.Zprostředkovatelé dotazů, kteří zajišťují stabilní pořadí řazení, by měli nastavit hodnotu false.Výchozí hodnota je true.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.HandleNullPropagation">
      <summary>Získá nebo nastaví hodnotu, která udává, jak se má při sestavení dotazu postupovat v případě šíření hodnoty null.</summary>
      <returns>Výchozí hodnota je <see cref="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.PageSize">
      <summary>Získá nebo nastaví maximální počet výsledků dotazu, které mají být vráceny.</summary>
      <returns>Maximální počet výsledků dotazu, které mají být vráceny, nebo hodnota null, nechcete-li určit žádné omezení.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataRawQueryOptions">
      <summary>Reprezentuje nezpracované hodnoty dotazu v řetězcovém formátu z příchozího požadavku.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataRawQueryOptions.#ctor"></member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Expand">
      <summary>Získá nezpracovanou hodnotu příkazu $expand z identifikátoru URI příchozího požadavku, pokud existuje.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Filter">
      <summary>Získá nezpracovanou hodnotu příkazu $filter z identifikátoru URI příchozího požadavku, pokud existuje.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Format">
      <summary>Získá nezpracovanou hodnotu příkazu $format z identifikátoru URI příchozího požadavku, pokud existuje.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.InlineCount">
      <summary>Získá nezpracovanou hodnotu příkazu $inlineCount z identifikátoru URI příchozího požadavku, pokud existuje.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.OrderBy">
      <summary>Získá nezpracovanou hodnotu příkazu $orderby z identifikátoru URI příchozího požadavku, pokud existuje.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Select">
      <summary>Získá nezpracovanou hodnotu příkazu $select z identifikátoru URI příchozího požadavku, pokud existuje.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Skip">
      <summary>Získá nezpracovanou hodnotu příkazu $skip z identifikátoru URI příchozího požadavku, pokud existuje.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.SkipToken">
      <summary>Získá nezpracovanou hodnotu příkazu $skiptoken z identifikátoru URI příchozího požadavku, pokud existuje.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Top">
      <summary>Získá nezpracovanou hodnotu příkazu $top z identifikátoru URI příchozího požadavku, pokud existuje.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataValidationSettings">
      <summary>Tato třída popisuje nastavení ověřování pro potřeby dotazování.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataValidationSettings.#ctor"></member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedArithmeticOperators">
      <summary>Získá nebo nastaví seznam povolených aritmetických operátorů, například add, sub, mul, div, mod.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedFunctions">
      <summary>Získá nebo nastaví seznam povolených funkcí používaných v dotazu $filter.Mezi povolené funkce patří následující: Související s řetězcem: substringof, endswith, startswith, length, indexof, substring, tolower, toupper, trim, concat. Příklad:~/Customers?$filter=length(CompanyName) eq 19 Související s datem a časem: year, years, month, months, day, days, hour, hours, minute, minutes, second, seconds. Příklad:~/Employees?$filter=year(BirthDate) eq 1971 Související s matematikou: round, floor, ceiling Související s typem: isof, cast. Související s kolekcí: any, all.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedLogicalOperators">
      <summary>Získá nebo nastaví seznam povolených logických operátorů, například eq, ne, gt, ge, lt, le, and, or, not.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedOrderByProperties">
      <summary>Získá seznam vlastností, které umožňují řazení výsledků.Poznámka: Ve výchozím nastavení je tento seznam prázdný, což znamená, že lze provést řazení podle libovolné vlastnosti.Například prázdná kolekce znamená, že klient může seřadit dotazovatelné výsledky podle libovolných vlastností.Přidání hodnoty Name do tohoto seznamu znamená, že řazení dotazovatelného výsledku bude povoleno pouze podle vlastnosti Name.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedQueryOptions">
      <summary>Získá nebo nastaví parametry dotazu, které jsou uvnitř dotazu povoleny.Výchozí hodnotou jsou všechny možnosti dotazu, včetně možností $filter, $skip, $top, $orderby, $expand, $select, $inlineCount, $format a $skiptoken.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxAnyAllExpressionDepth">
      <summary>Získá nebo nastaví maximální hloubku elementů Any nebo All vnořených v dotazu.</summary>
      <returns>Maximální hloubka elementů Any nebo All vnořených v dotazu.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxExpansionDepth">
      <summary>Získá nebo nastaví maximální hloubku rozšíření pro možnost dotazu $expand.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxNodeCount">
      <summary>Získá nebo nastaví maximální počet uzlů v rámci stromu syntaxe dotazu $filter.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxOrderByNodeCount">
      <summary>Získá nebo nastaví maximální počet výrazů, které mohou existovat v dotazu $orderby.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxSkip">
      <summary>Získá nebo nastaví maximální hodnotu dotazu $skip, kterou může klient požadovat.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxTop">
      <summary>Získá nebo nastaví maximální hodnotu dotazu $top, kterou může klient požadovat.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByItNode">
      <summary>Reprezentuje řazení podle výrazu $it v klauzuli $orderby.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByItNode.#ctor(Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>Vytvoří novou instanci třídy <see cref="T:System.Web.Http.OData.Query.OrderByItNode" />.</summary>
      <param name="direction">Položka <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" /> pro tento uzel.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByNode">
      <summary>Reprezentuje jednoduché řazení podle výrazu v klauzuli $orderby.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByNode.#ctor(Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Query.OrderByNode" />.</summary>
      <param name="direction">Směr pořadí řazení.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByNode.CreateCollection(Microsoft.Data.OData.Query.SemanticAst.OrderByClause)">
      <summary>Vytvoří seznam instancí položky <see cref="T:System.Web.Http.OData.Query.OrderByNode" /> z odkazovaného seznamu instancí položky <see cref="T:Microsoft.Data.OData.Query.SemanticAst.OrderByClause" />.</summary>
      <returns>Seznam nových instancí položky <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" />.</returns>
      <param name="orderByClause">První pozice odkazovaného seznamu <see cref="T:Microsoft.Data.OData.Query.SemanticAst.OrderByClause" />.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByNode.Direction">
      <summary>Získá položku <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" /> pro aktuální uzel.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByPropertyNode">
      <summary>Reprezentuje řazení podle výrazu <see cref="T:Microsoft.Data.Edm.IEdmProperty" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByPropertyNode.#ctor(Microsoft.Data.Edm.IEdmProperty,Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" />.</summary>
      <param name="property">Položka <see cref="T:Microsoft.Data.Edm.IEdmProperty" /> pro tento uzel.</param>
      <param name="direction">Položka <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" /> pro tento uzel.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByPropertyNode.#ctor(Microsoft.Data.OData.Query.SemanticAst.OrderByClause)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" />.</summary>
      <param name="orderByClause">Klauzule orderby představující přístup k vlastnosti.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByPropertyNode.OrderByClause">
      <summary>Získá klauzuli <see cref="P:System.Web.Http.OData.Query.OrderByPropertyNode.OrderByClause" /> tohoto uzlu.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByPropertyNode.Property">
      <summary>Získá položku <see cref="T:Microsoft.Data.Edm.IEdmProperty" /> pro aktuální uzel.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByQueryOption">
      <summary>Definuje možnost dotazu OData $orderby pro dotazování.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" /> na základě nezpracované hodnoty $orderby a modelu EDM z položky <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">Nezpracovaná hodnota pro dotaz $orderby.Může se jednat o hodnotu null či prázdnou hodnotu.</param>
      <param name="context">Položka <see cref="T:System.Web.Http.OData.ODataQueryContext" />, která obsahuje model <see cref="T:Microsoft.Data.Edm.IEdmModel" /> a informace o typu</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo(System.Linq.IQueryable)">
      <summary>Použije dotaz $orderby na danou položku IQueryable.</summary>
      <returns>Nový objekt <see cref="T:System.Linq.IQueryable" /> po použití dotazu orderby.</returns>
      <param name="query">Původní položka <see cref="T:System.Linq.IQueryable" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Použije dotaz $orderby na danou položku IQueryable.</summary>
      <returns>Nový objekt <see cref="T:System.Linq.IQueryable" /> po použití dotazu orderby.</returns>
      <param name="query">Původní položka <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">Položka <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />, která obsahuje veškeré nastavení týkající se použití dotazu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo``1(System.Linq.IQueryable{``0})">
      <summary>Použije dotaz $orderby na danou položku IQueryable.</summary>
      <returns>Nový objekt <see cref="T:System.Linq.IQueryable" /> po použití dotazu orderby.</returns>
      <param name="query">Původní položka <see cref="T:System.Linq.IQueryable" />.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Použije dotaz $orderby na danou položku IQueryable.</summary>
      <returns>Nový objekt <see cref="T:System.Linq.IQueryable" /> po použití dotazu orderby.</returns>
      <param name="query">Původní položka <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">Položka <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />, která obsahuje veškeré nastavení týkající se použití dotazu.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.Context">
      <summary>Získá danou položku <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.OrderByClause">
      <summary>Získá analyzovanou klauzuli <see cref="P:System.Web.Http.OData.Query.OrderByQueryOption.OrderByClause" /> pro tuto možnost dotazu.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.OrderByNodes">
      <summary>Získá měnitelný seznam instancí <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" /> pro tuto možnost dotazu.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.RawValue">
      <summary>Získá nezpracovanou hodnotu pro dotaz $orderby.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Ověří dotaz orderby na základě dané položky <paramref name="validationSettings" />.Pokud ověření selže, vydá výjimku ODataException.</summary>
      <param name="validationSettings">Instance položky <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />, která obsahuje veškeré nastavení ověření.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.Validator">
      <summary>Získá nebo nastaví validátor dotazu OrderBy.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.QueryFilterProvider">
      <summary>Implementace zprostředkovatele <see cref="T:System.Web.Http.Filters.IFilterProvider" />, který použije filtr akce na každou akci s návratovým typem <see cref="T:System.Linq.IQueryable" /> nebo <see cref="T:System.Linq.IQueryable`1" /> bez vazby parametru typu <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.QueryFilterProvider.#ctor(System.Web.Http.Filters.IActionFilter)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Query.QueryFilterProvider" />.</summary>
      <param name="queryFilter">Filtr akcí, který provede daný dotaz.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.QueryFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Poskytuje filtry, které mají být použity na zadanou akci.</summary>
      <returns>Filtry, které mají být použity na zadanou akci.</returns>
      <param name="configuration">Konfigurace serveru.</param>
      <param name="actionDescriptor">Popisovač akce pro akci, pro kterou mají být poskytnuty filtry.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.QueryFilterProvider.QueryFilter">
      <summary>Získá filtr akcí, který provede daný dotaz.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.SelectExpandQueryOption">
      <summary>Představuje možnosti dotazů $select a $expand prostředí OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.SelectExpandQueryOption.#ctor(System.String,System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Query.SelectExpandQueryOption" />.</summary>
      <param name="select">Hodnota parametru dotazu $select.</param>
      <param name="expand">Hodnota parametru dotazu $select.</param>
      <param name="context">Položka <see cref="T:System.Web.Http.OData.ODataQueryContext" />, která obsahuje model <see cref="T:Microsoft.Data.Edm.IEdmModel" /> a informace o typu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.SelectExpandQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Použije volby dotazů $select a $expand pro danou položku <see cref="T:System.Linq.IQueryable" /> s využitím daného nastavení <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />.</summary>
      <returns>Nový objekt <see cref="T:System.Linq.IQueryable" /> po použití dotazu filter</returns>
      <param name="queryable">Původní položka <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="settings">Položka <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />, která obsahuje veškeré nastavení týkající se použití dotazu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.SelectExpandQueryOption.ApplyTo(System.Object,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Použije volby dotazů $select a $expand pro danou entitu s využitím daného nastavení <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />.</summary>
      <returns>Nová entita po použití dotazu $select a $expand.</returns>
      <param name="entity">Původní entita.</param>
      <param name="settings">Položka <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />, která obsahuje veškeré nastavení týkající se použití dotazu.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.SelectExpandQueryOption.Context">
      <summary>Získá danou položku <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.SelectExpandQueryOption.RawExpand">
      <summary>Získá nezpracovanou hodnotu dotazu $expand.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.SelectExpandQueryOption.RawSelect">
      <summary>Získá nezpracovanou hodnotu dotazu $select.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.SelectExpandQueryOption.SelectExpandClause">
      <summary>Získá analyzovanou klauzuli <see cref="P:System.Web.Http.OData.Query.SelectExpandQueryOption.SelectExpandClause" /> pro tuto možnost dotazu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.SelectExpandQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Ověří dotazy $select a $expand na základě daného nastavení <paramref name="validationSettings" />.Pokud ověření selže, vydá výjimku ODataException.</summary>
      <param name="validationSettings">Instance položky <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />, která obsahuje veškeré nastavení ověření.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.SelectExpandQueryOption.Validator">
      <summary>Získá nebo nastaví validátor dotazů $select a $expand.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.SkipQueryOption">
      <summary>Definuje možnost dotazu OData $skip pro dotazování.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" /> na základě nezpracované hodnoty $skip a modelu EDM z položky <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">Nezpracovaná hodnota pro dotaz $skip.Může se jednat o hodnotu null či prázdnou hodnotu.</param>
      <param name="context">Položka <see cref="T:System.Web.Http.OData.ODataQueryContext" />, která obsahuje model <see cref="T:Microsoft.Data.Edm.IEdmModel" /> a informace o typu</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Použije dotaz $skip na danou položku IQueryable.</summary>
      <returns>Nová položka <see cref="T:System.Linq.IQueryable" /> po použití dotazu skip.</returns>
      <param name="query">Původní položka <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">Nastavení dotazu, které se má použít při nastavení této možnosti dotazu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Použije dotaz $skip na danou položku IQueryable.</summary>
      <returns>Nová položka <see cref="T:System.Linq.IQueryable" /> po použití dotazu skip.</returns>
      <param name="query">Původní položka <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">Nastavení dotazu, které se má použít při nastavení této možnosti dotazu.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Context">
      <summary>Získá danou položku <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.RawValue">
      <summary>Získá nezpracovanou hodnotu pro dotaz $skip.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Ověří dotaz skip na základě dané položky <paramref name="validationSettings" />.Pokud ověření selže, vydá výjimku ODataException.</summary>
      <param name="validationSettings">Instance položky <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />, která obsahuje veškeré nastavení ověření.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Validator">
      <summary>Získá nebo nastaví validátor dotazu skip.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Value">
      <summary>Získá hodnotu dotazu $skip ve formě analyzovaného celého čísla.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.TopQueryOption">
      <summary>Definuje možnost dotazu OData $top pro dotazování.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Query.TopQueryOption" /> na základě nezpracované hodnoty $top a modelu EDM z položky <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">Nezpracovaná hodnota pro dotaz $top.Může se jednat o hodnotu null či prázdnou hodnotu.</param>
      <param name="context">Položka <see cref="T:System.Web.Http.OData.ODataQueryContext" />, která obsahuje model <see cref="T:Microsoft.Data.Edm.IEdmModel" /> a informace o typu</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Použije dotaz $top na danou položku IQueryable.</summary>
      <returns>Nový objekt <see cref="T:System.Linq.IQueryable" /> po použití dotazu top.</returns>
      <param name="query">Původní položka <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">Nastavení dotazu, které se má použít při nastavení této možnosti dotazu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Použije dotaz $top na danou položku IQueryable.</summary>
      <returns>Nový objekt <see cref="T:System.Linq.IQueryable" /> po použití dotazu top.</returns>
      <param name="query">Původní položka <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">Nastavení dotazu, které se má použít při nastavení této možnosti dotazu.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Context">
      <summary>Získá danou položku <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.RawValue">
      <summary>Získá nezpracovanou hodnotu pro dotaz $top.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Ověří dotaz top na základě dané položky <paramref name="validationSettings" />.Pokud ověření selže, vydá výjimku ODataException.</summary>
      <param name="validationSettings">Instance položky <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />, která obsahuje veškeré nastavení ověření.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Validator">
      <summary>Získá nebo nastaví validátor dotazu top.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Value">
      <summary>Získá hodnotu dotazu $top ve formě analyzovaného celého čísla.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.TruncatedCollection`1">
      <summary>Reprezentuje třídu, která ořízne kolekci na danou velikost stránky.</summary>
      <typeparam name="T">Typ elementu kolekce.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Query.TruncatedCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Query.TruncatedCollection`1" />.</summary>
      <param name="source">Kolekce k oříznutí.</param>
      <param name="pageSize">Velikost stránky.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.TruncatedCollection`1.#ctor(System.Linq.IQueryable{`0},System.Int32)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Query.TruncatedCollection`1" />.</summary>
      <param name="source">Dotazovatelná kolekce k oříznutí.</param>
      <param name="pageSize">Velikost stránky.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.TruncatedCollection`1.IsTruncated"></member>
    <member name="P:System.Web.Http.OData.Query.TruncatedCollection`1.PageSize"></member>
    <member name="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator">
      <summary>Reprezentuje validátor použitý k ověření možnosti <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" /> na základě položky <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.#ctor"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.Validate(System.Web.Http.OData.Query.FilterQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Ověří možnost <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" />.</summary>
      <param name="filterQueryOption">Dotaz $filter.</param>
      <param name="settings">Nastavení ověření.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateAllNode(Microsoft.Data.OData.Query.SemanticAst.AllNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Potlačí tuto metodu za účelem omezení dotazu all v rámci dotazu filter.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateAnyNode(Microsoft.Data.OData.Query.SemanticAst.AnyNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Potlačí tuto metodu za účelem omezení dotazu any v rámci dotazu filter.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateArithmeticOperator(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Potlačí tuto metodu pro aritmetické operátory, včetně operátorů add, sub, mul, div, mod.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateBinaryOperatorNode(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Potlačí tuto metodu za účelem omezení binárních operátorů v rámci dotazu filter.Mezi ně patří všechny logické operátory s výjimkou operátoru not a všechny matematické operátory.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateCollectionPropertyAccessNode(Microsoft.Data.OData.Query.SemanticAst.CollectionPropertyAccessNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Potlačí tuto metodu za účelem ověření přistupujícího objektu vlastnosti kolekce.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateConstantNode(Microsoft.Data.OData.Query.SemanticAst.ConstantNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Potlačí tuto metodu za účelem omezení položky constant v rámci dotazu filter.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateConvertNode(Microsoft.Data.OData.Query.SemanticAst.ConvertNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Potlačí tuto metodu za účelem omezení položky cast v rámci dotazu filter.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateEntityCollectionCastNode(Microsoft.Data.OData.Query.SemanticAst.EntityCollectionCastNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Potlačí tuto metodu v případě, že chcete v kolekcích entit ověřit položky cast.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateLogicalOperator(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Potlačí tuto metodu za účelem ověření logických operátorů, například eq, ne, gt, ge, lt, le, and, or.Upozorňujeme, že mezi tyto operátory nepatří operátor not.Chcete-li přizpůsobit operátor not, potlačte metodu ValidateUnaryOperatorNode.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateNavigationPropertyNode(Microsoft.Data.OData.Query.SemanticAst.QueryNode,Microsoft.Data.Edm.IEdmNavigationProperty,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Potlačí tuto metodu pro uzel navigační vlastnosti.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateQueryNode(Microsoft.Data.OData.Query.SemanticAst.QueryNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Potlačí tuto metodu v případě, že chcete navštívit každý uzel dotazu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateRangeVariable(Microsoft.Data.OData.Query.SemanticAst.RangeVariable,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Potlačí tuto metodu za účelem ověření parametru použitého v dotazu filter.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleEntityCastNode(Microsoft.Data.OData.Query.SemanticAst.SingleEntityCastNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Potlačí tuto metodu v případě, že chcete ověřit položky cast v jednotlivých entitách.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleValueFunctionCallNode(Microsoft.Data.OData.Query.SingleValueFunctionCallNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Potlačí tuto metodu za účelem ověření volání funkcí, například funkcí length, years atd.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleValuePropertyAccessNode(Microsoft.Data.OData.Query.SemanticAst.SingleValuePropertyAccessNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Potlačí tuto metodu za účelem ověření přistupujícího objektu vlastnosti.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateUnaryOperatorNode(Microsoft.Data.OData.Query.SemanticAst.UnaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Potlačí tuto metodu za účelem ověření operátoru not.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.ODataQueryValidator">
      <summary>Reprezentuje validátor použitý k ověření dotazů OData na základě položky <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.ODataQueryValidator.#ctor"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.ODataQueryValidator.Validate(System.Web.Http.OData.Query.ODataQueryOptions,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Ověří dotaz OData.</summary>
      <param name="options">Dotaz OData k ověření.</param>
      <param name="validationSettings">Nastavení ověření.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.OrderByQueryValidator">
      <summary>Reprezentuje validátor použitý k ověření možnosti <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" /> na základě položky <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.OrderByQueryValidator.#ctor"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.OrderByQueryValidator.Validate(System.Web.Http.OData.Query.OrderByQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Ověří možnost <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" />.</summary>
      <param name="orderByOption">Dotaz $orderby.</param>
      <param name="validationSettings">Nastavení ověření.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator">
      <summary>Reprezentuje validátor použitý k ověření možnosti <see cref="T:System.Web.Http.OData.Query.SelectExpandQueryOption" /> na základě položky <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator.#ctor"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator.Validate(System.Web.Http.OData.Query.SelectExpandQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Ověří možnost <see cref="T:System.Web.Http.OData.Query.TopQueryOption" />.</summary>
      <param name="selectExpandQueryOption">Dotaz $select a $expand.</param>
      <param name="validationSettings">Nastavení ověření.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.SkipQueryValidator">
      <summary>Reprezentuje validátor použitý k ověření možnosti <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" /> na základě položky <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.SkipQueryValidator.#ctor"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.SkipQueryValidator.Validate(System.Web.Http.OData.Query.SkipQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Ověří možnost <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" />.</summary>
      <param name="skipQueryOption">Dotaz $skip.</param>
      <param name="validationSettings">Nastavení ověření.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.TopQueryValidator">
      <summary>Reprezentuje validátor použitý k ověření možnosti <see cref="T:System.Web.Http.OData.Query.TopQueryOption" /> na základě položky <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.TopQueryValidator.#ctor"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.TopQueryValidator.Validate(System.Web.Http.OData.Query.TopQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Ověří možnost <see cref="T:System.Web.Http.OData.Query.TopQueryOption" />.</summary>
      <param name="topQueryOption">Dotaz $top.</param>
      <param name="validationSettings">Nastavení ověření.</param>
    </member>
    <member name="T:System.Web.Http.OData.Results.CreatedODataResult`1">
      <summary>Reprezentuje výsledek akce, který je odpovědí na operaci POST s převodem entity na sadu entit.</summary>
      <typeparam name="T">Typ entity.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Results.CreatedODataResult`1.#ctor(`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Uri)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Results.CreatedODataResult`1" />.</summary>
      <param name="entity">Vytvořená entita.</param>
      <param name="contentNegotiator">Vyjednavač obsahu pro zpracování vyjednávání obsahu.</param>
      <param name="request">Zpráva požadavku, která vedla k těmto výsledkům.</param>
      <param name="formatters">Formátovací moduly, které budou použity k vyjednávání a naformátování obsahu.</param>
      <param name="locationHeader">Hlavička umístění pro vytvořenou entitu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Results.CreatedODataResult`1.#ctor(`0,System.Web.Http.ApiController)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Results.CreatedODataResult`1" />.</summary>
      <param name="entity">Vytvořená entita.</param>
      <param name="controller">Kontroler, z něhož je třeba získat závislosti nutné ke zpracování.</param>
    </member>
    <member name="P:System.Web.Http.OData.Results.CreatedODataResult`1.ContentNegotiator">
      <summary>Získá vyjednavače obsahu pro zpracování vyjednávání obsahu.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Results.CreatedODataResult`1.Entity">
      <summary>Získá typ entity, která byla vytvořena.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Results.CreatedODataResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.OData.Results.CreatedODataResult`1.Formatters">
      <summary>Získá formátovací moduly, které budou použity k vyjednávání a formátování vytvořené entity.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Results.CreatedODataResult`1.LocationHeader">
      <summary>Získá hlavičku umístění vytvořené entity.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Results.CreatedODataResult`1.Request">
      <summary>Získá zprávu požadavku, která vedla k těmto výsledkům.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Results.UpdatedODataResult`1">
      <summary>Reprezentuje výsledek, který je odpovědí na operaci PUT, PATCH nebo MERGE POST s entitou OData.</summary>
      <typeparam name="T">Typ entity.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Results.UpdatedODataResult`1.#ctor(`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Results.UpdatedODataResult`1" />.</summary>
      <param name="entity">Aktualizovaná entita.</param>
      <param name="contentNegotiator">Vyjednavač obsahu pro zpracování vyjednávání obsahu.</param>
      <param name="request">Zpráva požadavku, která vedla k těmto výsledkům.</param>
      <param name="formatters">Formátovací moduly, které budou použity k vyjednávání a naformátování obsahu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Results.UpdatedODataResult`1.#ctor(`0,System.Web.Http.ApiController)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Results.UpdatedODataResult`1" />.</summary>
      <param name="entity">Aktualizovaná entita.</param>
      <param name="controller">Kontroler, z něhož je třeba získat závislosti nutné ke zpracování.</param>
    </member>
    <member name="P:System.Web.Http.OData.Results.UpdatedODataResult`1.ContentNegotiator">
      <summary>Získá vyjednavače obsahu pro zpracování vyjednávání obsahu.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Results.UpdatedODataResult`1.Entity">
      <summary>Získá typ entity, která byla aktualizována.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Results.UpdatedODataResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.OData.Results.UpdatedODataResult`1.Formatters">
      <summary>Získá formátovací moduly, které budou použity k vyjednávání a naformátování obsahu.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Results.UpdatedODataResult`1.Request">
      <summary>Získá zprávu požadavku, která vedla k těmto výsledkům.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ActionPathSegment">
      <summary>Implementace segmentu <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, která reprezentuje volání akce.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.#ctor(Microsoft.Data.Edm.IEdmFunctionImport)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.ActionPathSegment" />.</summary>
      <param name="action">Volaná akce.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.ActionPathSegment" />.</summary>
      <param name="actionName">Název akce</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.Action">
      <summary>Získá volanou akci.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.ActionName">
      <summary>Získá název akce.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Získá typ EDM pro tento segment.</summary>
      <returns>Typ EDM pro tento segment.</returns>
      <param name="previousEdmType">Typ EDM předchozího segmentu cesty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Získá sadu entit pro tento segment.</summary>
      <returns>Sada entit pro tento segment.</returns>
      <param name="previousEntitySet">Sada entit předchozího segmentu cesty.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.SegmentKind">
      <summary>Získá druh segmentu pro aktuální segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.ToString">
      <summary>Vrátí řetězec <see cref="T:System.String" /> představující tuto instanci.</summary>
      <returns>Řetězec <see cref="T:System.String" /> představující tuto instanci</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.BatchPathSegment">
      <summary>Implementace položky <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> reprezentující segment $batch.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Získá typ EDM pro tento segment.</summary>
      <returns>Typ EDM pro tento segment.</returns>
      <param name="previousEdmType">Typ EDM předchozího segmentu cesty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Získá sadu entit pro tento segment.</summary>
      <returns>Sada entit pro tento segment.</returns>
      <param name="previousEntitySet">Sada entit předchozího segmentu cesty.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.BatchPathSegment.SegmentKind">
      <summary>Získá druh segmentu pro aktuální segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.ToString">
      <summary>Vrátí řetězec <see cref="T:System.String" /> představující tuto instanci.</summary>
      <returns>Řetězec <see cref="T:System.String" /> představující tuto instanci</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.CastPathSegment">
      <summary>Implementace položky <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> reprezentující přetypování.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.#ctor(Microsoft.Data.Edm.IEdmEntityType)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.CastPathSegment" />.</summary>
      <param name="castType">Typ přetypování.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.CastPathSegment" />.</summary>
      <param name="castTypeName">Název typu přetypování.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.CastType">
      <summary>Získá typ přetypování.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.CastTypeName">
      <summary>Získá název typu přetypování.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Získá typ EDM pro tento segment.</summary>
      <returns>Typ EDM pro tento segment.</returns>
      <param name="previousEdmType">Typ EDM předchozího segmentu cesty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Získá sadu entit pro tento segment.</summary>
      <returns>Sada entit pro tento segment.</returns>
      <param name="previousEntitySet">Sada entit předchozího segmentu cesty.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.SegmentKind">
      <summary>Získá druh segmentu pro aktuální segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.ToString">
      <summary>Vrátí řetězec <see cref="T:System.String" /> představující tuto instanci.</summary>
      <returns>Řetězec <see cref="T:System.String" /> představující tuto instanci</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.DefaultODataPathHandler">
      <summary>Analyzuje cestu OData jako cestu <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> a převede cestu <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> na odkaz OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.Link(System.Web.Http.OData.Routing.ODataPath)">
      <summary>Převede instanci cesty <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> na odkaz OData.</summary>
      <returns>Vygenerovaný odkaz OData.</returns>
      <param name="path">Cesta OData, která má být převedena na odkaz.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.Parse(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary>Analyzuje zadanou cestu OData jako cestu <see cref="T:System.Web.Http.OData.Routing.ODataPath" />, která obsahuje doplňující informace o typu EDM a sadě entit pro danou cestu.</summary>
      <returns>Analyzovaná reprezentace cesty, nebo hodnota null, pokud cesta neodpovídá modelu.</returns>
      <param name="model">Model, který se má použít k analýze cesty.</param>
      <param name="odataPath">Cesta OData, která má být analyzována.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtCollection(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Analyzuje segment cesty OData následující po určité kolekci.</summary>
      <returns>Analyzovaná reprezentace segmentu.</returns>
      <param name="model">Model, který se má použít k analýze cesty.</param>
      <param name="previous">Předchozí segment cesty.</param>
      <param name="previousEdmType">Typ EDM cesty OData až do předchozího segmentu.</param>
      <param name="segment">Hodnota segmentu, který má být analyzován.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtComplex(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Analyzuje segment cesty OData následující po určitém segmentu komplexního typu.</summary>
      <returns>Analyzovaná reprezentace segmentu.</returns>
      <param name="model">Model, který se má použít k analýze cesty.</param>
      <param name="previous">Předchozí segment cesty.</param>
      <param name="previousEdmType">Typ EDM cesty OData až do předchozího segmentu.</param>
      <param name="segment">Hodnota segmentu, který má být analyzován.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtEntity(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Analyzuje segment cesty OData následující po určité entitě.</summary>
      <returns>Analyzovaná reprezentace segmentu.</returns>
      <param name="model">Model, který se má použít k analýze cesty.</param>
      <param name="previous">Předchozí segment cesty.</param>
      <param name="previousEdmType">Typ EDM cesty OData až do předchozího segmentu.</param>
      <param name="segment">Hodnota segmentu, který má být analyzován.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtEntityCollection(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Analyzuje segment cesty OData následující po určité kolekci entit.</summary>
      <returns>Analyzovaná reprezentace segmentu.</returns>
      <param name="model">Model, který se má použít k analýze cesty.</param>
      <param name="previous">Předchozí segment cesty.</param>
      <param name="previousEdmType">Typ EDM cesty OData až do předchozího segmentu.</param>
      <param name="segment">Hodnota segmentu, který má být analyzován.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtPrimitiveProperty(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Analyzuje segment cesty OData následující po určité primitivní vlastnosti.</summary>
      <returns>Analyzovaná reprezentace segmentu.</returns>
      <param name="model">Model, který se má použít k analýze cesty.</param>
      <param name="previous">Předchozí segment cesty.</param>
      <param name="previousEdmType">Typ EDM cesty OData až do předchozího segmentu.</param>
      <param name="segment">Hodnota segmentu, který má být analyzován.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseEntrySegment(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary>Analyzuje první segment OData následující po základním identifikátoru URI služby.</summary>
      <returns>Analyzovaná reprezentace segmentu.</returns>
      <param name="model">Model, který se má použít k analýze cesty.</param>
      <param name="segment">Hodnota segmentu, který má být analyzován.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseNextSegment(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Analyzuje další segment cesty OData.</summary>
      <returns>Analyzovaná reprezentace segmentu.</returns>
      <param name="model">Model, který se má použít k analýze cesty.</param>
      <param name="previous">Předchozí segment cesty.</param>
      <param name="previousEdmType">Typ EDM cesty OData až do předchozího segmentu.</param>
      <param name="segment">Hodnota segmentu, který má být analyzován.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseSegments(System.String)">
      <summary>Analyzuje cestu OData do segmentů.</summary>
      <returns>Segmenty cesty OData.</returns>
      <param name="odataPath">Cesta OData.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.EntitySetPathSegment">
      <summary>Implementace segmentu <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, která reprezentuje sadu entit.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.#ctor(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.EntitySetPathSegment" />.</summary>
      <param name="entitySet">Sada entit, ke které se získává přístup.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.EntitySetPathSegment" />.</summary>
      <param name="entitySetName">Název sady entit.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.EntitySet">
      <summary>Získá sadu entit reprezentovanou tímto segmentem.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.EntitySetName">
      <summary>Získá název sady entit.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Získá typ EDM pro tento segment.</summary>
      <returns>Typ EDM pro tento segment.</returns>
      <param name="previousEdmType">Typ EDM předchozího segmentu cesty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Získá sadu entit pro tento segment.</summary>
      <returns>Sada entit pro tento segment.</returns>
      <param name="previousEntitySet">Sada entit předchozího segmentu cesty.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.SegmentKind">
      <summary>Získá druh segmentu pro aktuální segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.ToString">
      <summary>Vrátí řetězec <see cref="T:System.String" /> představující tuto instanci.</summary>
      <returns>Řetězec <see cref="T:System.String" /> představující tuto instanci</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.IODataPathHandler">
      <summary>Zveřejní schopnost analyzovat cestu OData jako cestu <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> a převést cestu <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> na odkaz OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.IODataPathHandler.Link(System.Web.Http.OData.Routing.ODataPath)">
      <summary>Převede instanci cesty <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> na odkaz OData.</summary>
      <returns>Vygenerovaný odkaz OData.</returns>
      <param name="path">Cesta OData, která má být převedena na odkaz.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.IODataPathHandler.Parse(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary>Analyzuje zadanou cestu OData jako cestu <see cref="T:System.Web.Http.OData.Routing.ODataPath" />, která obsahuje doplňující informace o typu EDM a sadě entit pro danou cestu.</summary>
      <returns>Analyzovaná reprezentace identifikátoru URI, nebo hodnota null, pokud identifikátor URI neodpovídá modelu.</returns>
      <param name="model">Model, který se má použít k analýze cesty.</param>
      <param name="odataPath">Cesta OData, která má být analyzována.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.KeyValuePathSegment">
      <summary>Implementace položky <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> reprezentující indexování do kolekce entit podle klíče.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.KeyValuePathSegment" />.</summary>
      <param name="value">Hodnota klíče, který se má použít k indexování do kolekce.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Získá typ EDM pro tento segment.</summary>
      <returns>Typ EDM pro tento segment.</returns>
      <param name="previousEdmType">Typ EDM předchozího segmentu cesty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Získá sadu entit pro tento segment.</summary>
      <returns>Sada entit pro tento segment.</returns>
      <param name="previousEntitySet">Sada entit předchozího segmentu cesty.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.KeyValuePathSegment.SegmentKind">
      <summary>Získá druh segmentu pro aktuální segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.ToString">
      <summary>Vrátí řetězec <see cref="T:System.String" /> představující tuto instanci.</summary>
      <returns>Řetězec <see cref="T:System.String" /> představující tuto instanci</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.KeyValuePathSegment.Value">
      <summary>Získá hodnotu klíče, který se má použít k indexování do kolekce.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Routing.LinksPathSegment">
      <summary>Implementace položky <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> reprezentující segment $links.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Získá typ EDM pro tento segment.</summary>
      <returns>Typ EDM pro tento segment.</returns>
      <param name="previousEdmType">Typ EDM předchozího segmentu cesty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Získá sadu entit pro tento segment.</summary>
      <returns>Sada entit pro tento segment.</returns>
      <param name="previousEntitySet">Sada entit předchozího segmentu cesty.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.LinksPathSegment.SegmentKind">
      <summary>Získá druh segmentu pro aktuální segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.ToString">
      <summary>Vrátí řetězec <see cref="T:System.String" /> představující tuto instanci.</summary>
      <returns>Řetězec <see cref="T:System.String" /> představující tuto instanci</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.MetadataPathSegment">
      <summary>Implementace položky <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> reprezentující segment $metadata.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Získá typ EDM pro tento segment.</summary>
      <returns>Typ EDM pro tento segment.</returns>
      <param name="previousEdmType">Typ EDM předchozího segmentu cesty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Získá sadu entit pro tento segment.</summary>
      <returns>Sada entit pro tento segment.</returns>
      <param name="previousEntitySet">Sada entit předchozího segmentu cesty.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.MetadataPathSegment.SegmentKind">
      <summary>Získá druh segmentu pro aktuální segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.ToString">
      <summary>Vrátí řetězec <see cref="T:System.String" /> představující tuto instanci.</summary>
      <returns>Řetězec <see cref="T:System.String" /> představující tuto instanci</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.NavigationPathSegment">
      <summary>Implementace položky <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> reprezentující navigaci.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.#ctor(Microsoft.Data.Edm.IEdmNavigationProperty)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.NavigationPathSegment" />.</summary>
      <param name="navigationProperty">Navigační vlastnost, ke které přistupuje tento segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.NavigationPathSegment" />.</summary>
      <param name="navigationPropertyName">Název navigační vlastnosti.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Získá typ EDM pro tento segment.</summary>
      <returns>Typ EDM pro tento segment.</returns>
      <param name="previousEdmType">Typ EDM předchozího segmentu cesty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Získá sadu entit pro tento segment.</summary>
      <returns>Sada entit pro tento segment.</returns>
      <param name="previousEntitySet">Sada entit předchozího segmentu cesty.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.NavigationProperty">
      <summary>Získá navigační vlastnost, k níž přistupuje tento segment.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.NavigationPropertyName">
      <summary>Získá název navigační vlastnosti.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.SegmentKind">
      <summary>Získá druh segmentu pro aktuální segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.ToString">
      <summary>Vrátí řetězec <see cref="T:System.String" /> představující tuto instanci.</summary>
      <returns>Řetězec <see cref="T:System.String" /> představující tuto instanci</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataActionSelector">
      <summary>Implementace položky <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" />, která s využitím konvencí trasování OData serveru vybírá akci pro požadavky OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.#ctor(System.Web.Http.Controllers.IHttpActionSelector)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.ODataActionSelector" />.</summary>
      <param name="innerSelector">Vnitřní selektor kontroleru, který má být volán.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Vrátí mapu všech instancí <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />, které selektor může vytvořit, s klíči řetězce akce.Ta je primárně volána rozhraním <see cref="T:System.Web.Http.Description.IApiExplorer" /> za účelem zjištění všech možných akcí v kontroleru.</summary>
      <returns>Mapa všech instancí <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />, které selektor může vytvořit, nebo hodnota Null, pokud selektor nemá jasně definované mapování třídy <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />.</returns>
      <param name="controllerDescriptor">Popisovač kontroleru</param>
      <exception cref="T:System.NotImplementedException"></exception>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Vybere akci pro <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />.</summary>
      <returns>Vybraná akce.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPath">
      <summary>Poskytuje reprezentaci objektu pro cestu OData s doplňujícími informacemi o typu EDM a sadě entit pro danou cestu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.#ctor(System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.ODataPath" />.</summary>
      <param name="segments">Segmenty cesty pro danou cestu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.#ctor(System.Web.Http.OData.Routing.ODataPathSegment[])">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.ODataPath" />.</summary>
      <param name="segments">Segmenty cesty pro danou cestu.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.EdmType">
      <summary>Získá nebo nastaví typ EDM cesty.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.EntitySet">
      <summary>Získá nebo nastaví sadu entit dané cesty.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.PathTemplate">
      <summary>Získá šablonu cesty popisující typy segmentů v cestě.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.Segments">
      <summary>Získá segmenty cesty pro cestu OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.ToString"></member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute">
      <summary>Implementace atributu <see cref="T:System.Web.Http.ParameterBindingAttribute" /> použitého k vazbě instance cesty <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> jako parametru akce.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Načte vazby parametrů.</summary>
      <returns>Vazba parametru.</returns>
      <param name="parameter">Popis parametru.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathRouteConstraint">
      <summary>Implementace položky <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" />, která pouze odpovídá cestám OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.#ctor(System.Web.Http.OData.Routing.IODataPathHandler,Microsoft.Data.Edm.IEdmModel,System.String,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.ODataPathRouteConstraint" />.</summary>
      <param name="pathHandler">Obslužná rutina cest OData, která se má použít k analýze.</param>
      <param name="model">Model EDM, který se má použít k analýze cesty.</param>
      <param name="routeName">Název trasy, k níž je toto omezení přidruženo.</param>
      <param name="routingConventions">Konvence trasování OData, které se mají použít při výběru názvu kontroleru.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.EdmModel">
      <summary>Získá model EDM, který se má použít k analýze cesty.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Určí, zda se tato instance rovná zadané trase.</summary>
      <returns>Hodnota true, pokud se tato instance rovná zadané trase, jinak hodnota false.</returns>
      <param name="request">Žádost</param>
      <param name="route">Trasa k porovnání.</param>
      <param name="parameterName">Název parametru</param>
      <param name="values">Seznam hodnot parametrů.</param>
      <param name="routeDirection">Směr trasy.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.PathHandler">
      <summary>Získá obslužnou rutinu cest OData, která se má použít k analýze.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.RouteName">
      <summary>Získá název trasy, k níž je toto omezení přidruženo.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.RoutingConventions">
      <summary>Získá konvence trasování OData, které se mají použít při výběru názvu kontroleru.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.SelectControllerName(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary>Vybere název kontroleru, do kterého má být požadavek odeslán.</summary>
      <returns>Název kontroleru, do kterého se má provést odeslání, nebo hodnota null, pokud nelze název přeložit.</returns>
      <param name="path">Cesta OData daného požadavku.</param>
      <param name="request">Žádost</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathSegment">
      <summary>Poskytuje reprezentaci objektu pro segment cesty OData s doplňujícími informacemi o typu EDM a sadě entit pro danou cestu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Získá typ EDM pro tento segment.</summary>
      <returns>Typ EDM pro tento segment.</returns>
      <param name="previousEdmType">Typ EDM předchozího segmentu cesty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Získá sadu entit pro tento segment.</summary>
      <returns>Sada entit pro tento segment.</returns>
      <param name="previousEntitySet">Sada entit předchozího segmentu cesty.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathSegment.SegmentKind">
      <summary>Získá druh segmentu pro aktuální segment.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataRoute">
      <summary>Implementace tras pro trasy OData.Podporuje předávání předpony trasy a také omezení cesty, které analyzuje cestu požadavku jako OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataRoute.#ctor(System.String,System.Web.Http.OData.Routing.ODataPathRouteConstraint)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.ODataRoute" />.</summary>
      <param name="routePrefix">Předpona trasy</param>
      <param name="pathConstraint">Omezení cesty OData.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataRoute.#ctor(System.String,System.Web.Http.OData.Routing.ODataPathRouteConstraint,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Net.Http.HttpMessageHandler)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.ODataRoute" />.</summary>
      <param name="routePrefix">Předpona trasy</param>
      <param name="pathConstraint">Omezení cesty OData.</param>
      <param name="defaults">Výchozí hodnoty pro trasu.</param>
      <param name="constraints">Omezení trasy.</param>
      <param name="dataTokens">Tokeny dat.</param>
      <param name="handler">Popisovač zpráv pro trasu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataRoute.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="M:System.Web.Http.OData.Routing.ODataRoute.HasRelaxedODataVersionConstraint">
      <summary>Uvolnění omezení verzeSlužba umožní klientům posílat jak hlavičky OData V1 až V3, tak i hlavičky další maximální verze.Hlavičky pro další maximální verzi se budou ignorovat.</summary>
      <returns>Tato položka vrátí samu sebe, aby bylo možné zřetězit více volání.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataRoute.RoutePrefix">
      <summary>Získá předponu trasy.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataRouteConstants">
      <summary>Tato třída obsahuje konstanty trasy pro prostředí OData.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Action">
      <summary>Klíč dat trasy pro daný název akce.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Batch">
      <summary>Přípona šablony trasy pro dávku OData.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ConstraintName">
      <summary>Název parametru, který se má použít pro dané omezení trasy cesty OData.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Controller">
      <summary>Klíč dat trasy pro daný název kontroleru.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Key">
      <summary>Klíč dat trasy pro klíče entit.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.NavigationProperty">
      <summary>Klíč dat trasy pro název navigační vlastnosti při manipulaci s odkazy.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ODataPath">
      <summary>Název proměnné trasy pro cestu OData.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ODataPathTemplate">
      <summary>Zástupná šablona trasy pro proměnnou trasy cesty OData.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.RelatedKey">
      <summary>Klíč dat trasy pro související klíč při odstraňování odkazů.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.VersionConstraintName">
      <summary>Název parametru, který se má použít pro dané omezení trasy verze prostředí OData.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataSegmentKinds">
      <summary>Poskytuje hodnoty druhů segmentu pro implementace položky <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Action">
      <summary>Reprezentuje segment, který udává akci protokolu OData.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Batch">
      <summary>Reprezentuje segment $batch protokolu OData.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Cast">
      <summary>Reprezentuje segment, který určuje přetypování.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.EntitySet">
      <summary>Reprezentuje segment, který udává sadu entit.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Key">
      <summary>Reprezentuje segment, který udává index podle operace klíče.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Links">
      <summary>Reprezentuje segment $links protokolu OData.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Metadata">
      <summary>Reprezentuje segment $metadata protokolu OData.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Navigation">
      <summary>Reprezentuje segment, který určuje navigaci.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Property">
      <summary>Reprezentuje segment, který určuje přístup k vlastnosti.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.ServiceBase">
      <summary>Reprezentuje kořenový segment služby (pro dokument služby OData).</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Unresolved">
      <summary>Reprezentuje segment, který nebyl pochopen.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Value">
      <summary>Reprezentuje segment $value protokolu OData.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataVersionConstraint">
      <summary>Implementace omezení <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" />, která odpovídá jen určité verzi protokolu OData.Toto omezení neodpovídá žádným příchozím požadavkům, které obsahují některou z hlaviček prostředí OData verze 4.0, bez ohledu na verzi v hlavičkách aktuální verze.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataVersionConstraint.#ctor">
      <summary>Vytvoří novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.ODataVersionConstraint" />, která bude mít výchozí verzi v rozsahu 1.0 až 3.0.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataVersionConstraint.#ctor(Microsoft.Data.OData.ODataVersion)">
      <summary>Vytvoří novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.ODataVersionConstraint" />.Tato instance bude odpovídat jen jedné verzi protokolu.</summary>
      <param name="version">Verze protokolu, které tato instance odpovídá.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataVersionConstraint.#ctor(Microsoft.Data.OData.ODataVersion,Microsoft.Data.OData.ODataVersion)">
      <summary>Vytvoří novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.ODataVersionConstraint" />.Tato instance bude odpovídat jen jedné verzi protokolu.</summary>
      <param name="minVersion">Minimální verze protokolu, které tato instance odpovídá.</param>
      <param name="maxVersion">Maximální verze protokolu, které tato instance odpovídá.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataVersionConstraint.IsRelaxedMatch">
      <summary>Pokud je nastavené na hodnotu true, povolí předávání jak hlaviček OData V1–V3, tak i hlaviček další verze.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataVersionConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="P:System.Web.Http.OData.Routing.ODataVersionConstraint.MaxVersion">
      <summary>Maximální verze protokolu OData, kterou musí mít hlavička požadavku OData-Version nebo OData-MaxVersion, aby ji mohla služba OData s tímto omezením cesty zpracovat.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataVersionConstraint.MinVersion">
      <summary>Minimální verze protokolu OData, kterou musí mít hlavička požadavku OData-Version nebo OData-MaxVersion, aby ji mohla služba OData s tímto omezením cesty zpracovat.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment">
      <summary>Implementace položky <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> reprezentující přístup k vlastnosti.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.#ctor(Microsoft.Data.Edm.IEdmProperty)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment" />.</summary>
      <param name="property">Vlastnost, ke které přistupuje tento segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment" />.</summary>
      <param name="propertyName">Název vlastnosti.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Získá typ EDM pro tento segment.</summary>
      <returns>Typ EDM pro tento segment.</returns>
      <param name="previousEdmType">Typ EDM předchozího segmentu cesty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Získá sadu entit pro tento segment.</summary>
      <returns>Sada entit pro tento segment.</returns>
      <param name="previousEntitySet">Sada entit předchozího segmentu cesty.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.Property">
      <summary>Získá vlastnost, k níž přistupuje tento segment.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.PropertyName">
      <summary>Získá název vlastnosti.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.SegmentKind">
      <summary>Získá druh segmentu pro aktuální segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.ToString">
      <summary>Vrátí řetězec <see cref="T:System.String" /> představující tuto instanci.</summary>
      <returns>Řetězec <see cref="T:System.String" /> představující tuto instanci</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.UnresolvedPathSegment">
      <summary>Implementace položky <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> reprezentující segment, který nebylo možné přeložit.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Http.OData.Routing.UnresolvedPathSegment" />.</summary>
      <param name="segmentValue">Hodnota nepřeloženého segmentu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Získá typ EDM pro tento segment.</summary>
      <returns>Typ EDM pro tento segment.</returns>
      <param name="previousEdmType">Typ EDM předchozího segmentu cesty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Získá sadu entit pro tento segment.</summary>
      <returns>Sada entit pro tento segment.</returns>
      <param name="previousEntitySet">Sada entit předchozího segmentu cesty.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.UnresolvedPathSegment.SegmentKind">
      <summary>Získá druh segmentu pro aktuální segment.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.UnresolvedPathSegment.SegmentValue">
      <summary>Získá hodnotu nepřeloženého segmentu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.ToString">
      <summary>Vrátí řetězec <see cref="T:System.String" /> představující tuto instanci.</summary>
      <returns>Řetězec <see cref="T:System.String" /> představující tuto instanci</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ValuePathSegment">
      <summary>Implementace položky <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> reprezentující segment $value.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Získá typ EDM pro tento segment.</summary>
      <returns>Typ EDM pro tento segment.</returns>
      <param name="previousEdmType">Typ EDM předchozího segmentu cesty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Získá sadu entit pro tento segment.</summary>
      <returns>Sada entit pro tento segment.</returns>
      <param name="previousEntitySet">Sada entit předchozího segmentu cesty.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ValuePathSegment.SegmentKind">
      <summary>Získá druh segmentu pro aktuální segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.ToString">
      <summary>Vrátí řetězec <see cref="T:System.String" /> představující tuto instanci.</summary>
      <returns>Řetězec <see cref="T:System.String" /> představující tuto instanci</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention">
      <summary>Implementace konvence <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, která zpracovává volání akce.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Vybere akci pro požadavky OData.</summary>
      <returns>Hodnota null, pokud daný požadavek není zpracováván touto konvencí, jinak název vybrané akce</returns>
      <param name="odataPath">Cesta OData.</param>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionMap">Mapa akce.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention">
      <summary>Implementace konvence <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, která zpracovává operace s entitami podle klíče.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Vybere akci pro požadavky OData.</summary>
      <returns>Hodnota null, pokud daný požadavek není zpracováván touto konvencí, jinak název vybrané akce</returns>
      <param name="odataPath">Cesta OData.</param>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionMap">Mapa akce.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention">
      <summary>Implementace konvence <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, která zpracovává sady entit.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Vybere akci pro požadavky OData.</summary>
      <returns>Hodnota null, pokud daný požadavek není zpracováván touto konvencí, jinak název vybrané akce</returns>
      <param name="odataPath">Cesta OData.</param>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionMap">Mapa akce.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary>Vybere kontroler pro požadavky OData.</summary>
      <returns>Hodnota null, pokud daný požadavek není zpracováván touto konvencí, jinak název vybraného kontroleru</returns>
      <param name="odataPath">Cesta OData.</param>
      <param name="request">Žádost</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention">
      <summary>Poskytuje abstrakci pro výběr kontroleru a akci pro požadavky OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Vybere akci pro požadavky OData.</summary>
      <returns>Hodnota null, pokud daný požadavek není zpracováván touto konvencí, jinak název vybrané akce</returns>
      <param name="odataPath">Cesta OData.</param>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionMap">Mapa akce.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary>Vybere kontroler pro požadavky OData.</summary>
      <returns>Hodnota null, pokud daný požadavek není zpracováván touto konvencí, jinak název vybraného kontroleru</returns>
      <param name="odataPath">Cesta OData.</param>
      <param name="request">Žádost</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention">
      <summary>Implementace konvence <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, která zpracovává manipulaci s odkazy.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Vybere akci.</summary>
      <param name="odataPath">Cesta OData.</param>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionMap">Mapa akce.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention">
      <summary>Implementace konvence <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, která zpracovává požadavky na metadata OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Vybere akci pro požadavky OData.</summary>
      <returns>Hodnota null, pokud daný požadavek není zpracováván touto konvencí, jinak název vybrané akce</returns>
      <param name="odataPath">Cesta OData.</param>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionMap">Mapa akce.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary>Vybere kontroler pro požadavky OData.</summary>
      <returns>Hodnota null, pokud daný požadavek není zpracováván touto konvencí, jinak název vybraného kontroleru</returns>
      <param name="odataPath">Cesta OData.</param>
      <param name="request">Žádost</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention">
      <summary>Implementace konvence <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, která zpracovává navigační vlastnosti.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Vybere akci.</summary>
      <param name="odataPath">Cesta OData.</param>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionMap">Mapa akce.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.ODataRoutingConventions">
      <summary>Poskytuje pomocné metody pro vytváření konvencí směrování.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ODataRoutingConventions.CreateDefault">
      <summary>Vytvoří měnitelný seznam výchozích konvencí směrování protokolu OData.</summary>
      <returns>Měnitelný seznam výchozích konvencí směrování protokolu OData.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.PropertyRoutingConvention">
      <summary>Implementace konvence <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, která zpracovává čtení strukturálních vlastností.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.PropertyRoutingConvention.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.PropertyRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})"></member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention">
      <summary>Implementace konvence <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, která vždy vybere akci s názvem HandleUnmappedRequest, pokud je tato akce přítomná.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Vybere akci.</summary>
      <param name="odataPath">Cesta OData.</param>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionMap">Mapa akce.</param>
    </member>
  </members>
</doc>