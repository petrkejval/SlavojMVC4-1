
@{
    ViewBag.Title = "Druzstva";
}

@*<h2>Druzstva</h2>*@


@{
    Html.Telerik()
        .Grid<DruzstvoEditable>()
        .Name("DruzstvaGrid")
        .DataKeys(keys => keys.Add(c => c.DruzstvoId))
        .DataBinding(dataBinding => dataBinding.Ajax()
            .Select("DruzstvaSelect", "DruzstvaGrid")
            .Insert("DruzstvaInsert", "DruzstvaGrid")
            .Update("DruzstvaUpdate", "DruzstvaGrid")
            .Delete("DruzstvaDelete", "DruzstvaGrid")
            )
        .ToolBar(commands => commands.Insert().ButtonType(GridButtonType.Text).ImageHtmlAttributes(new { style = "margin-left:0" }))
        .Editable(editing => editing.Mode(GridEditMode.InLine))
        .Columns(columns =>
                {
                    columns.Command(commands =>
                    {
                        commands.Edit().ButtonType(GridButtonType.BareImage);
                        commands.Delete().ButtonType(GridButtonType.BareImage);
                    }).Width(80);//.Title("Commands");

                    //columns.ForeignKey(o => o.KategorieSoutezeId, (System.Collections.IEnumerable)ViewBag.KategorieSouteziListItem, "Id", "Name").Width("*");
                    columns.Bound(o => o.Nazev).Width(150);
                    columns.Bound(o => o.Pismeno).Width(80);
                    //columns.Bound(o => o.SoutezId).Width(100);
                    columns.ForeignKey(o => o.SoutezId, (System.Collections.IEnumerable)ViewBag.SoutezeListItem, "Id", "Name").Width("*");
                    //columns.Bound(o => o.VedouciId).Width(100);
                    columns.ForeignKey(o => o.VedouciId, (System.Collections.IEnumerable)ViewBag.DruzstvaCleniListItem, "Id", "Name").Width("*");
                    //columns.Bound(o => o.TrenerId).Width(100);
                    columns.ForeignKey(o => o.TrenerId, (System.Collections.IEnumerable)ViewBag.TreneriListItem, "Id", "Name").Width("*");
                    columns.Bound(o => o.Image).Width(100).Visible(false);
                    columns.ForeignKey(o => o.WebPageId, (System.Collections.IEnumerable)ViewBag.WebPagesListItem, "Id", "Name").Width("*");
                    columns.Bound(o => o.Existuje).Width(100).ClientTemplate("<input type='checkbox' disabled='disabled' name='cbExistuje' <#=Existuje? checked='checked' : '' #> />");
                }
            )
        //.ClientEvents(events => events.OnRowDataBound("druzstva_onDataBound"))
        .DetailView(detail => detail.ClientTemplate(
            Html.Telerik().Grid<DruzstvaClenEditable>()
                .Name("DruzstvaClen_<#= DruzstvoId #>")
                .DataKeys(keys =>
                    {
                        keys.Add(c => c.DruzstvoClenId);
                    })
                .Columns(columns =>
                {
                    columns.Command(commands =>
                    {
                        commands.Edit().ButtonType(GridButtonType.BareImage);
                        commands.Delete().ButtonType(GridButtonType.BareImage);
                    }).Width(80);//.Title("Commands");

                    //columns.Bound(o => o.DruzstvoId).Width(150);
                    //columns.Bound(o => o.ClenId).Width(80);
                    columns.ForeignKey(o => o.ClenId, (System.Collections.IEnumerable)ViewBag.DruzstvaCleniListItem, "Id", "Name").Width("*");
                }
                )
                .ToolBar(commands => commands.Insert().ButtonType(GridButtonType.Text).ImageHtmlAttributes(new { style = "margin-left:0" }))
                .Editable(editing => editing.Mode(GridEditMode.InLine))
                 .DataBinding(dataBinding => dataBinding.Ajax()
                    .Select("CleniSelect", "DruzstvaGrid", new { druzstvoId = "<#= DruzstvoId #>" })
                    .Insert("CleniInsert", "DruzstvaGrid", new { druzstvoId = "<#= DruzstvoId #>" })
                    .Update("CleniUpdate", "DruzstvaGrid", new { druzstvoId = "<#= DruzstvoId #>" })
                    .Delete("CleniDelete", "DruzstvaGrid", new { druzstvoId = "<#= DruzstvoId #>" })
                    )

                .Pageable()
                .Sortable()
                .Filterable()
                .ToHtmlString()

            )
        )

        .Localizable("cs-CZ")
        .Reorderable(reorder => reorder.Columns(true))
        .Resizable(resize => resize.Columns(true))
        .Scrollable(sc => sc.Height("*"))
        .Filterable()
        .Sortable()
        .Pageable()
        .Render()
        ;
}
@*<script type="text/javascript">

function expandFirstRow(grid, row) {
    if (grid.$rows().index(row) == 0) {
        grid.expandRow(row);
    }
}

function druzstva_onDataBound(e) {
    var grid = $(this).data('tGrid');
    expandFirstRow(grid, e.row);
}

</script>*@ 
<style type="text/css">
    #contentcolumn {
        margin-right: 0;
    }

    #rightcolumn {
        display: none;
    }
</style>
